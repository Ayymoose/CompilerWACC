
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.functions statements END 
	functions: .    (3)

	.  reduce 3 (src line 103)

	functions  goto 3

state 3
	program:  BEGIN functions.statements END 
	functions:  functions.function 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	function  goto 5
	statement  goto 6
	statements  goto 4
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 7
	arraytype  goto 22
	pairtype  goto 23

state 4
	program:  BEGIN functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 33
	SEMICOLON  shift 34
	.  error


state 5
	functions:  functions function.    (2)

	.  reduce 2 (src line 102)


state 6
	statements:  statement.    (18)

	.  reduce 18 (src line 134)


state 7
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 35
	.  error


state 8
	statement:  SKIP.    (19)

	.  reduce 19 (src line 137)


state 9
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 37
	.  error


state 10
	assignlhs:  IDENTIFIER.    (9)
	statement:  IDENTIFIER.PLUS ASSIGNMENT expr 
	arrayelem:  IDENTIFIER.bracketed 

	PLUS  shift 38
	OPENSQUARE  shift 40
	.  reduce 9 (src line 123)

	bracketed  goto 39

state 11
	statement:  READ.assignlhs 

	FST  shift 31
	SND  shift 32
	IDENTIFIER  shift 42
	.  error

	assignlhs  goto 41
	pairelem  goto 25
	arrayelem  goto 24

state 12
	statement:  FREE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 43
	arrayelem  goto 51
	pairliter  goto 49

state 13
	statement:  RETURN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 60
	arrayelem  goto 51
	pairliter  goto 49

state 14
	statement:  EXIT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 61
	arrayelem  goto 51
	pairliter  goto 49

state 15
	statement:  PRINT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 62
	arrayelem  goto 51
	pairliter  goto 49

state 16
	statement:  PRINTLN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 63
	arrayelem  goto 51
	pairliter  goto 49

state 17
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 64
	arrayelem  goto 51
	pairliter  goto 49

state 18
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 65
	arrayelem  goto 51
	pairliter  goto 49

state 19
	statement:  BEGIN.statements END 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 66
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 20
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 69
	FI  shift 70
	DONE  shift 71
	SEMICOLON  shift 68
	.  error


state 21
	typeDef:  basetype.    (78)

	.  reduce 78 (src line 230)


state 22
	typeDef:  arraytype.    (79)

	.  reduce 79 (src line 231)


state 23
	typeDef:  pairtype.    (80)

	.  reduce 80 (src line 232)


state 24
	assignlhs:  arrayelem.    (10)

	.  reduce 10 (src line 124)


state 25
	assignlhs:  pairelem.    (11)

	.  reduce 11 (src line 125)


state 26
	basetype:  INT.    (81)

	.  reduce 81 (src line 234)


state 27
	basetype:  BOOL.    (82)

	.  reduce 82 (src line 235)


state 28
	basetype:  CHAR.    (83)

	.  reduce 83 (src line 236)


state 29
	basetype:  STRING.    (84)

	.  reduce 84 (src line 237)


state 30
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 72
	.  error


state 31
	pairelem:  FST.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 73
	arrayelem  goto 51
	pairliter  goto 49

state 32
	pairelem:  SND.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 74
	arrayelem  goto 51
	pairliter  goto 49

state 33
	program:  BEGIN functions statements END.    (1)

	.  reduce 1 (src line 98)


state 34
	statements:  statements SEMICOLON.statement 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 75
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 35
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 76
	ASSIGNMENT  shift 77
	.  error


state 36
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 78
	.  error


state 37
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 83
	CALL  shift 84
	FST  shift 31
	SND  shift 32
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 85
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 79
	expr  goto 80
	pairelem  goto 82
	arrayliter  goto 81
	arrayelem  goto 51
	pairliter  goto 49

state 38
	statement:  IDENTIFIER PLUS.ASSIGNMENT expr 

	ASSIGNMENT  shift 86
	.  error


state 39
	arrayelem:  IDENTIFIER bracketed.    (68)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 87
	.  reduce 68 (src line 212)


state 40
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 88
	arrayelem  goto 51
	pairliter  goto 49

state 41
	statement:  READ assignlhs.    (23)

	.  reduce 23 (src line 146)


state 42
	assignlhs:  IDENTIFIER.    (9)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 40
	.  reduce 9 (src line 123)

	bracketed  goto 39

state 43
	statement:  FREE expr.    (24)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 24 (src line 147)


state 44
	expr:  INTEGER.    (36)

	.  reduce 36 (src line 171)


state 45
	expr:  TRUE.    (37)

	.  reduce 37 (src line 173)


state 46
	expr:  FALSE.    (38)

	.  reduce 38 (src line 174)


state 47
	expr:  CHARACTER.    (39)

	.  reduce 39 (src line 176)


state 48
	expr:  STRINGCONST.    (40)

	.  reduce 40 (src line 177)


state 49
	expr:  pairliter.    (41)

	.  reduce 41 (src line 178)


state 50
	expr:  IDENTIFIER.    (42)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 40
	.  reduce 42 (src line 179)

	bracketed  goto 39

state 51
	expr:  arrayelem.    (43)

	.  reduce 43 (src line 180)


state 52
	expr:  NOT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 102
	arrayelem  goto 51
	pairliter  goto 49

state 53
	expr:  LEN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 103
	arrayelem  goto 51
	pairliter  goto 49

state 54
	expr:  ORD.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 104
	arrayelem  goto 51
	pairliter  goto 49

state 55
	expr:  CHR.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 105
	arrayelem  goto 51
	pairliter  goto 49

state 56
	expr:  SUB.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 106
	arrayelem  goto 51
	pairliter  goto 49

state 57
	expr:  PLUS.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 107
	arrayelem  goto 51
	pairliter  goto 49

state 58
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 108
	arrayelem  goto 51
	pairliter  goto 49

state 59
	pairliter:  NULL.    (71)

	.  reduce 71 (src line 218)


state 60
	statement:  RETURN expr.    (25)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 25 (src line 148)


state 61
	statement:  EXIT expr.    (26)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 26 (src line 149)


state 62
	statement:  PRINT expr.    (27)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 27 (src line 150)


state 63
	statement:  PRINTLN expr.    (28)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 28 (src line 151)


state 64
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 109
	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  error


state 65
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 110
	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  error


state 66
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 111
	SEMICOLON  shift 34
	.  error


state 67
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 112
	.  error


state 68
	statement:  error SEMICOLON.    (32)

	.  reduce 32 (src line 155)


state 69
	statement:  error END.    (33)

	.  reduce 33 (src line 159)


state 70
	statement:  error FI.    (34)

	.  reduce 34 (src line 162)


state 71
	statement:  error DONE.    (35)

	.  reduce 35 (src line 166)


state 72
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 116
	.  error

	basetype  goto 114
	typeDef  goto 117
	arraytype  goto 115
	pairtype  goto 23
	pairelemtype  goto 113

state 73
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (72)

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 72 (src line 221)


state 74
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (73)

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 73 (src line 222)


state 75
	statements:  statements SEMICOLON statement.    (17)

	.  reduce 17 (src line 133)


state 76
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	CLOSEROUND  shift 118
	.  error

	paramlist  goto 119
	param  goto 120
	basetype  goto 21
	typeDef  goto 121
	arraytype  goto 22
	pairtype  goto 23

state 77
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 83
	CALL  shift 84
	FST  shift 31
	SND  shift 32
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 85
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 122
	expr  goto 80
	pairelem  goto 82
	arrayliter  goto 81
	arrayelem  goto 51
	pairliter  goto 49

state 78
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (85)

	.  reduce 85 (src line 239)


state 79
	statement:  assignlhs ASSIGNMENT assignrhs.    (21)

	.  reduce 21 (src line 139)


state 80
	assignrhs:  expr.    (12)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 12 (src line 127)


state 81
	assignrhs:  arrayliter.    (13)

	.  reduce 13 (src line 128)


state 82
	assignrhs:  pairelem.    (14)

	.  reduce 14 (src line 129)


state 83
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 123
	.  error


state 84
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 124
	.  error


state 85
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (67)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 67 (src line 210)

	expr  goto 126
	exprlist  goto 125
	arrayelem  goto 51
	pairliter  goto 49

state 86
	statement:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 127
	arrayelem  goto 51
	pairliter  goto 49

state 87
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 128
	arrayelem  goto 51
	pairliter  goto 49

state 88
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	CLOSESQUARE  shift 129
	.  error


state 89
	expr:  expr PLUS.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 130
	arrayelem  goto 51
	pairliter  goto 49

state 90
	expr:  expr SUB.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 131
	arrayelem  goto 51
	pairliter  goto 49

state 91
	expr:  expr MUL.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 132
	arrayelem  goto 51
	pairliter  goto 49

state 92
	expr:  expr MOD.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 133
	arrayelem  goto 51
	pairliter  goto 49

state 93
	expr:  expr DIV.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 134
	arrayelem  goto 51
	pairliter  goto 49

state 94
	expr:  expr LT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 135
	arrayelem  goto 51
	pairliter  goto 49

state 95
	expr:  expr GT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 136
	arrayelem  goto 51
	pairliter  goto 49

state 96
	expr:  expr LTE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 137
	arrayelem  goto 51
	pairliter  goto 49

state 97
	expr:  expr GTE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 138
	arrayelem  goto 51
	pairliter  goto 49

state 98
	expr:  expr EQ.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 139
	arrayelem  goto 51
	pairliter  goto 49

state 99
	expr:  expr NEQ.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 140
	arrayelem  goto 51
	pairliter  goto 49

state 100
	expr:  expr AND.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 141
	arrayelem  goto 51
	pairliter  goto 49

state 101
	expr:  expr OR.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 142
	arrayelem  goto 51
	pairliter  goto 49

state 102
	expr:  NOT expr.    (44)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 44 (src line 182)


state 103
	expr:  LEN expr.    (45)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 45 (src line 183)


state 104
	expr:  ORD expr.    (46)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 46 (src line 184)


state 105
	expr:  CHR expr.    (47)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 47 (src line 185)


state 106
	expr:  SUB expr.    (48)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 48 (src line 186)


state 107
	expr:  PLUS expr.    (49)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 49 (src line 187)


state 108
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	CLOSEROUND  shift 143
	.  error


state 109
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 144
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 110
	statement:  WHILE expr DO.statements DONE 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 145
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 111
	statement:  BEGIN statements END.    (31)

	.  reduce 31 (src line 154)


state 112
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 77
	.  error


state 113
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 146
	.  error


state 114
	pairelemtype:  basetype.    (75)
	typeDef:  basetype.    (78)

	OPENSQUARE  reduce 78 (src line 230)
	.  reduce 75 (src line 226)


state 115
	pairelemtype:  arraytype.    (76)
	typeDef:  arraytype.    (79)

	OPENSQUARE  reduce 79 (src line 231)
	.  reduce 76 (src line 227)


state 116
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (77)

	OPENROUND  shift 72
	.  reduce 77 (src line 228)


state 117
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	.  error


state 118
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 147
	.  error


state 119
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 148
	COMMA  shift 149
	.  error


state 120
	paramlist:  param.    (7)

	.  reduce 7 (src line 119)


state 121
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 150
	.  error


state 122
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (20)

	.  reduce 20 (src line 138)


state 123
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 151
	arrayelem  goto 51
	pairliter  goto 49

state 124
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 152
	.  error


state 125
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 153
	COMMA  shift 154
	.  error


state 126
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (66)

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 66 (src line 209)


state 127
	statement:  IDENTIFIER PLUS ASSIGNMENT expr.    (22)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 22 (src line 141)


state 128
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	CLOSESQUARE  shift 155
	.  error


state 129
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (70)

	.  reduce 70 (src line 215)


state 130
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (50)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 50 (src line 190)


state 131
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (51)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 51 (src line 191)


state 132
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (52)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 52 (src line 192)


state 133
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (53)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 53 (src line 193)


state 134
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (54)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 54 (src line 194)


state 135
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (55)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 55 (src line 195)


state 136
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (56)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 56 (src line 196)


state 137
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (57)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 57 (src line 197)


state 138
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (58)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 58 (src line 198)


state 139
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (59)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 59 (src line 199)


state 140
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (60)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	.  reduce 60 (src line 200)


state 141
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (61)
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 61 (src line 201)


state 142
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (62)

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 62 (src line 202)


state 143
	expr:  OPENROUND expr CLOSEROUND.    (63)

	.  reduce 63 (src line 203)


state 144
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 156
	SEMICOLON  shift 34
	.  error


state 145
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 157
	SEMICOLON  shift 34
	.  error


state 146
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 116
	.  error

	basetype  goto 114
	typeDef  goto 117
	arraytype  goto 115
	pairtype  goto 23
	pairelemtype  goto 158

state 147
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 159
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 148
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 160
	.  error


state 149
	paramlist:  paramlist COMMA.param 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	.  error

	param  goto 161
	basetype  goto 21
	typeDef  goto 121
	arraytype  goto 22
	pairtype  goto 23

state 150
	param:  typeDef IDENTIFIER.    (8)

	.  reduce 8 (src line 121)


state 151
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	COMMA  shift 162
	.  error


state 152
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (67)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 67 (src line 210)

	expr  goto 126
	exprlist  goto 163
	arrayelem  goto 51
	pairliter  goto 49

state 153
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (64)

	.  reduce 64 (src line 206)


state 154
	exprlist:  exprlist COMMA.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 164
	arrayelem  goto 51
	pairliter  goto 49

state 155
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (69)

	.  reduce 69 (src line 214)


state 156
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 165
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 157
	statement:  WHILE expr DO statements DONE.    (30)

	.  reduce 30 (src line 153)


state 158
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 166
	.  error


state 159
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 167
	SEMICOLON  shift 34
	.  error


state 160
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 168
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 67
	arraytype  goto 22
	pairtype  goto 23

state 161
	paramlist:  paramlist COMMA param.    (6)

	.  reduce 6 (src line 118)


state 162
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 169
	arrayelem  goto 51
	pairliter  goto 49

state 163
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 170
	COMMA  shift 154
	.  error


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (65)

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	.  reduce 65 (src line 208)


state 165
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 171
	SEMICOLON  shift 34
	.  error


state 166
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (74)

	.  reduce 74 (src line 224)


state 167
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (4)

	.  reduce 4 (src line 105)


state 168
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 172
	SEMICOLON  shift 34
	.  error


state 169
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 91
	DIV  shift 93
	MOD  shift 92
	PLUS  shift 89
	SUB  shift 90
	AND  shift 100
	OR  shift 101
	GT  shift 95
	GTE  shift 97
	LT  shift 94
	LTE  shift 96
	EQ  shift 98
	NEQ  shift 99
	CLOSEROUND  shift 173
	.  error


state 170
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (16)

	.  reduce 16 (src line 131)


state 171
	statement:  IF expr THEN statements ELSE statements FI.    (29)

	.  reduce 29 (src line 152)


state 172
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (5)

	.  reduce 5 (src line 111)


state 173
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (15)

	.  reduce 15 (src line 130)


64 terminals, 22 nonterminals
86 grammar rules, 174/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 295/30000
150 extra closures
1106 shift entries, 3 exceptions
90 goto entries
136 entries saved by goto default
Optimizer space used: output 425/30000
425 table entries, 60 zero
maximum spread: 64, maximum offset: 162
