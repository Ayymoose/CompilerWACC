
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.classes functions statements END 
	classes: .    (3)

	.  reduce 3 (src line 116)

	classes  goto 3

state 3
	program:  BEGIN classes.functions statements END 
	classes:  classes.class 
	functions: .    (9)

	CLASS  shift 6
	.  reduce 9 (src line 131)

	class  goto 5
	functions  goto 4

state 4
	program:  BEGIN classes functions.statements END 
	functions:  functions.function 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	function  goto 8
	statement  goto 9
	statements  goto 7
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 11
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 5
	classes:  classes class.    (2)

	.  reduce 2 (src line 115)


state 6
	class:  CLASS.IDENTIFIER OPEN fieldlist functions CLOSE 

	IDENTIFIER  shift 39
	.  error


state 7
	program:  BEGIN classes functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 40
	SEMICOLON  shift 41
	.  error


state 8
	functions:  functions function.    (8)

	.  reduce 8 (src line 130)


state 9
	statements:  statement.    (28)

	.  reduce 28 (src line 166)


state 10
	statements:  FOR.typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	statement:  FOR.expr SEMICOLON assignment DO statements DONE 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 43
	arrayelem  goto 51
	pairliter  goto 49
	basetype  goto 25
	typeDef  goto 42
	arraytype  goto 26
	pairtype  goto 27

state 11
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 60
	.  error


state 12
	statement:  SKIP.    (30)

	.  reduce 30 (src line 174)


state 13
	statement:  assignment.    (32)

	.  reduce 32 (src line 177)


state 14
	statement:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 
	statement:  CALL.IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 62
	.  error


state 15
	statement:  READ.assignlhs 

	FST  shift 37
	SND  shift 38
	IDENTIFIER  shift 64
	.  error

	assignlhs  goto 63
	pairelem  goto 36
	arrayelem  goto 35

state 16
	statement:  FREE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 65
	arrayelem  goto 51
	pairliter  goto 49

state 17
	statement:  RETURN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 66
	arrayelem  goto 51
	pairliter  goto 49

state 18
	statement:  EXIT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 67
	arrayelem  goto 51
	pairliter  goto 49

state 19
	statement:  PRINT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 68
	arrayelem  goto 51
	pairliter  goto 49

state 20
	statement:  PRINTLN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 69
	arrayelem  goto 51
	pairliter  goto 49

state 21
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 70
	arrayelem  goto 51
	pairliter  goto 49

state 22
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 71
	arrayelem  goto 51
	pairliter  goto 49

state 23
	statement:  BEGIN.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 72
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 24
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 75
	FI  shift 76
	DONE  shift 77
	SEMICOLON  shift 74
	.  error


state 25
	typeDef:  basetype.    (100)

	.  reduce 100 (src line 278)


state 26
	typeDef:  arraytype.    (101)

	.  reduce 101 (src line 279)


state 27
	typeDef:  pairtype.    (102)

	.  reduce 102 (src line 280)


state 28
	assignment:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 78
	.  error


state 29
	assignlhs:  IDENTIFIER.    (15)
	assignlhs:  IDENTIFIER.DOT IDENTIFIER 
	assignment:  IDENTIFIER.PLUS ASSIGNMENT expr 
	assignment:  IDENTIFIER.SUB ASSIGNMENT expr 
	assignment:  IDENTIFIER.DIV ASSIGNMENT expr 
	assignment:  IDENTIFIER.MUL ASSIGNMENT expr 
	assignment:  IDENTIFIER.MOD ASSIGNMENT expr 
	assignment:  IDENTIFIER.PLUS PLUS 
	assignment:  IDENTIFIER.SUB SUB 
	assignment:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	DOT  shift 79
	MUL  shift 83
	DIV  shift 82
	MOD  shift 84
	PLUS  shift 80
	SUB  shift 81
	OPENSQUARE  shift 86
	.  reduce 15 (src line 151)

	bracketed  goto 85

state 30
	basetype:  INT.    (103)

	.  reduce 103 (src line 282)


state 31
	basetype:  BOOL.    (104)

	.  reduce 104 (src line 283)


state 32
	basetype:  CHAR.    (105)

	.  reduce 105 (src line 284)


state 33
	basetype:  STRING.    (106)

	.  reduce 106 (src line 285)


state 34
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 87
	.  error


state 35
	assignlhs:  arrayelem.    (16)

	.  reduce 16 (src line 152)


state 36
	assignlhs:  pairelem.    (17)

	.  reduce 17 (src line 153)


state 37
	pairelem:  FST.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 88
	arrayelem  goto 51
	pairliter  goto 49

state 38
	pairelem:  SND.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 89
	arrayelem  goto 51
	pairliter  goto 49

state 39
	class:  CLASS IDENTIFIER.OPEN fieldlist functions CLOSE 

	OPEN  shift 90
	.  error


state 40
	program:  BEGIN classes functions statements END.    (1)

	.  reduce 1 (src line 110)


state 41
	statements:  statements SEMICOLON.statement 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 92
	IDENTIFIER  shift 29
	.  error

	statement  goto 91
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 42
	statements:  FOR typeDef.IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 93
	.  error


state 43
	statement:  FOR expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	SEMICOLON  shift 94
	.  error


state 44
	expr:  INTEGER.    (58)

	.  reduce 58 (src line 224)


state 45
	expr:  TRUE.    (59)

	.  reduce 59 (src line 225)


state 46
	expr:  FALSE.    (60)

	.  reduce 60 (src line 226)


state 47
	expr:  CHARACTER.    (61)

	.  reduce 61 (src line 227)


state 48
	expr:  STRINGCONST.    (62)

	.  reduce 62 (src line 228)


state 49
	expr:  pairliter.    (63)

	.  reduce 63 (src line 229)


state 50
	expr:  IDENTIFIER.    (64)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 86
	.  reduce 64 (src line 230)

	bracketed  goto 85

state 51
	expr:  arrayelem.    (65)

	.  reduce 65 (src line 231)


state 52
	expr:  NOT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 108
	arrayelem  goto 51
	pairliter  goto 49

state 53
	expr:  LEN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 109
	arrayelem  goto 51
	pairliter  goto 49

state 54
	expr:  ORD.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 110
	arrayelem  goto 51
	pairliter  goto 49

state 55
	expr:  CHR.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 111
	arrayelem  goto 51
	pairliter  goto 49

state 56
	expr:  SUB.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 112
	arrayelem  goto 51
	pairliter  goto 49

state 57
	expr:  PLUS.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 113
	arrayelem  goto 51
	pairliter  goto 49

state 58
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 114
	arrayelem  goto 51
	pairliter  goto 49

state 59
	pairliter:  NULL.    (93)

	.  reduce 93 (src line 266)


state 60
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 115
	ASSIGNMENT  shift 116
	.  error


state 61
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 117
	.  error


state 62
	statement:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 
	statement:  CALL IDENTIFIER.DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	DOT  shift 119
	OPENROUND  shift 118
	.  error


state 63
	statement:  READ assignlhs.    (35)

	.  reduce 35 (src line 183)


state 64
	assignlhs:  IDENTIFIER.    (15)
	assignlhs:  IDENTIFIER.DOT IDENTIFIER 
	arrayelem:  IDENTIFIER.bracketed 

	DOT  shift 79
	OPENSQUARE  shift 86
	.  reduce 15 (src line 151)

	bracketed  goto 85

state 65
	statement:  FREE expr.    (36)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 36 (src line 184)


state 66
	statement:  RETURN expr.    (37)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 37 (src line 185)


state 67
	statement:  EXIT expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 38 (src line 186)


state 68
	statement:  PRINT expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 39 (src line 187)


state 69
	statement:  PRINTLN expr.    (40)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 40 (src line 188)


state 70
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 120
	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  error


state 71
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 121
	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  error


state 72
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 122
	SEMICOLON  shift 41
	.  error


state 73
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 123
	.  error


state 74
	statement:  error SEMICOLON.    (45)

	.  reduce 45 (src line 198)


state 75
	statement:  error END.    (46)

	.  reduce 46 (src line 202)


state 76
	statement:  error FI.    (47)

	.  reduce 47 (src line 205)


state 77
	statement:  error DONE.    (48)

	.  reduce 48 (src line 209)


state 78
	assignment:  assignlhs ASSIGNMENT.assignrhs 

	THIS  shift 130
	NEWPAIR  shift 128
	CALL  shift 129
	FST  shift 37
	SND  shift 38
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 132
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 131
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 124
	expr  goto 125
	pairelem  goto 127
	arrayliter  goto 126
	arrayelem  goto 51
	pairliter  goto 49

state 79
	assignlhs:  IDENTIFIER DOT.IDENTIFIER 

	IDENTIFIER  shift 133
	.  error


state 80
	assignment:  IDENTIFIER PLUS.ASSIGNMENT expr 
	assignment:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 135
	ASSIGNMENT  shift 134
	.  error


state 81
	assignment:  IDENTIFIER SUB.ASSIGNMENT expr 
	assignment:  IDENTIFIER SUB.SUB 

	SUB  shift 137
	ASSIGNMENT  shift 136
	.  error


state 82
	assignment:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 138
	.  error


state 83
	assignment:  IDENTIFIER MUL.ASSIGNMENT expr 
	assignment:  IDENTIFIER MUL.MUL 

	MUL  shift 140
	ASSIGNMENT  shift 139
	.  error


state 84
	assignment:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 141
	.  error


state 85
	arrayelem:  IDENTIFIER bracketed.    (90)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 142
	.  reduce 90 (src line 260)


state 86
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 143
	arrayelem  goto 51
	pairliter  goto 49

state 87
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 147
	.  error

	basetype  goto 145
	typeDef  goto 148
	arraytype  goto 146
	pairtype  goto 27
	pairelemtype  goto 144

state 88
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (94)

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 94 (src line 269)


state 89
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (95)

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 95 (src line 270)


state 90
	class:  CLASS IDENTIFIER OPEN.fieldlist functions CLOSE 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	fieldlist  goto 149
	field  goto 150
	basetype  goto 25
	typeDef  goto 151
	arraytype  goto 26
	pairtype  goto 27

state 91
	statements:  statements SEMICOLON statement.    (27)

	.  reduce 27 (src line 165)


state 92
	statement:  FOR.expr SEMICOLON assignment DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 43
	arrayelem  goto 51
	pairliter  goto 49

state 93
	statements:  FOR typeDef IDENTIFIER.ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	ASSIGNMENT  shift 152
	.  error


state 94
	statement:  FOR expr SEMICOLON.assignment DO statements DONE 

	FST  shift 37
	SND  shift 38
	IDENTIFIER  shift 29
	.  error

	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	assignment  goto 153

state 95
	expr:  expr PLUS.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 154
	arrayelem  goto 51
	pairliter  goto 49

state 96
	expr:  expr SUB.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 155
	arrayelem  goto 51
	pairliter  goto 49

state 97
	expr:  expr MUL.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 156
	arrayelem  goto 51
	pairliter  goto 49

state 98
	expr:  expr MOD.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 157
	arrayelem  goto 51
	pairliter  goto 49

state 99
	expr:  expr DIV.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 158
	arrayelem  goto 51
	pairliter  goto 49

state 100
	expr:  expr LT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 159
	arrayelem  goto 51
	pairliter  goto 49

state 101
	expr:  expr GT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 160
	arrayelem  goto 51
	pairliter  goto 49

state 102
	expr:  expr LTE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 161
	arrayelem  goto 51
	pairliter  goto 49

state 103
	expr:  expr GTE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 162
	arrayelem  goto 51
	pairliter  goto 49

state 104
	expr:  expr EQ.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 163
	arrayelem  goto 51
	pairliter  goto 49

state 105
	expr:  expr NEQ.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 164
	arrayelem  goto 51
	pairliter  goto 49

state 106
	expr:  expr AND.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 165
	arrayelem  goto 51
	pairliter  goto 49

state 107
	expr:  expr OR.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 166
	arrayelem  goto 51
	pairliter  goto 49

state 108
	expr:  NOT expr.    (66)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 66 (src line 232)


state 109
	expr:  LEN expr.    (67)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 67 (src line 233)


state 110
	expr:  ORD expr.    (68)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 68 (src line 234)


state 111
	expr:  CHR expr.    (69)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 69 (src line 235)


state 112
	expr:  SUB expr.    (70)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 70 (src line 236)


state 113
	expr:  PLUS expr.    (71)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 71 (src line 237)


state 114
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	CLOSEROUND  shift 167
	.  error


state 115
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	CLOSEROUND  shift 168
	.  error

	paramlist  goto 169
	param  goto 170
	basetype  goto 25
	typeDef  goto 171
	arraytype  goto 26
	pairtype  goto 27

state 116
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	THIS  shift 130
	NEWPAIR  shift 128
	CALL  shift 129
	FST  shift 37
	SND  shift 38
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 132
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 131
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 172
	expr  goto 125
	pairelem  goto 127
	arrayliter  goto 126
	arrayelem  goto 51
	pairliter  goto 49

state 117
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (107)

	.  reduce 107 (src line 287)


state 118
	statement:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (89)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 89 (src line 258)

	expr  goto 174
	exprlist  goto 173
	arrayelem  goto 51
	pairliter  goto 49

state 119
	statement:  CALL IDENTIFIER DOT.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 175
	.  error


state 120
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 176
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 121
	statement:  WHILE expr DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 177
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 122
	statement:  BEGIN statements END.    (44)

	.  reduce 44 (src line 197)


state 123
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 116
	.  error


state 124
	assignment:  assignlhs ASSIGNMENT assignrhs.    (49)

	.  reduce 49 (src line 214)


state 125
	assignrhs:  expr.    (19)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 19 (src line 156)


state 126
	assignrhs:  arrayliter.    (20)

	.  reduce 20 (src line 157)


state 127
	assignrhs:  pairelem.    (21)

	.  reduce 21 (src line 158)


state 128
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 178
	.  error


state 129
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 
	assignrhs:  CALL.IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 179
	.  error


state 130
	assignrhs:  THIS.DOT IDENTIFIER 

	DOT  shift 180
	.  error


state 131
	assignrhs:  IDENTIFIER.DOT IDENTIFIER 
	expr:  IDENTIFIER.    (64)
	arrayelem:  IDENTIFIER.bracketed 

	DOT  shift 181
	OPENSQUARE  shift 86
	.  reduce 64 (src line 230)

	bracketed  goto 85

state 132
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (89)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 89 (src line 258)

	expr  goto 174
	exprlist  goto 182
	arrayelem  goto 51
	pairliter  goto 49

state 133
	assignlhs:  IDENTIFIER DOT IDENTIFIER.    (18)

	.  reduce 18 (src line 154)


state 134
	assignment:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 183
	arrayelem  goto 51
	pairliter  goto 49

state 135
	assignment:  IDENTIFIER PLUS PLUS.    (55)

	.  reduce 55 (src line 220)


state 136
	assignment:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 184
	arrayelem  goto 51
	pairliter  goto 49

state 137
	assignment:  IDENTIFIER SUB SUB.    (56)

	.  reduce 56 (src line 221)


state 138
	assignment:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 185
	arrayelem  goto 51
	pairliter  goto 49

state 139
	assignment:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 186
	arrayelem  goto 51
	pairliter  goto 49

state 140
	assignment:  IDENTIFIER MUL MUL.    (57)

	.  reduce 57 (src line 222)


state 141
	assignment:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 187
	arrayelem  goto 51
	pairliter  goto 49

state 142
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 188
	arrayelem  goto 51
	pairliter  goto 49

state 143
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	CLOSESQUARE  shift 189
	.  error


state 144
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 190
	.  error


state 145
	pairelemtype:  basetype.    (97)
	typeDef:  basetype.    (100)

	OPENSQUARE  reduce 100 (src line 278)
	.  reduce 97 (src line 274)


state 146
	pairelemtype:  arraytype.    (98)
	typeDef:  arraytype.    (101)

	OPENSQUARE  reduce 101 (src line 279)
	.  reduce 98 (src line 275)


state 147
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (99)

	OPENROUND  shift 87
	.  reduce 99 (src line 276)


state 148
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	.  error


state 149
	class:  CLASS IDENTIFIER OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (9)

	COMMA  shift 192
	.  reduce 9 (src line 131)

	functions  goto 191

state 150
	fieldlist:  field.    (6)

	.  reduce 6 (src line 126)


state 151
	field:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 193
	.  error


state 152
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT.assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	THIS  shift 130
	NEWPAIR  shift 128
	CALL  shift 129
	FST  shift 37
	SND  shift 38
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 132
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 131
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 194
	expr  goto 125
	pairelem  goto 127
	arrayliter  goto 126
	arrayelem  goto 51
	pairliter  goto 49

state 153
	statement:  FOR expr SEMICOLON assignment.DO statements DONE 

	DO  shift 195
	.  error


state 154
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (72)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 72 (src line 238)


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (73)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 73 (src line 239)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (74)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 74 (src line 240)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (75)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 75 (src line 241)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (76)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 76 (src line 242)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (77)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 77 (src line 243)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (78)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 78 (src line 244)


state 161
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (79)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 79 (src line 245)


state 162
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (80)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 80 (src line 246)


state 163
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (81)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 81 (src line 247)


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (82)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	.  reduce 82 (src line 248)


state 165
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (83)
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 83 (src line 249)


state 166
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (84)

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 84 (src line 250)


state 167
	expr:  OPENROUND expr CLOSEROUND.    (85)

	.  reduce 85 (src line 251)


state 168
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 196
	.  error


state 169
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 197
	COMMA  shift 198
	.  error


state 170
	paramlist:  param.    (13)

	.  reduce 13 (src line 147)


state 171
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 199
	.  error


state 172
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (31)

	.  reduce 31 (src line 175)


state 173
	statement:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 200
	COMMA  shift 201
	.  error


state 174
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (88)

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 88 (src line 257)


state 175
	statement:  CALL IDENTIFIER DOT IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 202
	.  error


state 176
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 203
	SEMICOLON  shift 41
	.  error


state 177
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 204
	SEMICOLON  shift 41
	.  error


state 178
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 205
	arrayelem  goto 51
	pairliter  goto 49

state 179
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 
	assignrhs:  CALL IDENTIFIER.DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	DOT  shift 207
	OPENROUND  shift 206
	.  error


state 180
	assignrhs:  THIS DOT.IDENTIFIER 

	IDENTIFIER  shift 208
	.  error


state 181
	assignrhs:  IDENTIFIER DOT.IDENTIFIER 

	IDENTIFIER  shift 209
	.  error


state 182
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 210
	COMMA  shift 201
	.  error


state 183
	assignment:  IDENTIFIER PLUS ASSIGNMENT expr.    (50)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 50 (src line 215)


state 184
	assignment:  IDENTIFIER SUB ASSIGNMENT expr.    (51)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 51 (src line 216)


state 185
	assignment:  IDENTIFIER DIV ASSIGNMENT expr.    (52)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 52 (src line 217)


state 186
	assignment:  IDENTIFIER MUL ASSIGNMENT expr.    (53)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 53 (src line 218)


state 187
	assignment:  IDENTIFIER MOD ASSIGNMENT expr.    (54)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 54 (src line 219)


state 188
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	CLOSESQUARE  shift 211
	.  error


state 189
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (92)

	.  reduce 92 (src line 263)


state 190
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 147
	.  error

	basetype  goto 145
	typeDef  goto 148
	arraytype  goto 146
	pairtype  goto 27
	pairelemtype  goto 212

state 191
	class:  CLASS IDENTIFIER OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 213
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	function  goto 8
	basetype  goto 25
	typeDef  goto 214
	arraytype  goto 26
	pairtype  goto 27

state 192
	fieldlist:  fieldlist COMMA.field 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	field  goto 215
	basetype  goto 25
	typeDef  goto 151
	arraytype  goto 26
	pairtype  goto 27

state 193
	field:  typeDef IDENTIFIER.    (7)

	.  reduce 7 (src line 128)


state 194
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs.SEMICOLON expr SEMICOLON assignment DO statements DONE 

	SEMICOLON  shift 216
	.  error


state 195
	statement:  FOR expr SEMICOLON assignment DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 217
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 196
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 218
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 197
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 219
	.  error


state 198
	paramlist:  paramlist COMMA.param 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	param  goto 220
	basetype  goto 25
	typeDef  goto 171
	arraytype  goto 26
	pairtype  goto 27

state 199
	param:  typeDef IDENTIFIER.    (14)

	.  reduce 14 (src line 149)


state 200
	statement:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (33)

	.  reduce 33 (src line 179)


state 201
	exprlist:  exprlist COMMA.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 221
	arrayelem  goto 51
	pairliter  goto 49

state 202
	statement:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (89)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 89 (src line 258)

	expr  goto 174
	exprlist  goto 222
	arrayelem  goto 51
	pairliter  goto 49

state 203
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 223
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 204
	statement:  WHILE expr DO statements DONE.    (43)

	.  reduce 43 (src line 196)


state 205
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	COMMA  shift 224
	.  error


state 206
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (89)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 89 (src line 258)

	expr  goto 174
	exprlist  goto 225
	arrayelem  goto 51
	pairliter  goto 49

state 207
	assignrhs:  CALL IDENTIFIER DOT.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 226
	.  error


state 208
	assignrhs:  THIS DOT IDENTIFIER.    (25)

	.  reduce 25 (src line 162)


state 209
	assignrhs:  IDENTIFIER DOT IDENTIFIER.    (26)

	.  reduce 26 (src line 163)


state 210
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (86)

	.  reduce 86 (src line 254)


state 211
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (91)

	.  reduce 91 (src line 262)


state 212
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 227
	.  error


state 213
	class:  CLASS IDENTIFIER OPEN fieldlist functions CLOSE.    (4)

	.  reduce 4 (src line 119)


state 214
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 228
	.  error


state 215
	fieldlist:  fieldlist COMMA field.    (5)

	.  reduce 5 (src line 125)


state 216
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON.expr SEMICOLON assignment DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 229
	arrayelem  goto 51
	pairliter  goto 49

state 217
	statements:  statements.SEMICOLON statement 
	statement:  FOR expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 230
	SEMICOLON  shift 41
	.  error


state 218
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 231
	SEMICOLON  shift 41
	.  error


state 219
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 232
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 220
	paramlist:  paramlist COMMA param.    (12)

	.  reduce 12 (src line 146)


state 221
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (87)

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	.  reduce 87 (src line 256)


state 222
	statement:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 233
	COMMA  shift 201
	.  error


state 223
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 234
	SEMICOLON  shift 41
	.  error


state 224
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 235
	arrayelem  goto 51
	pairliter  goto 49

state 225
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 236
	COMMA  shift 201
	.  error


state 226
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 237
	.  error


state 227
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (96)

	.  reduce 96 (src line 272)


state 228
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 115
	.  error


state 229
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	SEMICOLON  shift 238
	.  error


state 230
	statement:  FOR expr SEMICOLON assignment DO statements DONE.    (42)

	.  reduce 42 (src line 192)


state 231
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 133)


state 232
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 239
	SEMICOLON  shift 41
	.  error


state 233
	statement:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND.    (34)

	.  reduce 34 (src line 181)


state 234
	statement:  IF expr THEN statements ELSE statements FI.    (41)

	.  reduce 41 (src line 189)


state 235
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 97
	DIV  shift 99
	MOD  shift 98
	PLUS  shift 95
	SUB  shift 96
	AND  shift 106
	OR  shift 107
	GT  shift 101
	GTE  shift 103
	LT  shift 100
	LTE  shift 102
	EQ  shift 104
	NEQ  shift 105
	CLOSEROUND  shift 240
	.  error


state 236
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (23)

	.  reduce 23 (src line 160)


state 237
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (89)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 89 (src line 258)

	expr  goto 174
	exprlist  goto 241
	arrayelem  goto 51
	pairliter  goto 49

state 238
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON.assignment DO statements DONE 

	FST  shift 37
	SND  shift 38
	IDENTIFIER  shift 29
	.  error

	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	assignment  goto 242

state 239
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (11)

	.  reduce 11 (src line 139)


state 240
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (22)

	.  reduce 22 (src line 159)


state 241
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 243
	COMMA  shift 201
	.  error


state 242
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment.DO statements DONE 

	DO  shift 244
	.  error


state 243
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND.    (24)

	.  reduce 24 (src line 161)


state 244
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 245
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 245
	statements:  statements.SEMICOLON statement 
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 246
	SEMICOLON  shift 41
	.  error


state 246
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE.    (29)

	.  reduce 29 (src line 167)


70 terminals, 27 nonterminals
108 grammar rules, 247/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
76 working sets used
memory: parser 419/30000
213 extra closures
1485 shift entries, 3 exceptions
122 goto entries
203 entries saved by goto default
Optimizer space used: output 609/30000
609 table entries, 79 zero
maximum spread: 70, maximum offset: 244
