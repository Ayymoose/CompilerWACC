
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.functions statements END 
	functions: .    (3)

	.  reduce 3 (src line 85)

	functions  goto 3

state 3
	program:  BEGIN functions.statements END 
	functions:  functions.function 
	statements: .    (18)

	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 14
	.  reduce 18 (src line 108)

	function  goto 5
	statements  goto 4
	basetype  goto 7
	typeDef  goto 6
	arraytype  goto 8
	pairtype  goto 9

state 4
	program:  BEGIN functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 15
	SEMICOLON  shift 16
	.  error


state 5
	functions:  functions function.    (2)

	.  reduce 2 (src line 84)


state 6
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statement END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statement END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 18
	IDENTIFIER  shift 17
	.  error


state 7
	typeDef:  basetype.    (71)

	.  reduce 71 (src line 173)


state 8
	typeDef:  arraytype.    (72)

	.  reduce 72 (src line 174)


state 9
	typeDef:  pairtype.    (73)

	.  reduce 73 (src line 175)


state 10
	basetype:  INT.    (74)

	.  reduce 74 (src line 177)


state 11
	basetype:  BOOL.    (75)

	.  reduce 75 (src line 178)


state 12
	basetype:  CHAR.    (76)

	.  reduce 76 (src line 179)


state 13
	basetype:  STRING.    (77)

	.  reduce 77 (src line 180)


state 14
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 19
	.  error


state 15
	program:  BEGIN functions statements END.    (1)

	.  reduce 1 (src line 79)


state 16
	statements:  statements SEMICOLON.statement 

	BEGIN  shift 31
	READ  shift 23
	FREE  shift 24
	RETURN  shift 25
	EXIT  shift 26
	PRINT  shift 27
	PRINTLN  shift 28
	IF  shift 29
	WHILE  shift 30
	FST  shift 35
	SND  shift 36
	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 14
	IDENTIFIER  shift 32
	.  error

	statement  goto 20
	assignlhs  goto 22
	pairelem  goto 34
	arrayelem  goto 33
	basetype  goto 7
	typeDef  goto 21
	arraytype  goto 8
	pairtype  goto 9

state 17
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statement END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statement END 

	OPENROUND  shift 37
	.  error


state 18
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 38
	.  error


state 19
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 42
	.  error

	basetype  goto 40
	typeDef  goto 43
	arraytype  goto 41
	pairtype  goto 9
	pairelemtype  goto 39

state 20
	statements:  statements SEMICOLON statement.    (17)

	.  reduce 17 (src line 107)


state 21
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 18
	IDENTIFIER  shift 44
	.  error


state 22
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 45
	.  error


state 23
	statement:  READ.assignlhs 

	FST  shift 35
	SND  shift 36
	IDENTIFIER  shift 32
	.  error

	assignlhs  goto 46
	pairelem  goto 34
	arrayelem  goto 33

state 24
	statement:  FREE.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 47
	arrayelem  goto 55
	pairliter  goto 53

state 25
	statement:  RETURN.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 64
	arrayelem  goto 55
	pairliter  goto 53

state 26
	statement:  EXIT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 65
	arrayelem  goto 55
	pairliter  goto 53

state 27
	statement:  PRINT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 66
	arrayelem  goto 55
	pairliter  goto 53

state 28
	statement:  PRINTLN.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 67
	arrayelem  goto 55
	pairliter  goto 53

state 29
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 68
	arrayelem  goto 55
	pairliter  goto 53

state 30
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 69
	arrayelem  goto 55
	pairliter  goto 53

state 31
	statement:  BEGIN.statements END 
	statements: .    (18)

	.  reduce 18 (src line 108)

	statements  goto 70

state 32
	assignlhs:  IDENTIFIER.    (9)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 72
	.  reduce 9 (src line 97)

	bracketed  goto 71

state 33
	assignlhs:  arrayelem.    (10)

	.  reduce 10 (src line 98)


state 34
	assignlhs:  pairelem.    (11)

	.  reduce 11 (src line 99)


state 35
	pairelem:  FST.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 73
	arrayelem  goto 55
	pairliter  goto 53

state 36
	pairelem:  SND.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 74
	arrayelem  goto 55
	pairliter  goto 53

state 37
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statement END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statement END 

	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 14
	CLOSEROUND  shift 75
	.  error

	paramlist  goto 76
	param  goto 77
	basetype  goto 7
	typeDef  goto 78
	arraytype  goto 8
	pairtype  goto 9

state 38
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (78)

	.  reduce 78 (src line 182)


state 39
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 79
	.  error


state 40
	pairelemtype:  basetype.    (68)
	typeDef:  basetype.    (71)

	OPENSQUARE  reduce 71 (src line 173)
	.  reduce 68 (src line 169)


state 41
	pairelemtype:  arraytype.    (69)
	typeDef:  arraytype.    (72)

	OPENSQUARE  reduce 72 (src line 174)
	.  reduce 69 (src line 170)


state 42
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (70)

	OPENROUND  shift 19
	.  reduce 70 (src line 171)


state 43
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 18
	.  error


state 44
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 80
	.  error


state 45
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 85
	CALL  shift 86
	FST  shift 35
	SND  shift 36
	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENSQUARE  shift 87
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	assignrhs  goto 81
	expr  goto 82
	pairelem  goto 84
	arrayliter  goto 83
	arrayelem  goto 55
	pairliter  goto 53

state 46
	statement:  READ assignlhs.    (21)

	.  reduce 21 (src line 112)


state 47
	statement:  FREE expr.    (22)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 22 (src line 113)


state 48
	expr:  INTEGER.    (30)

	.  reduce 30 (src line 122)


state 49
	expr:  TRUE.    (31)

	.  reduce 31 (src line 123)


state 50
	expr:  FALSE.    (32)

	.  reduce 32 (src line 124)


state 51
	expr:  CHARACTER.    (33)

	.  reduce 33 (src line 125)


state 52
	expr:  STRINGCONST.    (34)

	.  reduce 34 (src line 126)


state 53
	expr:  pairliter.    (35)

	.  reduce 35 (src line 127)


state 54
	expr:  IDENTIFIER.    (36)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 72
	.  reduce 36 (src line 128)

	bracketed  goto 71

state 55
	expr:  arrayelem.    (37)

	.  reduce 37 (src line 129)


state 56
	expr:  NOT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 101
	arrayelem  goto 55
	pairliter  goto 53

state 57
	expr:  LEN.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 102
	arrayelem  goto 55
	pairliter  goto 53

state 58
	expr:  ORD.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 103
	arrayelem  goto 55
	pairliter  goto 53

state 59
	expr:  CHR.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 104
	arrayelem  goto 55
	pairliter  goto 53

state 60
	expr:  SUB.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 105
	arrayelem  goto 55
	pairliter  goto 53

state 61
	expr:  PLUS.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 106
	arrayelem  goto 55
	pairliter  goto 53

state 62
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 107
	arrayelem  goto 55
	pairliter  goto 53

state 63
	pairliter:  NULL.    (64)

	.  reduce 64 (src line 162)


state 64
	statement:  RETURN expr.    (23)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 23 (src line 114)


state 65
	statement:  EXIT expr.    (24)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 24 (src line 115)


state 66
	statement:  PRINT expr.    (25)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 25 (src line 116)


state 67
	statement:  PRINTLN expr.    (26)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 26 (src line 117)


state 68
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 108
	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  error


state 69
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 109
	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  error


state 70
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 110
	SEMICOLON  shift 16
	.  error


state 71
	arrayelem:  IDENTIFIER bracketed.    (61)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 111
	.  reduce 61 (src line 157)


state 72
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 112
	arrayelem  goto 55
	pairliter  goto 53

state 73
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (65)

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 65 (src line 164)


state 74
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (66)

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 66 (src line 165)


state 75
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statement END 

	IS  shift 113
	.  error


state 76
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statement END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 114
	COMMA  shift 115
	.  error


state 77
	paramlist:  param.    (7)

	.  reduce 7 (src line 93)


state 78
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 18
	IDENTIFIER  shift 116
	.  error


state 79
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 42
	.  error

	basetype  goto 40
	typeDef  goto 43
	arraytype  goto 41
	pairtype  goto 9
	pairelemtype  goto 117

state 80
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 85
	CALL  shift 86
	FST  shift 35
	SND  shift 36
	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENSQUARE  shift 87
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	assignrhs  goto 118
	expr  goto 82
	pairelem  goto 84
	arrayliter  goto 83
	arrayelem  goto 55
	pairliter  goto 53

state 81
	statement:  assignlhs ASSIGNMENT assignrhs.    (20)

	.  reduce 20 (src line 111)


state 82
	assignrhs:  expr.    (12)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 12 (src line 101)


state 83
	assignrhs:  arrayliter.    (13)

	.  reduce 13 (src line 102)


state 84
	assignrhs:  pairelem.    (14)

	.  reduce 14 (src line 103)


state 85
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 119
	.  error


state 86
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 120
	.  error


state 87
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (60)

	.  reduce 60 (src line 155)

	exprlist  goto 121

state 88
	expr:  expr PLUS.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 122
	arrayelem  goto 55
	pairliter  goto 53

state 89
	expr:  expr SUB.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 123
	arrayelem  goto 55
	pairliter  goto 53

state 90
	expr:  expr MUL.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 124
	arrayelem  goto 55
	pairliter  goto 53

state 91
	expr:  expr MOD.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 125
	arrayelem  goto 55
	pairliter  goto 53

state 92
	expr:  expr DIV.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 126
	arrayelem  goto 55
	pairliter  goto 53

state 93
	expr:  expr LT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 127
	arrayelem  goto 55
	pairliter  goto 53

state 94
	expr:  expr GT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 128
	arrayelem  goto 55
	pairliter  goto 53

state 95
	expr:  expr LTE.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 129
	arrayelem  goto 55
	pairliter  goto 53

state 96
	expr:  expr GTE.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 130
	arrayelem  goto 55
	pairliter  goto 53

state 97
	expr:  expr EQ.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 131
	arrayelem  goto 55
	pairliter  goto 53

state 98
	expr:  expr NEQ.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 132
	arrayelem  goto 55
	pairliter  goto 53

state 99
	expr:  expr AND.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 133
	arrayelem  goto 55
	pairliter  goto 53

state 100
	expr:  expr OR.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 134
	arrayelem  goto 55
	pairliter  goto 53

state 101
	expr:  NOT expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 38 (src line 130)


state 102
	expr:  LEN expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 39 (src line 131)


state 103
	expr:  ORD expr.    (40)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 40 (src line 132)


state 104
	expr:  CHR expr.    (41)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 41 (src line 133)


state 105
	expr:  SUB expr.    (42)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 42 (src line 134)


state 106
	expr:  PLUS expr.    (43)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 43 (src line 135)


state 107
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	CLOSEROUND  shift 135
	.  error


state 108
	statement:  IF expr THEN.statements ELSE statements FI 
	statements: .    (18)

	.  reduce 18 (src line 108)

	statements  goto 136

state 109
	statement:  WHILE expr DO.statements DONE 
	statements: .    (18)

	.  reduce 18 (src line 108)

	statements  goto 137

state 110
	statement:  BEGIN statements END.    (29)

	.  reduce 29 (src line 120)


state 111
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 138
	arrayelem  goto 55
	pairliter  goto 53

state 112
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	CLOSESQUARE  shift 139
	.  error


state 113
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statement END 

	BEGIN  shift 31
	READ  shift 23
	FREE  shift 24
	RETURN  shift 25
	EXIT  shift 26
	PRINT  shift 27
	PRINTLN  shift 28
	IF  shift 29
	WHILE  shift 30
	FST  shift 35
	SND  shift 36
	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 14
	IDENTIFIER  shift 32
	.  error

	statement  goto 140
	assignlhs  goto 22
	pairelem  goto 34
	arrayelem  goto 33
	basetype  goto 7
	typeDef  goto 21
	arraytype  goto 8
	pairtype  goto 9

state 114
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statement END 

	IS  shift 141
	.  error


state 115
	paramlist:  paramlist COMMA.param 

	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 14
	.  error

	param  goto 142
	basetype  goto 7
	typeDef  goto 78
	arraytype  goto 8
	pairtype  goto 9

state 116
	param:  typeDef IDENTIFIER.    (8)

	.  reduce 8 (src line 95)


state 117
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 143
	.  error


state 118
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (19)

	.  reduce 19 (src line 110)


state 119
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 144
	arrayelem  goto 55
	pairliter  goto 53

state 120
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 145
	.  error


state 121
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 146
	COMMA  shift 147
	.  error


state 122
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (44)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 44 (src line 137)


state 123
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (45)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 45 (src line 138)


state 124
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (46)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 46 (src line 139)


state 125
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (47)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 47 (src line 140)


state 126
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (48)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 48 (src line 141)


state 127
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (49)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 49 (src line 142)


state 128
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (50)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 50 (src line 143)


state 129
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (51)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 51 (src line 144)


state 130
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (52)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 52 (src line 145)


state 131
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (53)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 53 (src line 146)


state 132
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (54)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 54 (src line 147)


state 133
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (55)
	expr:  expr.OR expr 

	.  reduce 55 (src line 148)


state 134
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (56)

	.  reduce 56 (src line 149)


state 135
	expr:  OPENROUND expr CLOSEROUND.    (57)

	.  reduce 57 (src line 150)


state 136
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 148
	SEMICOLON  shift 16
	.  error


state 137
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 149
	SEMICOLON  shift 16
	.  error


state 138
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	CLOSESQUARE  shift 150
	.  error


state 139
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (63)

	.  reduce 63 (src line 160)


state 140
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statement.END 

	END  shift 151
	.  error


state 141
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statement END 

	BEGIN  shift 31
	READ  shift 23
	FREE  shift 24
	RETURN  shift 25
	EXIT  shift 26
	PRINT  shift 27
	PRINTLN  shift 28
	IF  shift 29
	WHILE  shift 30
	FST  shift 35
	SND  shift 36
	INT  shift 10
	BOOL  shift 11
	CHAR  shift 12
	STRING  shift 13
	PAIR  shift 14
	IDENTIFIER  shift 32
	.  error

	statement  goto 152
	assignlhs  goto 22
	pairelem  goto 34
	arrayelem  goto 33
	basetype  goto 7
	typeDef  goto 21
	arraytype  goto 8
	pairtype  goto 9

state 142
	paramlist:  paramlist COMMA param.    (6)

	.  reduce 6 (src line 92)


state 143
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (67)

	.  reduce 67 (src line 167)


state 144
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	COMMA  shift 153
	.  error


state 145
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (60)

	.  reduce 60 (src line 155)

	exprlist  goto 154

state 146
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (58)

	.  reduce 58 (src line 152)


state 147
	exprlist:  exprlist COMMA.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 155
	arrayelem  goto 55
	pairliter  goto 53

state 148
	statement:  IF expr THEN statements ELSE.statements FI 
	statements: .    (18)

	.  reduce 18 (src line 108)

	statements  goto 156

state 149
	statement:  WHILE expr DO statements DONE.    (28)

	.  reduce 28 (src line 119)


state 150
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (62)

	.  reduce 62 (src line 159)


state 151
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statement END.    (4)

	.  reduce 4 (src line 87)


state 152
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statement.END 

	END  shift 157
	.  error


state 153
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 158
	arrayelem  goto 55
	pairliter  goto 53

state 154
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 159
	COMMA  shift 147
	.  error


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (59)

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	.  reduce 59 (src line 154)


state 156
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 160
	SEMICOLON  shift 16
	.  error


state 157
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statement END.    (5)

	.  reduce 5 (src line 89)


state 158
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 90
	DIV  shift 92
	MOD  shift 91
	PLUS  shift 88
	SUB  shift 89
	AND  shift 99
	OR  shift 100
	GT  shift 94
	GTE  shift 96
	LT  shift 93
	LTE  shift 95
	EQ  shift 97
	NEQ  shift 98
	CLOSEROUND  shift 161
	.  error


state 159
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (16)

	.  reduce 16 (src line 105)


state 160
	statement:  IF expr THEN statements ELSE statements FI.    (27)

	.  reduce 27 (src line 118)


state 161
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (15)

	.  reduce 15 (src line 104)


64 terminals, 22 nonterminals
79 grammar rules, 162/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 212/30000
131 extra closures
851 shift entries, 3 exceptions
81 goto entries
97 entries saved by goto default
Optimizer space used: output 398/30000
398 table entries, 97 zero
maximum spread: 64, maximum offset: 153
