
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.functions statements END 
	functions: .    (3)

	.  reduce 3 (src line 84)

	functions  goto 3

state 3
	program:  BEGIN functions.statements END 
	functions:  functions.function 
	statements: .    (19)

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  reduce 19 (src line 111)

	function  goto 5
	statement  goto 6
	statements  goto 4
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 7
	arraytype  goto 19
	pairtype  goto 20

state 4
	program:  BEGIN functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 31
	SEMICOLON  shift 32
	.  error


state 5
	functions:  functions function.    (2)

	.  reduce 2 (src line 83)


state 6
	statements:  statement.    (18)

	.  reduce 18 (src line 110)


state 7
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statement END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statement END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 34
	IDENTIFIER  shift 33
	.  error


state 8
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 35
	.  error


state 9
	statement:  READ.assignlhs 

	FST  shift 29
	SND  shift 30
	IDENTIFIER  shift 21
	.  error

	assignlhs  goto 36
	pairelem  goto 23
	arrayelem  goto 22

state 10
	statement:  FREE.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 37
	arrayelem  goto 45
	pairliter  goto 43

state 11
	statement:  RETURN.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 54
	arrayelem  goto 45
	pairliter  goto 43

state 12
	statement:  EXIT.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 55
	arrayelem  goto 45
	pairliter  goto 43

state 13
	statement:  PRINT.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 56
	arrayelem  goto 45
	pairliter  goto 43

state 14
	statement:  PRINTLN.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 57
	arrayelem  goto 45
	pairliter  goto 43

state 15
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 58
	arrayelem  goto 45
	pairliter  goto 43

state 16
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 59
	arrayelem  goto 45
	pairliter  goto 43

state 17
	statement:  BEGIN.statements END 
	statements: .    (19)

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  reduce 19 (src line 111)

	statement  goto 6
	statements  goto 60
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 18
	typeDef:  basetype.    (72)

	.  reduce 72 (src line 176)


state 19
	typeDef:  arraytype.    (73)

	.  reduce 73 (src line 177)


state 20
	typeDef:  pairtype.    (74)

	.  reduce 74 (src line 178)


state 21
	assignlhs:  IDENTIFIER.    (9)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 63
	.  reduce 9 (src line 99)

	bracketed  goto 62

state 22
	assignlhs:  arrayelem.    (10)

	.  reduce 10 (src line 100)


state 23
	assignlhs:  pairelem.    (11)

	.  reduce 11 (src line 101)


state 24
	basetype:  INT.    (75)

	.  reduce 75 (src line 180)


state 25
	basetype:  BOOL.    (76)

	.  reduce 76 (src line 181)


state 26
	basetype:  CHAR.    (77)

	.  reduce 77 (src line 182)


state 27
	basetype:  STRING.    (78)

	.  reduce 78 (src line 183)


state 28
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 64
	.  error


state 29
	pairelem:  FST.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 65
	arrayelem  goto 45
	pairliter  goto 43

state 30
	pairelem:  SND.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 66
	arrayelem  goto 45
	pairliter  goto 43

state 31
	program:  BEGIN functions statements END.    (1)

	.  reduce 1 (src line 79)


state 32
	statements:  statements SEMICOLON.statement 

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  error

	statement  goto 67
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 33
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statement END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statement END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 68
	ASSIGNMENT  shift 69
	.  error


state 34
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 70
	.  error


state 35
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 75
	CALL  shift 76
	FST  shift 29
	SND  shift 30
	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENSQUARE  shift 77
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	assignrhs  goto 71
	expr  goto 72
	pairelem  goto 74
	arrayliter  goto 73
	arrayelem  goto 45
	pairliter  goto 43

state 36
	statement:  READ assignlhs.    (22)

	.  reduce 22 (src line 115)


state 37
	statement:  FREE expr.    (23)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 23 (src line 116)


state 38
	expr:  INTEGER.    (31)

	.  reduce 31 (src line 125)


state 39
	expr:  TRUE.    (32)

	.  reduce 32 (src line 126)


state 40
	expr:  FALSE.    (33)

	.  reduce 33 (src line 127)


state 41
	expr:  CHARACTER.    (34)

	.  reduce 34 (src line 128)


state 42
	expr:  STRINGCONST.    (35)

	.  reduce 35 (src line 129)


state 43
	expr:  pairliter.    (36)

	.  reduce 36 (src line 130)


state 44
	expr:  IDENTIFIER.    (37)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 63
	.  reduce 37 (src line 131)

	bracketed  goto 62

state 45
	expr:  arrayelem.    (38)

	.  reduce 38 (src line 132)


state 46
	expr:  NOT.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 91
	arrayelem  goto 45
	pairliter  goto 43

state 47
	expr:  LEN.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 92
	arrayelem  goto 45
	pairliter  goto 43

state 48
	expr:  ORD.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 93
	arrayelem  goto 45
	pairliter  goto 43

state 49
	expr:  CHR.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 94
	arrayelem  goto 45
	pairliter  goto 43

state 50
	expr:  SUB.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 95
	arrayelem  goto 45
	pairliter  goto 43

state 51
	expr:  PLUS.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 96
	arrayelem  goto 45
	pairliter  goto 43

state 52
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 97
	arrayelem  goto 45
	pairliter  goto 43

state 53
	pairliter:  NULL.    (65)

	.  reduce 65 (src line 165)


state 54
	statement:  RETURN expr.    (24)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 24 (src line 117)


state 55
	statement:  EXIT expr.    (25)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 25 (src line 118)


state 56
	statement:  PRINT expr.    (26)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 26 (src line 119)


state 57
	statement:  PRINTLN expr.    (27)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 27 (src line 120)


state 58
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 98
	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  error


state 59
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 99
	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  error


state 60
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 100
	SEMICOLON  shift 32
	.  error


state 61
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 34
	IDENTIFIER  shift 101
	.  error


state 62
	arrayelem:  IDENTIFIER bracketed.    (62)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 102
	.  reduce 62 (src line 160)


state 63
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 103
	arrayelem  goto 45
	pairliter  goto 43

state 64
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 107
	.  error

	basetype  goto 105
	typeDef  goto 108
	arraytype  goto 106
	pairtype  goto 20
	pairelemtype  goto 104

state 65
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (66)

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 66 (src line 167)


state 66
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (67)

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 67 (src line 168)


state 67
	statements:  statements SEMICOLON statement.    (17)

	.  reduce 17 (src line 109)


state 68
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statement END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statement END 

	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	CLOSEROUND  shift 109
	.  error

	paramlist  goto 110
	param  goto 111
	basetype  goto 18
	typeDef  goto 112
	arraytype  goto 19
	pairtype  goto 20

state 69
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 75
	CALL  shift 76
	FST  shift 29
	SND  shift 30
	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENSQUARE  shift 77
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	assignrhs  goto 113
	expr  goto 72
	pairelem  goto 74
	arrayliter  goto 73
	arrayelem  goto 45
	pairliter  goto 43

state 70
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (79)

	.  reduce 79 (src line 185)


state 71
	statement:  assignlhs ASSIGNMENT assignrhs.    (21)

	.  reduce 21 (src line 114)


state 72
	assignrhs:  expr.    (12)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 12 (src line 103)


state 73
	assignrhs:  arrayliter.    (13)

	.  reduce 13 (src line 104)


state 74
	assignrhs:  pairelem.    (14)

	.  reduce 14 (src line 105)


state 75
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 114
	.  error


state 76
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 115
	.  error


state 77
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (61)

	.  reduce 61 (src line 158)

	exprlist  goto 116

state 78
	expr:  expr PLUS.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 117
	arrayelem  goto 45
	pairliter  goto 43

state 79
	expr:  expr SUB.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 118
	arrayelem  goto 45
	pairliter  goto 43

state 80
	expr:  expr MUL.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 119
	arrayelem  goto 45
	pairliter  goto 43

state 81
	expr:  expr MOD.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 120
	arrayelem  goto 45
	pairliter  goto 43

state 82
	expr:  expr DIV.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 121
	arrayelem  goto 45
	pairliter  goto 43

state 83
	expr:  expr LT.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 122
	arrayelem  goto 45
	pairliter  goto 43

state 84
	expr:  expr GT.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 123
	arrayelem  goto 45
	pairliter  goto 43

state 85
	expr:  expr LTE.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 124
	arrayelem  goto 45
	pairliter  goto 43

state 86
	expr:  expr GTE.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 125
	arrayelem  goto 45
	pairliter  goto 43

state 87
	expr:  expr EQ.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 126
	arrayelem  goto 45
	pairliter  goto 43

state 88
	expr:  expr NEQ.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 127
	arrayelem  goto 45
	pairliter  goto 43

state 89
	expr:  expr AND.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 128
	arrayelem  goto 45
	pairliter  goto 43

state 90
	expr:  expr OR.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 129
	arrayelem  goto 45
	pairliter  goto 43

state 91
	expr:  NOT expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 39 (src line 133)


state 92
	expr:  LEN expr.    (40)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 40 (src line 134)


state 93
	expr:  ORD expr.    (41)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 41 (src line 135)


state 94
	expr:  CHR expr.    (42)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 42 (src line 136)


state 95
	expr:  SUB expr.    (43)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 43 (src line 137)


state 96
	expr:  PLUS expr.    (44)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 44 (src line 138)


state 97
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	CLOSEROUND  shift 130
	.  error


state 98
	statement:  IF expr THEN.statements ELSE statements FI 
	statements: .    (19)

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  reduce 19 (src line 111)

	statement  goto 6
	statements  goto 131
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 99
	statement:  WHILE expr DO.statements DONE 
	statements: .    (19)

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  reduce 19 (src line 111)

	statement  goto 6
	statements  goto 132
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 100
	statement:  BEGIN statements END.    (30)

	.  reduce 30 (src line 123)


state 101
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 69
	.  error


state 102
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 133
	arrayelem  goto 45
	pairliter  goto 43

state 103
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	CLOSESQUARE  shift 134
	.  error


state 104
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 135
	.  error


state 105
	pairelemtype:  basetype.    (69)
	typeDef:  basetype.    (72)

	OPENSQUARE  reduce 72 (src line 176)
	.  reduce 69 (src line 172)


state 106
	pairelemtype:  arraytype.    (70)
	typeDef:  arraytype.    (73)

	OPENSQUARE  reduce 73 (src line 177)
	.  reduce 70 (src line 173)


state 107
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (71)

	OPENROUND  shift 64
	.  reduce 71 (src line 174)


state 108
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 34
	.  error


state 109
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statement END 

	IS  shift 136
	.  error


state 110
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statement END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 137
	COMMA  shift 138
	.  error


state 111
	paramlist:  param.    (7)

	.  reduce 7 (src line 95)


state 112
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 34
	IDENTIFIER  shift 139
	.  error


state 113
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (20)

	.  reduce 20 (src line 113)


state 114
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 140
	arrayelem  goto 45
	pairliter  goto 43

state 115
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 141
	.  error


state 116
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 142
	COMMA  shift 143
	.  error


state 117
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (45)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 45 (src line 140)


state 118
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (46)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 46 (src line 141)


state 119
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (47)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 47 (src line 142)


state 120
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (48)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 48 (src line 143)


state 121
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (49)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 49 (src line 144)


state 122
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (50)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 50 (src line 145)


state 123
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (51)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 51 (src line 146)


state 124
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (52)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 52 (src line 147)


state 125
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (53)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 53 (src line 148)


state 126
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (54)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 54 (src line 149)


state 127
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (55)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 55 (src line 150)


state 128
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (56)
	expr:  expr.OR expr 

	.  reduce 56 (src line 151)


state 129
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (57)

	.  reduce 57 (src line 152)


state 130
	expr:  OPENROUND expr CLOSEROUND.    (58)

	.  reduce 58 (src line 153)


state 131
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 144
	SEMICOLON  shift 32
	.  error


state 132
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 145
	SEMICOLON  shift 32
	.  error


state 133
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	CLOSESQUARE  shift 146
	.  error


state 134
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (64)

	.  reduce 64 (src line 163)


state 135
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 107
	.  error

	basetype  goto 105
	typeDef  goto 108
	arraytype  goto 106
	pairtype  goto 20
	pairelemtype  goto 147

state 136
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statement END 

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  error

	statement  goto 148
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 137
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statement END 

	IS  shift 149
	.  error


state 138
	paramlist:  paramlist COMMA.param 

	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	.  error

	param  goto 150
	basetype  goto 18
	typeDef  goto 112
	arraytype  goto 19
	pairtype  goto 20

state 139
	param:  typeDef IDENTIFIER.    (8)

	.  reduce 8 (src line 97)


state 140
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	COMMA  shift 151
	.  error


state 141
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (61)

	.  reduce 61 (src line 158)

	exprlist  goto 152

state 142
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (59)

	.  reduce 59 (src line 155)


state 143
	exprlist:  exprlist COMMA.expr 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 153
	arrayelem  goto 45
	pairliter  goto 43

state 144
	statement:  IF expr THEN statements ELSE.statements FI 
	statements: .    (19)

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  reduce 19 (src line 111)

	statement  goto 6
	statements  goto 154
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 145
	statement:  WHILE expr DO statements DONE.    (29)

	.  reduce 29 (src line 122)


state 146
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (63)

	.  reduce 63 (src line 162)


state 147
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 155
	.  error


state 148
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statement.END 

	END  shift 156
	.  error


state 149
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statement END 

	BEGIN  shift 17
	READ  shift 9
	FREE  shift 10
	RETURN  shift 11
	EXIT  shift 12
	PRINT  shift 13
	PRINTLN  shift 14
	IF  shift 15
	WHILE  shift 16
	FST  shift 29
	SND  shift 30
	INT  shift 24
	BOOL  shift 25
	CHAR  shift 26
	STRING  shift 27
	PAIR  shift 28
	IDENTIFIER  shift 21
	.  error

	statement  goto 157
	assignlhs  goto 8
	pairelem  goto 23
	arrayelem  goto 22
	basetype  goto 18
	typeDef  goto 61
	arraytype  goto 19
	pairtype  goto 20

state 150
	paramlist:  paramlist COMMA param.    (6)

	.  reduce 6 (src line 94)


state 151
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 46
	LEN  shift 47
	ORD  shift 48
	CHR  shift 49
	PLUS  shift 51
	SUB  shift 50
	TRUE  shift 39
	FALSE  shift 40
	NULL  shift 53
	OPENROUND  shift 52
	STRINGCONST  shift 42
	IDENTIFIER  shift 44
	INTEGER  shift 38
	CHARACTER  shift 41
	.  error

	expr  goto 158
	arrayelem  goto 45
	pairliter  goto 43

state 152
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 159
	COMMA  shift 143
	.  error


state 153
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (60)

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	.  reduce 60 (src line 157)


state 154
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 160
	SEMICOLON  shift 32
	.  error


state 155
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (68)

	.  reduce 68 (src line 170)


state 156
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statement END.    (4)

	.  reduce 4 (src line 86)


state 157
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statement.END 

	END  shift 161
	.  error


state 158
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 80
	DIV  shift 82
	MOD  shift 81
	PLUS  shift 78
	SUB  shift 79
	AND  shift 89
	OR  shift 90
	GT  shift 84
	GTE  shift 86
	LT  shift 83
	LTE  shift 85
	EQ  shift 87
	NEQ  shift 88
	CLOSEROUND  shift 162
	.  error


state 159
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (16)

	.  reduce 16 (src line 107)


state 160
	statement:  IF expr THEN statements ELSE statements FI.    (28)

	.  reduce 28 (src line 121)


state 161
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statement END.    (5)

	.  reduce 5 (src line 89)


state 162
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (15)

	.  reduce 15 (src line 106)


64 terminals, 22 nonterminals
80 grammar rules, 163/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 269/30000
132 extra closures
932 shift entries, 3 exceptions
87 goto entries
127 entries saved by goto default
Optimizer space used: output 404/30000
404 table entries, 96 zero
maximum spread: 64, maximum offset: 151
