
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.classes functions statements END 
	classes: .    (3)

	.  reduce 3 (src line 116)

	classes  goto 3

state 3
	program:  BEGIN classes.functions statements END 
	classes:  classes.class 
	functions: .    (9)

	CLASS  shift 6
	.  reduce 9 (src line 127)

	class  goto 5
	functions  goto 4

state 4
	program:  BEGIN classes functions.statements END 
	functions:  functions.function 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	function  goto 8
	statement  goto 9
	statements  goto 7
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 10
	arraytype  goto 26
	pairtype  goto 27

state 5
	classes:  classes class.    (2)

	.  reduce 2 (src line 115)


state 6
	class:  CLASS.CLASSIDENT OPEN fieldlist functions CLOSE 

	CLASSIDENT  shift 37
	.  error


state 7
	program:  BEGIN classes functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 38
	SEMICOLON  shift 39
	.  error


state 8
	functions:  functions function.    (8)

	.  reduce 8 (src line 126)


state 9
	statements:  statement.    (24)

	.  reduce 24 (src line 158)


state 10
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 41
	IDENTIFIER  shift 40
	.  error


state 11
	statement:  SKIP.    (25)

	.  reduce 25 (src line 161)


state 12
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 42
	.  error


state 13
	assignlhs:  IDENTIFIER.    (15)
	statement:  IDENTIFIER.PLUS ASSIGNMENT expr 
	statement:  IDENTIFIER.SUB ASSIGNMENT expr 
	statement:  IDENTIFIER.DIV ASSIGNMENT expr 
	statement:  IDENTIFIER.MUL ASSIGNMENT expr 
	statement:  IDENTIFIER.MOD ASSIGNMENT expr 
	statement:  IDENTIFIER.PLUS PLUS 
	statement:  IDENTIFIER.SUB SUB 
	statement:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	MUL  shift 46
	DIV  shift 45
	MOD  shift 47
	PLUS  shift 43
	SUB  shift 44
	OPENSQUARE  shift 49
	.  reduce 15 (src line 147)

	bracketed  goto 48

state 14
	statement:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 50
	.  error


state 15
	statement:  READ.assignlhs 

	FST  shift 35
	SND  shift 36
	IDENTIFIER  shift 52
	.  error

	assignlhs  goto 51
	pairelem  goto 29
	arrayelem  goto 28

state 16
	statement:  FREE.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 53
	arrayelem  goto 61
	pairliter  goto 59

state 17
	statement:  RETURN.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 70
	arrayelem  goto 61
	pairliter  goto 59

state 18
	statement:  EXIT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 71
	arrayelem  goto 61
	pairliter  goto 59

state 19
	statement:  PRINT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 72
	arrayelem  goto 61
	pairliter  goto 59

state 20
	statement:  PRINTLN.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 73
	arrayelem  goto 61
	pairliter  goto 59

state 21
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 74
	arrayelem  goto 61
	pairliter  goto 59

state 22
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 75
	arrayelem  goto 61
	pairliter  goto 59

state 23
	statement:  BEGIN.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 76
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 24
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 79
	FI  shift 80
	DONE  shift 81
	SEMICOLON  shift 78
	.  error


state 25
	typeDef:  basetype.    (92)

	.  reduce 92 (src line 261)


state 26
	typeDef:  arraytype.    (93)

	.  reduce 93 (src line 262)


state 27
	typeDef:  pairtype.    (94)

	.  reduce 94 (src line 263)


state 28
	assignlhs:  arrayelem.    (16)

	.  reduce 16 (src line 148)


state 29
	assignlhs:  pairelem.    (17)

	.  reduce 17 (src line 149)


state 30
	basetype:  INT.    (95)

	.  reduce 95 (src line 265)


state 31
	basetype:  BOOL.    (96)

	.  reduce 96 (src line 266)


state 32
	basetype:  CHAR.    (97)

	.  reduce 97 (src line 267)


state 33
	basetype:  STRING.    (98)

	.  reduce 98 (src line 268)


state 34
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 82
	.  error


state 35
	pairelem:  FST.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 83
	arrayelem  goto 61
	pairliter  goto 59

state 36
	pairelem:  SND.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 84
	arrayelem  goto 61
	pairliter  goto 59

state 37
	class:  CLASS CLASSIDENT.OPEN fieldlist functions CLOSE 

	OPEN  shift 85
	.  error


state 38
	program:  BEGIN classes functions statements END.    (1)

	.  reduce 1 (src line 107)


state 39
	statements:  statements SEMICOLON.statement 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 86
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 40
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 87
	ASSIGNMENT  shift 88
	.  error


state 41
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 89
	.  error


state 42
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 94
	CALL  shift 95
	FST  shift 35
	SND  shift 36
	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENSQUARE  shift 96
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	assignrhs  goto 90
	expr  goto 91
	pairelem  goto 93
	arrayliter  goto 92
	arrayelem  goto 61
	pairliter  goto 59

state 43
	statement:  IDENTIFIER PLUS.ASSIGNMENT expr 
	statement:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 98
	ASSIGNMENT  shift 97
	.  error


state 44
	statement:  IDENTIFIER SUB.ASSIGNMENT expr 
	statement:  IDENTIFIER SUB.SUB 

	SUB  shift 100
	ASSIGNMENT  shift 99
	.  error


state 45
	statement:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 101
	.  error


state 46
	statement:  IDENTIFIER MUL.ASSIGNMENT expr 
	statement:  IDENTIFIER MUL.MUL 

	MUL  shift 103
	ASSIGNMENT  shift 102
	.  error


state 47
	statement:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 104
	.  error


state 48
	arrayelem:  IDENTIFIER bracketed.    (82)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 105
	.  reduce 82 (src line 243)


state 49
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 106
	arrayelem  goto 61
	pairliter  goto 59

state 50
	statement:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 107
	.  error


state 51
	statement:  READ assignlhs.    (37)

	.  reduce 37 (src line 177)


state 52
	assignlhs:  IDENTIFIER.    (15)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 49
	.  reduce 15 (src line 147)

	bracketed  goto 48

state 53
	statement:  FREE expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 38 (src line 178)


state 54
	expr:  INTEGER.    (50)

	.  reduce 50 (src line 202)


state 55
	expr:  TRUE.    (51)

	.  reduce 51 (src line 204)


state 56
	expr:  FALSE.    (52)

	.  reduce 52 (src line 205)


state 57
	expr:  CHARACTER.    (53)

	.  reduce 53 (src line 207)


state 58
	expr:  STRINGCONST.    (54)

	.  reduce 54 (src line 208)


state 59
	expr:  pairliter.    (55)

	.  reduce 55 (src line 209)


state 60
	expr:  IDENTIFIER.    (56)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 49
	.  reduce 56 (src line 210)

	bracketed  goto 48

state 61
	expr:  arrayelem.    (57)

	.  reduce 57 (src line 211)


state 62
	expr:  NOT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 121
	arrayelem  goto 61
	pairliter  goto 59

state 63
	expr:  LEN.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 122
	arrayelem  goto 61
	pairliter  goto 59

state 64
	expr:  ORD.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 123
	arrayelem  goto 61
	pairliter  goto 59

state 65
	expr:  CHR.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 124
	arrayelem  goto 61
	pairliter  goto 59

state 66
	expr:  SUB.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 125
	arrayelem  goto 61
	pairliter  goto 59

state 67
	expr:  PLUS.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 126
	arrayelem  goto 61
	pairliter  goto 59

state 68
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 127
	arrayelem  goto 61
	pairliter  goto 59

state 69
	pairliter:  NULL.    (85)

	.  reduce 85 (src line 249)


state 70
	statement:  RETURN expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 39 (src line 179)


state 71
	statement:  EXIT expr.    (40)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 40 (src line 180)


state 72
	statement:  PRINT expr.    (41)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 41 (src line 181)


state 73
	statement:  PRINTLN expr.    (42)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 42 (src line 182)


state 74
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 128
	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  error


state 75
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 129
	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  error


state 76
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 130
	SEMICOLON  shift 39
	.  error


state 77
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 41
	IDENTIFIER  shift 131
	.  error


state 78
	statement:  error SEMICOLON.    (46)

	.  reduce 46 (src line 186)


state 79
	statement:  error END.    (47)

	.  reduce 47 (src line 190)


state 80
	statement:  error FI.    (48)

	.  reduce 48 (src line 193)


state 81
	statement:  error DONE.    (49)

	.  reduce 49 (src line 197)


state 82
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 135
	.  error

	basetype  goto 133
	typeDef  goto 136
	arraytype  goto 134
	pairtype  goto 27
	pairelemtype  goto 132

state 83
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (86)

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 86 (src line 252)


state 84
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (87)

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 87 (src line 253)


state 85
	class:  CLASS CLASSIDENT OPEN.fieldlist functions CLOSE 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	fieldlist  goto 137
	field  goto 138
	basetype  goto 25
	typeDef  goto 139
	arraytype  goto 26
	pairtype  goto 27

state 86
	statements:  statements SEMICOLON statement.    (23)

	.  reduce 23 (src line 157)


state 87
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	CLOSEROUND  shift 140
	.  error

	paramlist  goto 141
	param  goto 142
	basetype  goto 25
	typeDef  goto 143
	arraytype  goto 26
	pairtype  goto 27

state 88
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 94
	CALL  shift 95
	FST  shift 35
	SND  shift 36
	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENSQUARE  shift 96
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	assignrhs  goto 144
	expr  goto 91
	pairelem  goto 93
	arrayliter  goto 92
	arrayelem  goto 61
	pairliter  goto 59

state 89
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (99)

	.  reduce 99 (src line 270)


state 90
	statement:  assignlhs ASSIGNMENT assignrhs.    (27)

	.  reduce 27 (src line 163)


state 91
	assignrhs:  expr.    (18)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 18 (src line 151)


state 92
	assignrhs:  arrayliter.    (19)

	.  reduce 19 (src line 152)


state 93
	assignrhs:  pairelem.    (20)

	.  reduce 20 (src line 153)


state 94
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 145
	.  error


state 95
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 146
	.  error


state 96
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (81)

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  reduce 81 (src line 241)

	expr  goto 148
	exprlist  goto 147
	arrayelem  goto 61
	pairliter  goto 59

state 97
	statement:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 149
	arrayelem  goto 61
	pairliter  goto 59

state 98
	statement:  IDENTIFIER PLUS PLUS.    (33)

	.  reduce 33 (src line 171)


state 99
	statement:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 150
	arrayelem  goto 61
	pairliter  goto 59

state 100
	statement:  IDENTIFIER SUB SUB.    (34)

	.  reduce 34 (src line 172)


state 101
	statement:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 151
	arrayelem  goto 61
	pairliter  goto 59

state 102
	statement:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 152
	arrayelem  goto 61
	pairliter  goto 59

state 103
	statement:  IDENTIFIER MUL MUL.    (35)

	.  reduce 35 (src line 173)


state 104
	statement:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 153
	arrayelem  goto 61
	pairliter  goto 59

state 105
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 154
	arrayelem  goto 61
	pairliter  goto 59

state 106
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	CLOSESQUARE  shift 155
	.  error


state 107
	statement:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (81)

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  reduce 81 (src line 241)

	expr  goto 148
	exprlist  goto 156
	arrayelem  goto 61
	pairliter  goto 59

state 108
	expr:  expr PLUS.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 157
	arrayelem  goto 61
	pairliter  goto 59

state 109
	expr:  expr SUB.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 158
	arrayelem  goto 61
	pairliter  goto 59

state 110
	expr:  expr MUL.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 159
	arrayelem  goto 61
	pairliter  goto 59

state 111
	expr:  expr MOD.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 160
	arrayelem  goto 61
	pairliter  goto 59

state 112
	expr:  expr DIV.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 161
	arrayelem  goto 61
	pairliter  goto 59

state 113
	expr:  expr LT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 162
	arrayelem  goto 61
	pairliter  goto 59

state 114
	expr:  expr GT.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 163
	arrayelem  goto 61
	pairliter  goto 59

state 115
	expr:  expr LTE.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 164
	arrayelem  goto 61
	pairliter  goto 59

state 116
	expr:  expr GTE.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 165
	arrayelem  goto 61
	pairliter  goto 59

state 117
	expr:  expr EQ.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 166
	arrayelem  goto 61
	pairliter  goto 59

state 118
	expr:  expr NEQ.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 167
	arrayelem  goto 61
	pairliter  goto 59

state 119
	expr:  expr AND.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 168
	arrayelem  goto 61
	pairliter  goto 59

state 120
	expr:  expr OR.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 169
	arrayelem  goto 61
	pairliter  goto 59

state 121
	expr:  NOT expr.    (58)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 58 (src line 213)


state 122
	expr:  LEN expr.    (59)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 59 (src line 214)


state 123
	expr:  ORD expr.    (60)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 60 (src line 215)


state 124
	expr:  CHR expr.    (61)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 61 (src line 216)


state 125
	expr:  SUB expr.    (62)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 62 (src line 217)


state 126
	expr:  PLUS expr.    (63)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 63 (src line 218)


state 127
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	CLOSEROUND  shift 170
	.  error


state 128
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 171
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 129
	statement:  WHILE expr DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 172
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 130
	statement:  BEGIN statements END.    (45)

	.  reduce 45 (src line 185)


state 131
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 88
	.  error


state 132
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 173
	.  error


state 133
	pairelemtype:  basetype.    (89)
	typeDef:  basetype.    (92)

	OPENSQUARE  reduce 92 (src line 261)
	.  reduce 89 (src line 257)


state 134
	pairelemtype:  arraytype.    (90)
	typeDef:  arraytype.    (93)

	OPENSQUARE  reduce 93 (src line 262)
	.  reduce 90 (src line 258)


state 135
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (91)

	OPENROUND  shift 82
	.  reduce 91 (src line 259)


state 136
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 41
	.  error


state 137
	class:  CLASS CLASSIDENT OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (9)

	COMMA  shift 175
	.  reduce 9 (src line 127)

	functions  goto 174

state 138
	fieldlist:  field.    (6)

	.  reduce 6 (src line 122)


state 139
	field:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 41
	IDENTIFIER  shift 176
	.  error


state 140
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 177
	.  error


state 141
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 178
	COMMA  shift 179
	.  error


state 142
	paramlist:  param.    (13)

	.  reduce 13 (src line 143)


state 143
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 41
	IDENTIFIER  shift 180
	.  error


state 144
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (26)

	.  reduce 26 (src line 162)


state 145
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 181
	arrayelem  goto 61
	pairliter  goto 59

state 146
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 182
	.  error


state 147
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 183
	COMMA  shift 184
	.  error


state 148
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (80)

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 80 (src line 240)


state 149
	statement:  IDENTIFIER PLUS ASSIGNMENT expr.    (28)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 28 (src line 165)


state 150
	statement:  IDENTIFIER SUB ASSIGNMENT expr.    (29)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 29 (src line 166)


state 151
	statement:  IDENTIFIER DIV ASSIGNMENT expr.    (30)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 30 (src line 167)


state 152
	statement:  IDENTIFIER MUL ASSIGNMENT expr.    (31)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 31 (src line 168)


state 153
	statement:  IDENTIFIER MOD ASSIGNMENT expr.    (32)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 32 (src line 169)


state 154
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	CLOSESQUARE  shift 185
	.  error


state 155
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (84)

	.  reduce 84 (src line 246)


state 156
	statement:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 186
	COMMA  shift 184
	.  error


state 157
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (64)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 64 (src line 221)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (65)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 65 (src line 222)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (66)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 66 (src line 223)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (67)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 67 (src line 224)


state 161
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (68)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 68 (src line 225)


state 162
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (69)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 69 (src line 226)


state 163
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (70)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 70 (src line 227)


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (71)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 71 (src line 228)


state 165
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (72)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 72 (src line 229)


state 166
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (73)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 73 (src line 230)


state 167
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (74)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	.  reduce 74 (src line 231)


state 168
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (75)
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 75 (src line 232)


state 169
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (76)

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 76 (src line 233)


state 170
	expr:  OPENROUND expr CLOSEROUND.    (77)

	.  reduce 77 (src line 234)


state 171
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 187
	SEMICOLON  shift 39
	.  error


state 172
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 188
	SEMICOLON  shift 39
	.  error


state 173
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 135
	.  error

	basetype  goto 133
	typeDef  goto 136
	arraytype  goto 134
	pairtype  goto 27
	pairelemtype  goto 189

state 174
	class:  CLASS CLASSIDENT OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 190
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	function  goto 8
	basetype  goto 25
	typeDef  goto 191
	arraytype  goto 26
	pairtype  goto 27

state 175
	fieldlist:  fieldlist COMMA.field 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	field  goto 192
	basetype  goto 25
	typeDef  goto 139
	arraytype  goto 26
	pairtype  goto 27

state 176
	field:  typeDef IDENTIFIER.    (7)

	.  reduce 7 (src line 124)


state 177
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 193
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 178
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 194
	.  error


state 179
	paramlist:  paramlist COMMA.param 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	param  goto 195
	basetype  goto 25
	typeDef  goto 143
	arraytype  goto 26
	pairtype  goto 27

state 180
	param:  typeDef IDENTIFIER.    (14)

	.  reduce 14 (src line 145)


state 181
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	COMMA  shift 196
	.  error


state 182
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (81)

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  reduce 81 (src line 241)

	expr  goto 148
	exprlist  goto 197
	arrayelem  goto 61
	pairliter  goto 59

state 183
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (78)

	.  reduce 78 (src line 237)


state 184
	exprlist:  exprlist COMMA.expr 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 198
	arrayelem  goto 61
	pairliter  goto 59

state 185
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (83)

	.  reduce 83 (src line 245)


state 186
	statement:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (36)

	.  reduce 36 (src line 175)


state 187
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 199
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 188
	statement:  WHILE expr DO statements DONE.    (44)

	.  reduce 44 (src line 184)


state 189
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 200
	.  error


state 190
	class:  CLASS CLASSIDENT OPEN fieldlist functions CLOSE.    (4)

	.  reduce 4 (src line 119)


state 191
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 41
	IDENTIFIER  shift 201
	.  error


state 192
	fieldlist:  fieldlist COMMA field.    (5)

	.  reduce 5 (src line 121)


state 193
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 202
	SEMICOLON  shift 39
	.  error


state 194
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 11
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 35
	SND  shift 36
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 203
	assignlhs  goto 12
	pairelem  goto 29
	arrayelem  goto 28
	basetype  goto 25
	typeDef  goto 77
	arraytype  goto 26
	pairtype  goto 27

state 195
	paramlist:  paramlist COMMA param.    (12)

	.  reduce 12 (src line 142)


state 196
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 62
	LEN  shift 63
	ORD  shift 64
	CHR  shift 65
	PLUS  shift 67
	SUB  shift 66
	TRUE  shift 55
	FALSE  shift 56
	NULL  shift 69
	OPENROUND  shift 68
	STRINGCONST  shift 58
	IDENTIFIER  shift 60
	INTEGER  shift 54
	CHARACTER  shift 57
	.  error

	expr  goto 204
	arrayelem  goto 61
	pairliter  goto 59

state 197
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 205
	COMMA  shift 184
	.  error


state 198
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (79)

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	.  reduce 79 (src line 239)


state 199
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 206
	SEMICOLON  shift 39
	.  error


state 200
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (88)

	.  reduce 88 (src line 255)


state 201
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 87
	.  error


state 202
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 129)


state 203
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 207
	SEMICOLON  shift 39
	.  error


state 204
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 110
	DIV  shift 112
	MOD  shift 111
	PLUS  shift 108
	SUB  shift 109
	AND  shift 119
	OR  shift 120
	GT  shift 114
	GTE  shift 116
	LT  shift 113
	LTE  shift 115
	EQ  shift 117
	NEQ  shift 118
	CLOSEROUND  shift 208
	.  error


state 205
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (22)

	.  reduce 22 (src line 155)


state 206
	statement:  IF expr THEN statements ELSE statements FI.    (43)

	.  reduce 43 (src line 183)


state 207
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (11)

	.  reduce 11 (src line 135)


state 208
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (21)

	.  reduce 21 (src line 154)


68 terminals, 26 nonterminals
100 grammar rules, 209/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
75 working sets used
memory: parser 326/30000
178 extra closures
1276 shift entries, 3 exceptions
104 goto entries
157 entries saved by goto default
Optimizer space used: output 455/30000
455 table entries, 45 zero
maximum spread: 68, maximum offset: 196
