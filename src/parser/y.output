
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.classes functions statements END 
	classes: .    (3)

	.  reduce 3 (src line 116)

	classes  goto 3

state 3
	program:  BEGIN classes.functions statements END 
	classes:  classes.class 
	functions: .    (9)

	CLASS  shift 6
	.  reduce 9 (src line 131)

	class  goto 5
	functions  goto 4

state 4
	program:  BEGIN classes functions.statements END 
	functions:  functions.function 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	function  goto 8
	statement  goto 9
	statements  goto 7
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 11
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 5
	classes:  classes class.    (2)

	.  reduce 2 (src line 115)


state 6
	class:  CLASS.IDENTIFIER OPEN fieldlist functions CLOSE 

	IDENTIFIER  shift 39
	.  error


state 7
	program:  BEGIN classes functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 40
	SEMICOLON  shift 41
	.  error


state 8
	functions:  functions function.    (8)

	.  reduce 8 (src line 130)


state 9
	statements:  statement.    (27)

	.  reduce 27 (src line 165)


state 10
	statements:  FOR.typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	statement:  FOR.expr SEMICOLON assignment DO statements DONE 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 43
	arrayelem  goto 51
	pairliter  goto 49
	basetype  goto 25
	typeDef  goto 42
	arraytype  goto 26
	pairtype  goto 27

state 11
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 60
	.  error


state 12
	statement:  SKIP.    (29)

	.  reduce 29 (src line 173)


state 13
	statement:  assignment.    (31)

	.  reduce 31 (src line 176)


state 14
	statement:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 
	statement:  CALL.IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 62
	.  error


state 15
	statement:  READ.assignlhs 

	FST  shift 37
	SND  shift 38
	IDENTIFIER  shift 64
	.  error

	assignlhs  goto 63
	pairelem  goto 36
	arrayelem  goto 35

state 16
	statement:  FREE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 65
	arrayelem  goto 51
	pairliter  goto 49

state 17
	statement:  RETURN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 66
	arrayelem  goto 51
	pairliter  goto 49

state 18
	statement:  EXIT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 67
	arrayelem  goto 51
	pairliter  goto 49

state 19
	statement:  PRINT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 68
	arrayelem  goto 51
	pairliter  goto 49

state 20
	statement:  PRINTLN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 69
	arrayelem  goto 51
	pairliter  goto 49

state 21
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 70
	arrayelem  goto 51
	pairliter  goto 49

state 22
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 71
	arrayelem  goto 51
	pairliter  goto 49

state 23
	statement:  BEGIN.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 72
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 24
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 75
	FI  shift 76
	DONE  shift 77
	SEMICOLON  shift 74
	.  error


state 25
	typeDef:  basetype.    (99)

	.  reduce 99 (src line 277)


state 26
	typeDef:  arraytype.    (100)

	.  reduce 100 (src line 278)


state 27
	typeDef:  pairtype.    (101)

	.  reduce 101 (src line 279)


state 28
	assignment:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 78
	.  error


state 29
	assignlhs:  IDENTIFIER.    (15)
	assignment:  IDENTIFIER.PLUS ASSIGNMENT expr 
	assignment:  IDENTIFIER.SUB ASSIGNMENT expr 
	assignment:  IDENTIFIER.DIV ASSIGNMENT expr 
	assignment:  IDENTIFIER.MUL ASSIGNMENT expr 
	assignment:  IDENTIFIER.MOD ASSIGNMENT expr 
	assignment:  IDENTIFIER.PLUS PLUS 
	assignment:  IDENTIFIER.SUB SUB 
	assignment:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	MUL  shift 82
	DIV  shift 81
	MOD  shift 83
	PLUS  shift 79
	SUB  shift 80
	OPENSQUARE  shift 85
	.  reduce 15 (src line 151)

	bracketed  goto 84

state 30
	basetype:  INT.    (102)

	.  reduce 102 (src line 281)


state 31
	basetype:  BOOL.    (103)

	.  reduce 103 (src line 282)


state 32
	basetype:  CHAR.    (104)

	.  reduce 104 (src line 283)


state 33
	basetype:  STRING.    (105)

	.  reduce 105 (src line 284)


state 34
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 86
	.  error


state 35
	assignlhs:  arrayelem.    (16)

	.  reduce 16 (src line 152)


state 36
	assignlhs:  pairelem.    (17)

	.  reduce 17 (src line 153)


state 37
	pairelem:  FST.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 87
	arrayelem  goto 51
	pairliter  goto 49

state 38
	pairelem:  SND.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 88
	arrayelem  goto 51
	pairliter  goto 49

state 39
	class:  CLASS IDENTIFIER.OPEN fieldlist functions CLOSE 

	OPEN  shift 89
	.  error


state 40
	program:  BEGIN classes functions statements END.    (1)

	.  reduce 1 (src line 110)


state 41
	statements:  statements SEMICOLON.statement 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 91
	IDENTIFIER  shift 29
	.  error

	statement  goto 90
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 42
	statements:  FOR typeDef.IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 92
	.  error


state 43
	statement:  FOR expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	SEMICOLON  shift 93
	.  error


state 44
	expr:  INTEGER.    (57)

	.  reduce 57 (src line 223)


state 45
	expr:  TRUE.    (58)

	.  reduce 58 (src line 224)


state 46
	expr:  FALSE.    (59)

	.  reduce 59 (src line 225)


state 47
	expr:  CHARACTER.    (60)

	.  reduce 60 (src line 226)


state 48
	expr:  STRINGCONST.    (61)

	.  reduce 61 (src line 227)


state 49
	expr:  pairliter.    (62)

	.  reduce 62 (src line 228)


state 50
	expr:  IDENTIFIER.    (63)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 85
	.  reduce 63 (src line 229)

	bracketed  goto 84

state 51
	expr:  arrayelem.    (64)

	.  reduce 64 (src line 230)


state 52
	expr:  NOT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 107
	arrayelem  goto 51
	pairliter  goto 49

state 53
	expr:  LEN.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 108
	arrayelem  goto 51
	pairliter  goto 49

state 54
	expr:  ORD.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 109
	arrayelem  goto 51
	pairliter  goto 49

state 55
	expr:  CHR.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 110
	arrayelem  goto 51
	pairliter  goto 49

state 56
	expr:  SUB.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 111
	arrayelem  goto 51
	pairliter  goto 49

state 57
	expr:  PLUS.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 112
	arrayelem  goto 51
	pairliter  goto 49

state 58
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 113
	arrayelem  goto 51
	pairliter  goto 49

state 59
	pairliter:  NULL.    (92)

	.  reduce 92 (src line 265)


state 60
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 114
	ASSIGNMENT  shift 115
	.  error


state 61
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 116
	.  error


state 62
	statement:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 
	statement:  CALL IDENTIFIER.DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	DOT  shift 118
	OPENROUND  shift 117
	.  error


state 63
	statement:  READ assignlhs.    (34)

	.  reduce 34 (src line 182)


state 64
	assignlhs:  IDENTIFIER.    (15)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 85
	.  reduce 15 (src line 151)

	bracketed  goto 84

state 65
	statement:  FREE expr.    (35)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 35 (src line 183)


state 66
	statement:  RETURN expr.    (36)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 36 (src line 184)


state 67
	statement:  EXIT expr.    (37)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 37 (src line 185)


state 68
	statement:  PRINT expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 38 (src line 186)


state 69
	statement:  PRINTLN expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 39 (src line 187)


state 70
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 119
	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  error


state 71
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 120
	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  error


state 72
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 121
	SEMICOLON  shift 41
	.  error


state 73
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 122
	.  error


state 74
	statement:  error SEMICOLON.    (44)

	.  reduce 44 (src line 197)


state 75
	statement:  error END.    (45)

	.  reduce 45 (src line 201)


state 76
	statement:  error FI.    (46)

	.  reduce 46 (src line 204)


state 77
	statement:  error DONE.    (47)

	.  reduce 47 (src line 208)


state 78
	assignment:  assignlhs ASSIGNMENT.assignrhs 

	THIS  shift 129
	NEWPAIR  shift 127
	CALL  shift 128
	FST  shift 37
	SND  shift 38
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 131
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 130
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 123
	expr  goto 124
	pairelem  goto 126
	arrayliter  goto 125
	arrayelem  goto 51
	pairliter  goto 49

state 79
	assignment:  IDENTIFIER PLUS.ASSIGNMENT expr 
	assignment:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 133
	ASSIGNMENT  shift 132
	.  error


state 80
	assignment:  IDENTIFIER SUB.ASSIGNMENT expr 
	assignment:  IDENTIFIER SUB.SUB 

	SUB  shift 135
	ASSIGNMENT  shift 134
	.  error


state 81
	assignment:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 136
	.  error


state 82
	assignment:  IDENTIFIER MUL.ASSIGNMENT expr 
	assignment:  IDENTIFIER MUL.MUL 

	MUL  shift 138
	ASSIGNMENT  shift 137
	.  error


state 83
	assignment:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 139
	.  error


state 84
	arrayelem:  IDENTIFIER bracketed.    (89)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 140
	.  reduce 89 (src line 259)


state 85
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 141
	arrayelem  goto 51
	pairliter  goto 49

state 86
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 145
	.  error

	basetype  goto 143
	typeDef  goto 146
	arraytype  goto 144
	pairtype  goto 27
	pairelemtype  goto 142

state 87
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (93)

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 93 (src line 268)


state 88
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (94)

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 94 (src line 269)


state 89
	class:  CLASS IDENTIFIER OPEN.fieldlist functions CLOSE 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	fieldlist  goto 147
	field  goto 148
	basetype  goto 25
	typeDef  goto 149
	arraytype  goto 26
	pairtype  goto 27

state 90
	statements:  statements SEMICOLON statement.    (26)

	.  reduce 26 (src line 164)


state 91
	statement:  FOR.expr SEMICOLON assignment DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 43
	arrayelem  goto 51
	pairliter  goto 49

state 92
	statements:  FOR typeDef IDENTIFIER.ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	ASSIGNMENT  shift 150
	.  error


state 93
	statement:  FOR expr SEMICOLON.assignment DO statements DONE 

	FST  shift 37
	SND  shift 38
	IDENTIFIER  shift 29
	.  error

	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	assignment  goto 151

state 94
	expr:  expr PLUS.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 152
	arrayelem  goto 51
	pairliter  goto 49

state 95
	expr:  expr SUB.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 153
	arrayelem  goto 51
	pairliter  goto 49

state 96
	expr:  expr MUL.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 154
	arrayelem  goto 51
	pairliter  goto 49

state 97
	expr:  expr MOD.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 155
	arrayelem  goto 51
	pairliter  goto 49

state 98
	expr:  expr DIV.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 156
	arrayelem  goto 51
	pairliter  goto 49

state 99
	expr:  expr LT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 157
	arrayelem  goto 51
	pairliter  goto 49

state 100
	expr:  expr GT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 158
	arrayelem  goto 51
	pairliter  goto 49

state 101
	expr:  expr LTE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 159
	arrayelem  goto 51
	pairliter  goto 49

state 102
	expr:  expr GTE.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 160
	arrayelem  goto 51
	pairliter  goto 49

state 103
	expr:  expr EQ.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 161
	arrayelem  goto 51
	pairliter  goto 49

state 104
	expr:  expr NEQ.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 162
	arrayelem  goto 51
	pairliter  goto 49

state 105
	expr:  expr AND.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 163
	arrayelem  goto 51
	pairliter  goto 49

state 106
	expr:  expr OR.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 164
	arrayelem  goto 51
	pairliter  goto 49

state 107
	expr:  NOT expr.    (65)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 65 (src line 231)


state 108
	expr:  LEN expr.    (66)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 66 (src line 232)


state 109
	expr:  ORD expr.    (67)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 67 (src line 233)


state 110
	expr:  CHR expr.    (68)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 68 (src line 234)


state 111
	expr:  SUB expr.    (69)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 69 (src line 235)


state 112
	expr:  PLUS expr.    (70)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 70 (src line 236)


state 113
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	CLOSEROUND  shift 165
	.  error


state 114
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	CLOSEROUND  shift 166
	.  error

	paramlist  goto 167
	param  goto 168
	basetype  goto 25
	typeDef  goto 169
	arraytype  goto 26
	pairtype  goto 27

state 115
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	THIS  shift 129
	NEWPAIR  shift 127
	CALL  shift 128
	FST  shift 37
	SND  shift 38
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 131
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 130
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 170
	expr  goto 124
	pairelem  goto 126
	arrayliter  goto 125
	arrayelem  goto 51
	pairliter  goto 49

state 116
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (106)

	.  reduce 106 (src line 286)


state 117
	statement:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (88)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 88 (src line 257)

	expr  goto 172
	exprlist  goto 171
	arrayelem  goto 51
	pairliter  goto 49

state 118
	statement:  CALL IDENTIFIER DOT.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 173
	.  error


state 119
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 174
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 120
	statement:  WHILE expr DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 175
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 121
	statement:  BEGIN statements END.    (43)

	.  reduce 43 (src line 196)


state 122
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 115
	.  error


state 123
	assignment:  assignlhs ASSIGNMENT assignrhs.    (48)

	.  reduce 48 (src line 213)


state 124
	assignrhs:  expr.    (18)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 18 (src line 155)


state 125
	assignrhs:  arrayliter.    (19)

	.  reduce 19 (src line 156)


state 126
	assignrhs:  pairelem.    (20)

	.  reduce 20 (src line 157)


state 127
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 176
	.  error


state 128
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 
	assignrhs:  CALL.IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 177
	.  error


state 129
	assignrhs:  THIS.DOT IDENTIFIER 

	DOT  shift 178
	.  error


state 130
	assignrhs:  IDENTIFIER.DOT IDENTIFIER 
	expr:  IDENTIFIER.    (63)
	arrayelem:  IDENTIFIER.bracketed 

	DOT  shift 179
	OPENSQUARE  shift 85
	.  reduce 63 (src line 229)

	bracketed  goto 84

state 131
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (88)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 88 (src line 257)

	expr  goto 172
	exprlist  goto 180
	arrayelem  goto 51
	pairliter  goto 49

state 132
	assignment:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 181
	arrayelem  goto 51
	pairliter  goto 49

state 133
	assignment:  IDENTIFIER PLUS PLUS.    (54)

	.  reduce 54 (src line 219)


state 134
	assignment:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 182
	arrayelem  goto 51
	pairliter  goto 49

state 135
	assignment:  IDENTIFIER SUB SUB.    (55)

	.  reduce 55 (src line 220)


state 136
	assignment:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 183
	arrayelem  goto 51
	pairliter  goto 49

state 137
	assignment:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 184
	arrayelem  goto 51
	pairliter  goto 49

state 138
	assignment:  IDENTIFIER MUL MUL.    (56)

	.  reduce 56 (src line 221)


state 139
	assignment:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 185
	arrayelem  goto 51
	pairliter  goto 49

state 140
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 186
	arrayelem  goto 51
	pairliter  goto 49

state 141
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	CLOSESQUARE  shift 187
	.  error


state 142
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 188
	.  error


state 143
	pairelemtype:  basetype.    (96)
	typeDef:  basetype.    (99)

	OPENSQUARE  reduce 99 (src line 277)
	.  reduce 96 (src line 273)


state 144
	pairelemtype:  arraytype.    (97)
	typeDef:  arraytype.    (100)

	OPENSQUARE  reduce 100 (src line 278)
	.  reduce 97 (src line 274)


state 145
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (98)

	OPENROUND  shift 86
	.  reduce 98 (src line 275)


state 146
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	.  error


state 147
	class:  CLASS IDENTIFIER OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (9)

	COMMA  shift 190
	.  reduce 9 (src line 131)

	functions  goto 189

state 148
	fieldlist:  field.    (6)

	.  reduce 6 (src line 126)


state 149
	field:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 191
	.  error


state 150
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT.assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	THIS  shift 129
	NEWPAIR  shift 127
	CALL  shift 128
	FST  shift 37
	SND  shift 38
	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENSQUARE  shift 131
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 130
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	assignrhs  goto 192
	expr  goto 124
	pairelem  goto 126
	arrayliter  goto 125
	arrayelem  goto 51
	pairliter  goto 49

state 151
	statement:  FOR expr SEMICOLON assignment.DO statements DONE 

	DO  shift 193
	.  error


state 152
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (71)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 71 (src line 237)


state 153
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (72)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 72 (src line 238)


state 154
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (73)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 73 (src line 239)


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (74)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 74 (src line 240)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (75)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 75 (src line 241)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (76)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 76 (src line 242)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (77)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 77 (src line 243)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (78)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 78 (src line 244)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (79)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 79 (src line 245)


state 161
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (80)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 80 (src line 246)


state 162
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (81)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	.  reduce 81 (src line 247)


state 163
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (82)
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 82 (src line 248)


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (83)

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 83 (src line 249)


state 165
	expr:  OPENROUND expr CLOSEROUND.    (84)

	.  reduce 84 (src line 250)


state 166
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 194
	.  error


state 167
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 195
	COMMA  shift 196
	.  error


state 168
	paramlist:  param.    (13)

	.  reduce 13 (src line 147)


state 169
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 197
	.  error


state 170
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (30)

	.  reduce 30 (src line 174)


state 171
	statement:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 198
	COMMA  shift 199
	.  error


state 172
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (87)

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 87 (src line 256)


state 173
	statement:  CALL IDENTIFIER DOT IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 200
	.  error


state 174
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 201
	SEMICOLON  shift 41
	.  error


state 175
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 202
	SEMICOLON  shift 41
	.  error


state 176
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 203
	arrayelem  goto 51
	pairliter  goto 49

state 177
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 
	assignrhs:  CALL IDENTIFIER.DOT IDENTIFIER OPENROUND exprlist CLOSEROUND 

	DOT  shift 205
	OPENROUND  shift 204
	.  error


state 178
	assignrhs:  THIS DOT.IDENTIFIER 

	IDENTIFIER  shift 206
	.  error


state 179
	assignrhs:  IDENTIFIER DOT.IDENTIFIER 

	IDENTIFIER  shift 207
	.  error


state 180
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 208
	COMMA  shift 199
	.  error


state 181
	assignment:  IDENTIFIER PLUS ASSIGNMENT expr.    (49)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 49 (src line 214)


state 182
	assignment:  IDENTIFIER SUB ASSIGNMENT expr.    (50)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 50 (src line 215)


state 183
	assignment:  IDENTIFIER DIV ASSIGNMENT expr.    (51)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 51 (src line 216)


state 184
	assignment:  IDENTIFIER MUL ASSIGNMENT expr.    (52)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 52 (src line 217)


state 185
	assignment:  IDENTIFIER MOD ASSIGNMENT expr.    (53)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 53 (src line 218)


state 186
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	CLOSESQUARE  shift 209
	.  error


state 187
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (91)

	.  reduce 91 (src line 262)


state 188
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 145
	.  error

	basetype  goto 143
	typeDef  goto 146
	arraytype  goto 144
	pairtype  goto 27
	pairelemtype  goto 210

state 189
	class:  CLASS IDENTIFIER OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 211
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	function  goto 8
	basetype  goto 25
	typeDef  goto 212
	arraytype  goto 26
	pairtype  goto 27

state 190
	fieldlist:  fieldlist COMMA.field 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	field  goto 213
	basetype  goto 25
	typeDef  goto 149
	arraytype  goto 26
	pairtype  goto 27

state 191
	field:  typeDef IDENTIFIER.    (7)

	.  reduce 7 (src line 128)


state 192
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs.SEMICOLON expr SEMICOLON assignment DO statements DONE 

	SEMICOLON  shift 214
	.  error


state 193
	statement:  FOR expr SEMICOLON assignment DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 215
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 194
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 216
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 195
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 217
	.  error


state 196
	paramlist:  paramlist COMMA.param 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	param  goto 218
	basetype  goto 25
	typeDef  goto 169
	arraytype  goto 26
	pairtype  goto 27

state 197
	param:  typeDef IDENTIFIER.    (14)

	.  reduce 14 (src line 149)


state 198
	statement:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (32)

	.  reduce 32 (src line 178)


state 199
	exprlist:  exprlist COMMA.expr 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 219
	arrayelem  goto 51
	pairliter  goto 49

state 200
	statement:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (88)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 88 (src line 257)

	expr  goto 172
	exprlist  goto 220
	arrayelem  goto 51
	pairliter  goto 49

state 201
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 221
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 202
	statement:  WHILE expr DO statements DONE.    (42)

	.  reduce 42 (src line 195)


state 203
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	COMMA  shift 222
	.  error


state 204
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (88)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 88 (src line 257)

	expr  goto 172
	exprlist  goto 223
	arrayelem  goto 51
	pairliter  goto 49

state 205
	assignrhs:  CALL IDENTIFIER DOT.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 224
	.  error


state 206
	assignrhs:  THIS DOT IDENTIFIER.    (24)

	.  reduce 24 (src line 161)


state 207
	assignrhs:  IDENTIFIER DOT IDENTIFIER.    (25)

	.  reduce 25 (src line 162)


state 208
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (85)

	.  reduce 85 (src line 253)


state 209
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (90)

	.  reduce 90 (src line 261)


state 210
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 225
	.  error


state 211
	class:  CLASS IDENTIFIER OPEN fieldlist functions CLOSE.    (4)

	.  reduce 4 (src line 119)


state 212
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 61
	IDENTIFIER  shift 226
	.  error


state 213
	fieldlist:  fieldlist COMMA field.    (5)

	.  reduce 5 (src line 125)


state 214
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON.expr SEMICOLON assignment DO statements DONE 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 227
	arrayelem  goto 51
	pairliter  goto 49

state 215
	statements:  statements.SEMICOLON statement 
	statement:  FOR expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 228
	SEMICOLON  shift 41
	.  error


state 216
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 229
	SEMICOLON  shift 41
	.  error


state 217
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 230
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 218
	paramlist:  paramlist COMMA param.    (12)

	.  reduce 12 (src line 146)


state 219
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (86)

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	.  reduce 86 (src line 255)


state 220
	statement:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 231
	COMMA  shift 199
	.  error


state 221
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 232
	SEMICOLON  shift 41
	.  error


state 222
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  error

	expr  goto 233
	arrayelem  goto 51
	pairliter  goto 49

state 223
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 234
	COMMA  shift 199
	.  error


state 224
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 235
	.  error


state 225
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (95)

	.  reduce 95 (src line 271)


state 226
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 114
	.  error


state 227
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	SEMICOLON  shift 236
	.  error


state 228
	statement:  FOR expr SEMICOLON assignment DO statements DONE.    (41)

	.  reduce 41 (src line 191)


state 229
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 133)


state 230
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 237
	SEMICOLON  shift 41
	.  error


state 231
	statement:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND.    (33)

	.  reduce 33 (src line 180)


state 232
	statement:  IF expr THEN statements ELSE statements FI.    (40)

	.  reduce 40 (src line 188)


state 233
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 96
	DIV  shift 98
	MOD  shift 97
	PLUS  shift 94
	SUB  shift 95
	AND  shift 105
	OR  shift 106
	GT  shift 100
	GTE  shift 102
	LT  shift 99
	LTE  shift 101
	EQ  shift 103
	NEQ  shift 104
	CLOSEROUND  shift 238
	.  error


state 234
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (22)

	.  reduce 22 (src line 159)


state 235
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (88)

	NOT  shift 52
	LEN  shift 53
	ORD  shift 54
	CHR  shift 55
	PLUS  shift 57
	SUB  shift 56
	TRUE  shift 45
	FALSE  shift 46
	NULL  shift 59
	OPENROUND  shift 58
	STRINGCONST  shift 48
	IDENTIFIER  shift 50
	INTEGER  shift 44
	CHARACTER  shift 47
	.  reduce 88 (src line 257)

	expr  goto 172
	exprlist  goto 239
	arrayelem  goto 51
	pairliter  goto 49

state 236
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON.assignment DO statements DONE 

	FST  shift 37
	SND  shift 38
	IDENTIFIER  shift 29
	.  error

	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	assignment  goto 240

state 237
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (11)

	.  reduce 11 (src line 139)


state 238
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (21)

	.  reduce 21 (src line 158)


state 239
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 241
	COMMA  shift 199
	.  error


state 240
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment.DO statements DONE 

	DO  shift 242
	.  error


state 241
	assignrhs:  CALL IDENTIFIER DOT IDENTIFIER OPENROUND exprlist CLOSEROUND.    (23)

	.  reduce 23 (src line 160)


state 242
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO.statements DONE 

	error  shift 24
	BEGIN  shift 23
	SKIP  shift 12
	READ  shift 15
	FREE  shift 16
	RETURN  shift 17
	EXIT  shift 18
	PRINT  shift 19
	PRINTLN  shift 20
	IF  shift 21
	WHILE  shift 22
	CALL  shift 14
	FST  shift 37
	SND  shift 38
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 29
	.  error

	statement  goto 9
	statements  goto 243
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 73
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13

state 243
	statements:  statements.SEMICOLON statement 
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 244
	SEMICOLON  shift 41
	.  error


state 244
	statements:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE.    (28)

	.  reduce 28 (src line 166)


70 terminals, 27 nonterminals
107 grammar rules, 245/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
76 working sets used
memory: parser 419/30000
211 extra closures
1482 shift entries, 3 exceptions
122 goto entries
203 entries saved by goto default
Optimizer space used: output 637/30000
637 table entries, 111 zero
maximum spread: 70, maximum offset: 242
