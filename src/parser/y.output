
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.classes functions statements END 
	classes: .    (3)

	.  reduce 3 (src line 117)

	classes  goto 3

state 3
	program:  BEGIN classes.functions statements END 
	classes:  classes.class 
	functions: .    (9)

	CLASS  shift 6
	.  reduce 9 (src line 132)

	class  goto 5
	functions  goto 4

state 4
	program:  BEGIN classes functions.statements END 
	functions:  functions.function 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	function  goto 8
	statement  goto 9
	statements  goto 7
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 10
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 5
	classes:  classes class.    (2)

	.  reduce 2 (src line 116)


state 6
	class:  CLASS.IDENTIFIER OPEN fieldlist functions CLOSE 

	IDENTIFIER  shift 38
	.  error


state 7
	program:  BEGIN classes functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 39
	SEMICOLON  shift 40
	.  error


state 8
	functions:  functions function.    (8)

	.  reduce 8 (src line 131)


state 9
	statements:  statement.    (24)

	.  reduce 24 (src line 163)


state 10
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	IDENTIFIER  shift 41
	.  error


state 11
	statement:  SKIP.    (25)

	.  reduce 25 (src line 166)


state 12
	statement:  assignment.    (27)

	.  reduce 27 (src line 168)


state 13
	statement:  READ.assignlhs 

	FST  shift 36
	SND  shift 37
	IDENTIFIER  shift 44
	.  error

	assignlhs  goto 43
	pairelem  goto 35
	arrayelem  goto 34

state 14
	statement:  FREE.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 45
	arrayelem  goto 53
	pairliter  goto 51

state 15
	statement:  RETURN.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 62
	arrayelem  goto 53
	pairliter  goto 51

state 16
	statement:  EXIT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 63
	arrayelem  goto 53
	pairliter  goto 51

state 17
	statement:  PRINT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 64
	arrayelem  goto 53
	pairliter  goto 51

state 18
	statement:  PRINTLN.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 65
	arrayelem  goto 53
	pairliter  goto 51

state 19
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 66
	arrayelem  goto 53
	pairliter  goto 51

state 20
	statement:  FOR.typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	statement:  FOR.assignment SEMICOLON expr SEMICOLON assignment DO statements DONE 

	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 28
	.  error

	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 67
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 68

state 21
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 69
	arrayelem  goto 53
	pairliter  goto 51

state 22
	statement:  BEGIN.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 70
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 23
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 73
	FI  shift 74
	DONE  shift 75
	SEMICOLON  shift 72
	.  error


state 24
	typeDef:  basetype.    (94)

	.  reduce 94 (src line 267)


state 25
	typeDef:  arraytype.    (95)

	.  reduce 95 (src line 268)


state 26
	typeDef:  pairtype.    (96)

	.  reduce 96 (src line 269)


state 27
	assignment:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 76
	.  error


state 28
	assignlhs:  IDENTIFIER.    (15)
	assignment:  IDENTIFIER.PLUS ASSIGNMENT expr 
	assignment:  IDENTIFIER.SUB ASSIGNMENT expr 
	assignment:  IDENTIFIER.DIV ASSIGNMENT expr 
	assignment:  IDENTIFIER.MUL ASSIGNMENT expr 
	assignment:  IDENTIFIER.MOD ASSIGNMENT expr 
	assignment:  IDENTIFIER.PLUS PLUS 
	assignment:  IDENTIFIER.SUB SUB 
	assignment:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	MUL  shift 80
	DIV  shift 79
	MOD  shift 81
	PLUS  shift 77
	SUB  shift 78
	OPENSQUARE  shift 83
	.  reduce 15 (src line 152)

	bracketed  goto 82

state 29
	basetype:  INT.    (97)

	.  reduce 97 (src line 271)


state 30
	basetype:  BOOL.    (98)

	.  reduce 98 (src line 272)


state 31
	basetype:  CHAR.    (99)

	.  reduce 99 (src line 273)


state 32
	basetype:  STRING.    (100)

	.  reduce 100 (src line 274)


state 33
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 84
	.  error


state 34
	assignlhs:  arrayelem.    (16)

	.  reduce 16 (src line 153)


state 35
	assignlhs:  pairelem.    (17)

	.  reduce 17 (src line 154)


state 36
	pairelem:  FST.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 85
	arrayelem  goto 53
	pairliter  goto 51

state 37
	pairelem:  SND.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 86
	arrayelem  goto 53
	pairliter  goto 51

state 38
	class:  CLASS IDENTIFIER.OPEN fieldlist functions CLOSE 

	OPEN  shift 87
	.  error


state 39
	program:  BEGIN classes functions statements END.    (1)

	.  reduce 1 (src line 108)


state 40
	statements:  statements SEMICOLON.statement 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 88
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 41
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 89
	ASSIGNMENT  shift 90
	.  error


state 42
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 91
	.  error


state 43
	statement:  READ assignlhs.    (28)

	.  reduce 28 (src line 169)


state 44
	assignlhs:  IDENTIFIER.    (15)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 83
	.  reduce 15 (src line 152)

	bracketed  goto 82

state 45
	statement:  FREE expr.    (29)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 29 (src line 170)


state 46
	expr:  INTEGER.    (52)

	.  reduce 52 (src line 213)


state 47
	expr:  TRUE.    (53)

	.  reduce 53 (src line 214)


state 48
	expr:  FALSE.    (54)

	.  reduce 54 (src line 215)


state 49
	expr:  CHARACTER.    (55)

	.  reduce 55 (src line 216)


state 50
	expr:  STRINGCONST.    (56)

	.  reduce 56 (src line 217)


state 51
	expr:  pairliter.    (57)

	.  reduce 57 (src line 218)


state 52
	expr:  IDENTIFIER.    (58)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 83
	.  reduce 58 (src line 219)

	bracketed  goto 82

state 53
	expr:  arrayelem.    (59)

	.  reduce 59 (src line 220)


state 54
	expr:  NOT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 105
	arrayelem  goto 53
	pairliter  goto 51

state 55
	expr:  LEN.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 106
	arrayelem  goto 53
	pairliter  goto 51

state 56
	expr:  ORD.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 107
	arrayelem  goto 53
	pairliter  goto 51

state 57
	expr:  CHR.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 108
	arrayelem  goto 53
	pairliter  goto 51

state 58
	expr:  SUB.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 109
	arrayelem  goto 53
	pairliter  goto 51

state 59
	expr:  PLUS.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 110
	arrayelem  goto 53
	pairliter  goto 51

state 60
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 111
	arrayelem  goto 53
	pairliter  goto 51

state 61
	pairliter:  NULL.    (87)

	.  reduce 87 (src line 255)


state 62
	statement:  RETURN expr.    (30)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 30 (src line 171)


state 63
	statement:  EXIT expr.    (31)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 31 (src line 172)


state 64
	statement:  PRINT expr.    (32)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 32 (src line 173)


state 65
	statement:  PRINTLN expr.    (33)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 33 (src line 174)


state 66
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 112
	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  error


state 67
	statement:  FOR typeDef.IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	IDENTIFIER  shift 113
	.  error


state 68
	statement:  FOR assignment.SEMICOLON expr SEMICOLON assignment DO statements DONE 

	SEMICOLON  shift 114
	.  error


state 69
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 115
	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  error


state 70
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 116
	SEMICOLON  shift 40
	.  error


state 71
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	IDENTIFIER  shift 117
	.  error


state 72
	statement:  error SEMICOLON.    (39)

	.  reduce 39 (src line 187)


state 73
	statement:  error END.    (40)

	.  reduce 40 (src line 191)


state 74
	statement:  error FI.    (41)

	.  reduce 41 (src line 194)


state 75
	statement:  error DONE.    (42)

	.  reduce 42 (src line 198)


state 76
	assignment:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 122
	CALL  shift 123
	FST  shift 36
	SND  shift 37
	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENSQUARE  shift 124
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	assignrhs  goto 118
	expr  goto 119
	pairelem  goto 121
	arrayliter  goto 120
	arrayelem  goto 53
	pairliter  goto 51

state 77
	assignment:  IDENTIFIER PLUS.ASSIGNMENT expr 
	assignment:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 126
	ASSIGNMENT  shift 125
	.  error


state 78
	assignment:  IDENTIFIER SUB.ASSIGNMENT expr 
	assignment:  IDENTIFIER SUB.SUB 

	SUB  shift 128
	ASSIGNMENT  shift 127
	.  error


state 79
	assignment:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 129
	.  error


state 80
	assignment:  IDENTIFIER MUL.ASSIGNMENT expr 
	assignment:  IDENTIFIER MUL.MUL 

	MUL  shift 131
	ASSIGNMENT  shift 130
	.  error


state 81
	assignment:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 132
	.  error


state 82
	arrayelem:  IDENTIFIER bracketed.    (84)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 133
	.  reduce 84 (src line 249)


state 83
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 134
	arrayelem  goto 53
	pairliter  goto 51

state 84
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 138
	.  error

	basetype  goto 136
	typeDef  goto 139
	arraytype  goto 137
	pairtype  goto 26
	pairelemtype  goto 135

state 85
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (88)

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 88 (src line 258)


state 86
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (89)

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 89 (src line 259)


state 87
	class:  CLASS IDENTIFIER OPEN.fieldlist functions CLOSE 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	fieldlist  goto 140
	field  goto 141
	basetype  goto 24
	typeDef  goto 142
	arraytype  goto 25
	pairtype  goto 26

state 88
	statements:  statements SEMICOLON statement.    (23)

	.  reduce 23 (src line 162)


state 89
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	CLOSEROUND  shift 143
	.  error

	paramlist  goto 144
	param  goto 145
	basetype  goto 24
	typeDef  goto 146
	arraytype  goto 25
	pairtype  goto 26

state 90
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 122
	CALL  shift 123
	FST  shift 36
	SND  shift 37
	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENSQUARE  shift 124
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	assignrhs  goto 147
	expr  goto 119
	pairelem  goto 121
	arrayliter  goto 120
	arrayelem  goto 53
	pairliter  goto 51

state 91
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (101)

	.  reduce 101 (src line 276)


state 92
	expr:  expr PLUS.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 148
	arrayelem  goto 53
	pairliter  goto 51

state 93
	expr:  expr SUB.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 149
	arrayelem  goto 53
	pairliter  goto 51

state 94
	expr:  expr MUL.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 150
	arrayelem  goto 53
	pairliter  goto 51

state 95
	expr:  expr MOD.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 151
	arrayelem  goto 53
	pairliter  goto 51

state 96
	expr:  expr DIV.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 152
	arrayelem  goto 53
	pairliter  goto 51

state 97
	expr:  expr LT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 153
	arrayelem  goto 53
	pairliter  goto 51

state 98
	expr:  expr GT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 154
	arrayelem  goto 53
	pairliter  goto 51

state 99
	expr:  expr LTE.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 155
	arrayelem  goto 53
	pairliter  goto 51

state 100
	expr:  expr GTE.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 156
	arrayelem  goto 53
	pairliter  goto 51

state 101
	expr:  expr EQ.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 157
	arrayelem  goto 53
	pairliter  goto 51

state 102
	expr:  expr NEQ.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 158
	arrayelem  goto 53
	pairliter  goto 51

state 103
	expr:  expr AND.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 159
	arrayelem  goto 53
	pairliter  goto 51

state 104
	expr:  expr OR.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 160
	arrayelem  goto 53
	pairliter  goto 51

state 105
	expr:  NOT expr.    (60)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 60 (src line 221)


state 106
	expr:  LEN expr.    (61)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 61 (src line 222)


state 107
	expr:  ORD expr.    (62)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 62 (src line 223)


state 108
	expr:  CHR expr.    (63)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 63 (src line 224)


state 109
	expr:  SUB expr.    (64)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 64 (src line 225)


state 110
	expr:  PLUS expr.    (65)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 65 (src line 226)


state 111
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	CLOSEROUND  shift 161
	.  error


state 112
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 162
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 113
	statement:  FOR typeDef IDENTIFIER.ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	ASSIGNMENT  shift 163
	.  error


state 114
	statement:  FOR assignment SEMICOLON.expr SEMICOLON assignment DO statements DONE 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 164
	arrayelem  goto 53
	pairliter  goto 51

state 115
	statement:  WHILE expr DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 165
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 116
	statement:  BEGIN statements END.    (38)

	.  reduce 38 (src line 186)


state 117
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 90
	.  error


state 118
	assignment:  assignlhs ASSIGNMENT assignrhs.    (43)

	.  reduce 43 (src line 203)


state 119
	assignrhs:  expr.    (18)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 18 (src line 156)


state 120
	assignrhs:  arrayliter.    (19)

	.  reduce 19 (src line 157)


state 121
	assignrhs:  pairelem.    (20)

	.  reduce 20 (src line 158)


state 122
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 166
	.  error


state 123
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 167
	.  error


state 124
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (83)

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  reduce 83 (src line 247)

	expr  goto 169
	exprlist  goto 168
	arrayelem  goto 53
	pairliter  goto 51

state 125
	assignment:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 170
	arrayelem  goto 53
	pairliter  goto 51

state 126
	assignment:  IDENTIFIER PLUS PLUS.    (49)

	.  reduce 49 (src line 209)


state 127
	assignment:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 171
	arrayelem  goto 53
	pairliter  goto 51

state 128
	assignment:  IDENTIFIER SUB SUB.    (50)

	.  reduce 50 (src line 210)


state 129
	assignment:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 172
	arrayelem  goto 53
	pairliter  goto 51

state 130
	assignment:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 173
	arrayelem  goto 53
	pairliter  goto 51

state 131
	assignment:  IDENTIFIER MUL MUL.    (51)

	.  reduce 51 (src line 211)


state 132
	assignment:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 174
	arrayelem  goto 53
	pairliter  goto 51

state 133
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 175
	arrayelem  goto 53
	pairliter  goto 51

state 134
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	CLOSESQUARE  shift 176
	.  error


state 135
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 177
	.  error


state 136
	pairelemtype:  basetype.    (91)
	typeDef:  basetype.    (94)

	OPENSQUARE  reduce 94 (src line 267)
	.  reduce 91 (src line 263)


state 137
	pairelemtype:  arraytype.    (92)
	typeDef:  arraytype.    (95)

	OPENSQUARE  reduce 95 (src line 268)
	.  reduce 92 (src line 264)


state 138
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (93)

	OPENROUND  shift 84
	.  reduce 93 (src line 265)


state 139
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	.  error


state 140
	class:  CLASS IDENTIFIER OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (9)

	COMMA  shift 179
	.  reduce 9 (src line 132)

	functions  goto 178

state 141
	fieldlist:  field.    (6)

	.  reduce 6 (src line 127)


state 142
	field:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	IDENTIFIER  shift 180
	.  error


state 143
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 181
	.  error


state 144
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 182
	COMMA  shift 183
	.  error


state 145
	paramlist:  param.    (13)

	.  reduce 13 (src line 148)


state 146
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	IDENTIFIER  shift 184
	.  error


state 147
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (26)

	.  reduce 26 (src line 167)


state 148
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (66)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 66 (src line 227)


state 149
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (67)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 67 (src line 228)


state 150
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (68)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 68 (src line 229)


state 151
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (69)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 69 (src line 230)


state 152
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (70)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 70 (src line 231)


state 153
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (71)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 71 (src line 232)


state 154
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (72)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 72 (src line 233)


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (73)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 73 (src line 234)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (74)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 74 (src line 235)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (75)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 75 (src line 236)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (76)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	.  reduce 76 (src line 237)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (77)
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 77 (src line 238)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (78)

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 78 (src line 239)


state 161
	expr:  OPENROUND expr CLOSEROUND.    (79)

	.  reduce 79 (src line 240)


state 162
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 185
	SEMICOLON  shift 40
	.  error


state 163
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT.assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	NEWPAIR  shift 122
	CALL  shift 123
	FST  shift 36
	SND  shift 37
	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENSQUARE  shift 124
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	assignrhs  goto 186
	expr  goto 119
	pairelem  goto 121
	arrayliter  goto 120
	arrayelem  goto 53
	pairliter  goto 51

state 164
	statement:  FOR assignment SEMICOLON expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	SEMICOLON  shift 187
	.  error


state 165
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 188
	SEMICOLON  shift 40
	.  error


state 166
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 189
	arrayelem  goto 53
	pairliter  goto 51

state 167
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 190
	.  error


state 168
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 191
	COMMA  shift 192
	.  error


state 169
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (82)

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 82 (src line 246)


state 170
	assignment:  IDENTIFIER PLUS ASSIGNMENT expr.    (44)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 44 (src line 204)


state 171
	assignment:  IDENTIFIER SUB ASSIGNMENT expr.    (45)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 45 (src line 205)


state 172
	assignment:  IDENTIFIER DIV ASSIGNMENT expr.    (46)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 46 (src line 206)


state 173
	assignment:  IDENTIFIER MUL ASSIGNMENT expr.    (47)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 47 (src line 207)


state 174
	assignment:  IDENTIFIER MOD ASSIGNMENT expr.    (48)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 48 (src line 208)


state 175
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	CLOSESQUARE  shift 193
	.  error


state 176
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (86)

	.  reduce 86 (src line 252)


state 177
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 138
	.  error

	basetype  goto 136
	typeDef  goto 139
	arraytype  goto 137
	pairtype  goto 26
	pairelemtype  goto 194

state 178
	class:  CLASS IDENTIFIER OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 195
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	function  goto 8
	basetype  goto 24
	typeDef  goto 196
	arraytype  goto 25
	pairtype  goto 26

state 179
	fieldlist:  fieldlist COMMA.field 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	field  goto 197
	basetype  goto 24
	typeDef  goto 142
	arraytype  goto 25
	pairtype  goto 26

state 180
	field:  typeDef IDENTIFIER.    (7)

	.  reduce 7 (src line 129)


state 181
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 198
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 182
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 199
	.  error


state 183
	paramlist:  paramlist COMMA.param 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	param  goto 200
	basetype  goto 24
	typeDef  goto 146
	arraytype  goto 25
	pairtype  goto 26

state 184
	param:  typeDef IDENTIFIER.    (14)

	.  reduce 14 (src line 150)


state 185
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 201
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 186
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs.SEMICOLON expr SEMICOLON assignment DO statements DONE 

	SEMICOLON  shift 202
	.  error


state 187
	statement:  FOR assignment SEMICOLON expr SEMICOLON.assignment DO statements DONE 

	FST  shift 36
	SND  shift 37
	IDENTIFIER  shift 28
	.  error

	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	assignment  goto 203

state 188
	statement:  WHILE expr DO statements DONE.    (37)

	.  reduce 37 (src line 185)


state 189
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	COMMA  shift 204
	.  error


state 190
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (83)

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  reduce 83 (src line 247)

	expr  goto 169
	exprlist  goto 205
	arrayelem  goto 53
	pairliter  goto 51

state 191
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (80)

	.  reduce 80 (src line 243)


state 192
	exprlist:  exprlist COMMA.expr 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 206
	arrayelem  goto 53
	pairliter  goto 51

state 193
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (85)

	.  reduce 85 (src line 251)


state 194
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 207
	.  error


state 195
	class:  CLASS IDENTIFIER OPEN fieldlist functions CLOSE.    (4)

	.  reduce 4 (src line 120)


state 196
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 42
	IDENTIFIER  shift 208
	.  error


state 197
	fieldlist:  fieldlist COMMA field.    (5)

	.  reduce 5 (src line 126)


state 198
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 209
	SEMICOLON  shift 40
	.  error


state 199
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 210
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 200
	paramlist:  paramlist COMMA param.    (12)

	.  reduce 12 (src line 147)


state 201
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 211
	SEMICOLON  shift 40
	.  error


state 202
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON.expr SEMICOLON assignment DO statements DONE 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 212
	arrayelem  goto 53
	pairliter  goto 51

state 203
	statement:  FOR assignment SEMICOLON expr SEMICOLON assignment.DO statements DONE 

	DO  shift 213
	.  error


state 204
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 54
	LEN  shift 55
	ORD  shift 56
	CHR  shift 57
	PLUS  shift 59
	SUB  shift 58
	TRUE  shift 47
	FALSE  shift 48
	NULL  shift 61
	OPENROUND  shift 60
	STRINGCONST  shift 50
	IDENTIFIER  shift 52
	INTEGER  shift 46
	CHARACTER  shift 49
	.  error

	expr  goto 214
	arrayelem  goto 53
	pairliter  goto 51

state 205
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 215
	COMMA  shift 192
	.  error


state 206
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (81)

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	.  reduce 81 (src line 245)


state 207
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (90)

	.  reduce 90 (src line 261)


state 208
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 89
	.  error


state 209
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 134)


state 210
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 216
	SEMICOLON  shift 40
	.  error


state 211
	statement:  IF expr THEN statements ELSE statements FI.    (34)

	.  reduce 34 (src line 175)


state 212
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	SEMICOLON  shift 217
	.  error


state 213
	statement:  FOR assignment SEMICOLON expr SEMICOLON assignment DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 218
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 214
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 94
	DIV  shift 96
	MOD  shift 95
	PLUS  shift 92
	SUB  shift 93
	AND  shift 103
	OR  shift 104
	GT  shift 98
	GTE  shift 100
	LT  shift 97
	LTE  shift 99
	EQ  shift 101
	NEQ  shift 102
	CLOSEROUND  shift 219
	.  error


state 215
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (22)

	.  reduce 22 (src line 160)


state 216
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (11)

	.  reduce 11 (src line 140)


state 217
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON.assignment DO statements DONE 

	FST  shift 36
	SND  shift 37
	IDENTIFIER  shift 28
	.  error

	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	assignment  goto 220

state 218
	statements:  statements.SEMICOLON statement 
	statement:  FOR assignment SEMICOLON expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 221
	SEMICOLON  shift 40
	.  error


state 219
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (21)

	.  reduce 21 (src line 159)


state 220
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment.DO statements DONE 

	DO  shift 222
	.  error


state 221
	statement:  FOR assignment SEMICOLON expr SEMICOLON assignment DO statements DONE.    (36)

	.  reduce 36 (src line 181)


state 222
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 21
	FST  shift 36
	SND  shift 37
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	FOR  shift 20
	IDENTIFIER  shift 28
	.  error

	statement  goto 9
	statements  goto 223
	assignlhs  goto 27
	pairelem  goto 35
	arrayelem  goto 34
	basetype  goto 24
	typeDef  goto 71
	arraytype  goto 25
	pairtype  goto 26
	assignment  goto 12

state 223
	statements:  statements.SEMICOLON statement 
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 224
	SEMICOLON  shift 40
	.  error


state 224
	statement:  FOR typeDef IDENTIFIER ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE.    (35)

	.  reduce 35 (src line 177)


68 terminals, 27 nonterminals
102 grammar rules, 225/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
76 working sets used
memory: parser 394/30000
194 extra closures
1398 shift entries, 3 exceptions
119 goto entries
194 entries saved by goto default
Optimizer space used: output 527/30000
527 table entries, 56 zero
maximum spread: 68, maximum offset: 222
