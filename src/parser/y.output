
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.classes functions statements END 
	classes: .    (3)

	.  reduce 3 (src line 116)

	classes  goto 3

state 3
	program:  BEGIN classes.functions statements END 
	classes:  classes.class 
	functions: .    (9)

	CLASS  shift 6
	.  reduce 9 (src line 127)

	class  goto 5
	functions  goto 4

state 4
	program:  BEGIN classes functions.statements END 
	functions:  functions.function 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	function  goto 8
	statement  goto 9
	statements  goto 7
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 10
	arraytype  goto 25
	pairtype  goto 26

state 5
	classes:  classes class.    (2)

	.  reduce 2 (src line 115)


state 6
	class:  CLASS.CLASSIDENT OPEN fieldlist functions CLOSE 

	CLASSIDENT  shift 36
	.  error


state 7
	program:  BEGIN classes functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 37
	SEMICOLON  shift 38
	.  error


state 8
	functions:  functions function.    (8)

	.  reduce 8 (src line 126)


state 9
	statements:  statement.    (24)

	.  reduce 24 (src line 158)


state 10
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 39
	.  error


state 11
	statement:  SKIP.    (25)

	.  reduce 25 (src line 161)


state 12
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 41
	.  error


state 13
	assignlhs:  IDENTIFIER.    (15)
	statement:  IDENTIFIER.PLUS ASSIGNMENT expr 
	statement:  IDENTIFIER.SUB ASSIGNMENT expr 
	statement:  IDENTIFIER.DIV ASSIGNMENT expr 
	statement:  IDENTIFIER.MUL ASSIGNMENT expr 
	statement:  IDENTIFIER.MOD ASSIGNMENT expr 
	statement:  IDENTIFIER.PLUS PLUS 
	statement:  IDENTIFIER.SUB SUB 
	statement:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	MUL  shift 45
	DIV  shift 44
	MOD  shift 46
	PLUS  shift 42
	SUB  shift 43
	OPENSQUARE  shift 48
	.  reduce 15 (src line 147)

	bracketed  goto 47

state 14
	statement:  READ.assignlhs 

	FST  shift 34
	SND  shift 35
	IDENTIFIER  shift 50
	.  error

	assignlhs  goto 49
	pairelem  goto 28
	arrayelem  goto 27

state 15
	statement:  FREE.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 51
	arrayelem  goto 59
	pairliter  goto 57

state 16
	statement:  RETURN.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 68
	arrayelem  goto 59
	pairliter  goto 57

state 17
	statement:  EXIT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 69
	arrayelem  goto 59
	pairliter  goto 57

state 18
	statement:  PRINT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 70
	arrayelem  goto 59
	pairliter  goto 57

state 19
	statement:  PRINTLN.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 71
	arrayelem  goto 59
	pairliter  goto 57

state 20
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 72
	arrayelem  goto 59
	pairliter  goto 57

state 21
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 73
	arrayelem  goto 59
	pairliter  goto 57

state 22
	statement:  BEGIN.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 74
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 23
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 77
	FI  shift 78
	DONE  shift 79
	SEMICOLON  shift 76
	.  error


state 24
	typeDef:  basetype.    (91)

	.  reduce 91 (src line 260)


state 25
	typeDef:  arraytype.    (92)

	.  reduce 92 (src line 261)


state 26
	typeDef:  pairtype.    (93)

	.  reduce 93 (src line 262)


state 27
	assignlhs:  arrayelem.    (16)

	.  reduce 16 (src line 148)


state 28
	assignlhs:  pairelem.    (17)

	.  reduce 17 (src line 149)


state 29
	basetype:  INT.    (94)

	.  reduce 94 (src line 264)


state 30
	basetype:  BOOL.    (95)

	.  reduce 95 (src line 265)


state 31
	basetype:  CHAR.    (96)

	.  reduce 96 (src line 266)


state 32
	basetype:  STRING.    (97)

	.  reduce 97 (src line 267)


state 33
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 80
	.  error


state 34
	pairelem:  FST.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 81
	arrayelem  goto 59
	pairliter  goto 57

state 35
	pairelem:  SND.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 82
	arrayelem  goto 59
	pairliter  goto 57

state 36
	class:  CLASS CLASSIDENT.OPEN fieldlist functions CLOSE 

	OPEN  shift 83
	.  error


state 37
	program:  BEGIN classes functions statements END.    (1)

	.  reduce 1 (src line 107)


state 38
	statements:  statements SEMICOLON.statement 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 84
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 39
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 85
	ASSIGNMENT  shift 86
	.  error


state 40
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 87
	.  error


state 41
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 92
	CALL  shift 93
	FST  shift 34
	SND  shift 35
	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENSQUARE  shift 94
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	assignrhs  goto 88
	expr  goto 89
	pairelem  goto 91
	arrayliter  goto 90
	arrayelem  goto 59
	pairliter  goto 57

state 42
	statement:  IDENTIFIER PLUS.ASSIGNMENT expr 
	statement:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 96
	ASSIGNMENT  shift 95
	.  error


state 43
	statement:  IDENTIFIER SUB.ASSIGNMENT expr 
	statement:  IDENTIFIER SUB.SUB 

	SUB  shift 98
	ASSIGNMENT  shift 97
	.  error


state 44
	statement:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 99
	.  error


state 45
	statement:  IDENTIFIER MUL.ASSIGNMENT expr 
	statement:  IDENTIFIER MUL.MUL 

	MUL  shift 101
	ASSIGNMENT  shift 100
	.  error


state 46
	statement:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 102
	.  error


state 47
	arrayelem:  IDENTIFIER bracketed.    (81)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 103
	.  reduce 81 (src line 242)


state 48
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 104
	arrayelem  goto 59
	pairliter  goto 57

state 49
	statement:  READ assignlhs.    (36)

	.  reduce 36 (src line 176)


state 50
	assignlhs:  IDENTIFIER.    (15)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 48
	.  reduce 15 (src line 147)

	bracketed  goto 47

state 51
	statement:  FREE expr.    (37)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 37 (src line 177)


state 52
	expr:  INTEGER.    (49)

	.  reduce 49 (src line 201)


state 53
	expr:  TRUE.    (50)

	.  reduce 50 (src line 203)


state 54
	expr:  FALSE.    (51)

	.  reduce 51 (src line 204)


state 55
	expr:  CHARACTER.    (52)

	.  reduce 52 (src line 206)


state 56
	expr:  STRINGCONST.    (53)

	.  reduce 53 (src line 207)


state 57
	expr:  pairliter.    (54)

	.  reduce 54 (src line 208)


state 58
	expr:  IDENTIFIER.    (55)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 48
	.  reduce 55 (src line 209)

	bracketed  goto 47

state 59
	expr:  arrayelem.    (56)

	.  reduce 56 (src line 210)


state 60
	expr:  NOT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 118
	arrayelem  goto 59
	pairliter  goto 57

state 61
	expr:  LEN.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 119
	arrayelem  goto 59
	pairliter  goto 57

state 62
	expr:  ORD.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 120
	arrayelem  goto 59
	pairliter  goto 57

state 63
	expr:  CHR.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 121
	arrayelem  goto 59
	pairliter  goto 57

state 64
	expr:  SUB.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 122
	arrayelem  goto 59
	pairliter  goto 57

state 65
	expr:  PLUS.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 123
	arrayelem  goto 59
	pairliter  goto 57

state 66
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 124
	arrayelem  goto 59
	pairliter  goto 57

state 67
	pairliter:  NULL.    (84)

	.  reduce 84 (src line 248)


state 68
	statement:  RETURN expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 38 (src line 178)


state 69
	statement:  EXIT expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 39 (src line 179)


state 70
	statement:  PRINT expr.    (40)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 40 (src line 180)


state 71
	statement:  PRINTLN expr.    (41)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 41 (src line 181)


state 72
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 125
	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  error


state 73
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 126
	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  error


state 74
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 127
	SEMICOLON  shift 38
	.  error


state 75
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 128
	.  error


state 76
	statement:  error SEMICOLON.    (45)

	.  reduce 45 (src line 185)


state 77
	statement:  error END.    (46)

	.  reduce 46 (src line 189)


state 78
	statement:  error FI.    (47)

	.  reduce 47 (src line 192)


state 79
	statement:  error DONE.    (48)

	.  reduce 48 (src line 196)


state 80
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 132
	.  error

	basetype  goto 130
	typeDef  goto 133
	arraytype  goto 131
	pairtype  goto 26
	pairelemtype  goto 129

state 81
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (85)

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 85 (src line 251)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (86)

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 86 (src line 252)


state 83
	class:  CLASS CLASSIDENT OPEN.fieldlist functions CLOSE 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	fieldlist  goto 134
	field  goto 135
	basetype  goto 24
	typeDef  goto 136
	arraytype  goto 25
	pairtype  goto 26

state 84
	statements:  statements SEMICOLON statement.    (23)

	.  reduce 23 (src line 157)


state 85
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	CLOSEROUND  shift 137
	.  error

	paramlist  goto 138
	param  goto 139
	basetype  goto 24
	typeDef  goto 140
	arraytype  goto 25
	pairtype  goto 26

state 86
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 92
	CALL  shift 93
	FST  shift 34
	SND  shift 35
	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENSQUARE  shift 94
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	assignrhs  goto 141
	expr  goto 89
	pairelem  goto 91
	arrayliter  goto 90
	arrayelem  goto 59
	pairliter  goto 57

state 87
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (98)

	.  reduce 98 (src line 269)


state 88
	statement:  assignlhs ASSIGNMENT assignrhs.    (27)

	.  reduce 27 (src line 163)


state 89
	assignrhs:  expr.    (18)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 18 (src line 151)


state 90
	assignrhs:  arrayliter.    (19)

	.  reduce 19 (src line 152)


state 91
	assignrhs:  pairelem.    (20)

	.  reduce 20 (src line 153)


state 92
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 142
	.  error


state 93
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 143
	.  error


state 94
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (80)

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  reduce 80 (src line 240)

	expr  goto 145
	exprlist  goto 144
	arrayelem  goto 59
	pairliter  goto 57

state 95
	statement:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 146
	arrayelem  goto 59
	pairliter  goto 57

state 96
	statement:  IDENTIFIER PLUS PLUS.    (33)

	.  reduce 33 (src line 171)


state 97
	statement:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 147
	arrayelem  goto 59
	pairliter  goto 57

state 98
	statement:  IDENTIFIER SUB SUB.    (34)

	.  reduce 34 (src line 172)


state 99
	statement:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 148
	arrayelem  goto 59
	pairliter  goto 57

state 100
	statement:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 149
	arrayelem  goto 59
	pairliter  goto 57

state 101
	statement:  IDENTIFIER MUL MUL.    (35)

	.  reduce 35 (src line 173)


state 102
	statement:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 150
	arrayelem  goto 59
	pairliter  goto 57

state 103
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 151
	arrayelem  goto 59
	pairliter  goto 57

state 104
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	CLOSESQUARE  shift 152
	.  error


state 105
	expr:  expr PLUS.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 153
	arrayelem  goto 59
	pairliter  goto 57

state 106
	expr:  expr SUB.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 154
	arrayelem  goto 59
	pairliter  goto 57

state 107
	expr:  expr MUL.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 155
	arrayelem  goto 59
	pairliter  goto 57

state 108
	expr:  expr MOD.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 156
	arrayelem  goto 59
	pairliter  goto 57

state 109
	expr:  expr DIV.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 157
	arrayelem  goto 59
	pairliter  goto 57

state 110
	expr:  expr LT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 158
	arrayelem  goto 59
	pairliter  goto 57

state 111
	expr:  expr GT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 159
	arrayelem  goto 59
	pairliter  goto 57

state 112
	expr:  expr LTE.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 160
	arrayelem  goto 59
	pairliter  goto 57

state 113
	expr:  expr GTE.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 161
	arrayelem  goto 59
	pairliter  goto 57

state 114
	expr:  expr EQ.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 162
	arrayelem  goto 59
	pairliter  goto 57

state 115
	expr:  expr NEQ.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 163
	arrayelem  goto 59
	pairliter  goto 57

state 116
	expr:  expr AND.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 164
	arrayelem  goto 59
	pairliter  goto 57

state 117
	expr:  expr OR.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 165
	arrayelem  goto 59
	pairliter  goto 57

state 118
	expr:  NOT expr.    (57)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 57 (src line 212)


state 119
	expr:  LEN expr.    (58)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 58 (src line 213)


state 120
	expr:  ORD expr.    (59)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 59 (src line 214)


state 121
	expr:  CHR expr.    (60)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 60 (src line 215)


state 122
	expr:  SUB expr.    (61)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 61 (src line 216)


state 123
	expr:  PLUS expr.    (62)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 62 (src line 217)


state 124
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	CLOSEROUND  shift 166
	.  error


state 125
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 167
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 126
	statement:  WHILE expr DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 168
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 127
	statement:  BEGIN statements END.    (44)

	.  reduce 44 (src line 184)


state 128
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 86
	.  error


state 129
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 169
	.  error


state 130
	pairelemtype:  basetype.    (88)
	typeDef:  basetype.    (91)

	OPENSQUARE  reduce 91 (src line 260)
	.  reduce 88 (src line 256)


state 131
	pairelemtype:  arraytype.    (89)
	typeDef:  arraytype.    (92)

	OPENSQUARE  reduce 92 (src line 261)
	.  reduce 89 (src line 257)


state 132
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (90)

	OPENROUND  shift 80
	.  reduce 90 (src line 258)


state 133
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	.  error


state 134
	class:  CLASS CLASSIDENT OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (9)

	COMMA  shift 171
	.  reduce 9 (src line 127)

	functions  goto 170

state 135
	fieldlist:  field.    (6)

	.  reduce 6 (src line 122)


state 136
	field:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 172
	.  error


state 137
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 173
	.  error


state 138
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 174
	COMMA  shift 175
	.  error


state 139
	paramlist:  param.    (13)

	.  reduce 13 (src line 143)


state 140
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 176
	.  error


state 141
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (26)

	.  reduce 26 (src line 162)


state 142
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 177
	arrayelem  goto 59
	pairliter  goto 57

state 143
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 178
	.  error


state 144
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 179
	COMMA  shift 180
	.  error


state 145
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (79)

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 79 (src line 239)


state 146
	statement:  IDENTIFIER PLUS ASSIGNMENT expr.    (28)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 28 (src line 165)


state 147
	statement:  IDENTIFIER SUB ASSIGNMENT expr.    (29)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 29 (src line 166)


state 148
	statement:  IDENTIFIER DIV ASSIGNMENT expr.    (30)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 30 (src line 167)


state 149
	statement:  IDENTIFIER MUL ASSIGNMENT expr.    (31)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 31 (src line 168)


state 150
	statement:  IDENTIFIER MOD ASSIGNMENT expr.    (32)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 32 (src line 169)


state 151
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	CLOSESQUARE  shift 181
	.  error


state 152
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (83)

	.  reduce 83 (src line 245)


state 153
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (63)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 63 (src line 220)


state 154
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (64)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 64 (src line 221)


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (65)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 65 (src line 222)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (66)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 66 (src line 223)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (67)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 67 (src line 224)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (68)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 68 (src line 225)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (69)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 69 (src line 226)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (70)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 70 (src line 227)


state 161
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (71)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 71 (src line 228)


state 162
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (72)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 72 (src line 229)


state 163
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (73)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	.  reduce 73 (src line 230)


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (74)
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 74 (src line 231)


state 165
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (75)

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 75 (src line 232)


state 166
	expr:  OPENROUND expr CLOSEROUND.    (76)

	.  reduce 76 (src line 233)


state 167
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 182
	SEMICOLON  shift 38
	.  error


state 168
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 183
	SEMICOLON  shift 38
	.  error


state 169
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 132
	.  error

	basetype  goto 130
	typeDef  goto 133
	arraytype  goto 131
	pairtype  goto 26
	pairelemtype  goto 184

state 170
	class:  CLASS CLASSIDENT OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 185
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	function  goto 8
	basetype  goto 24
	typeDef  goto 186
	arraytype  goto 25
	pairtype  goto 26

state 171
	fieldlist:  fieldlist COMMA.field 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	field  goto 187
	basetype  goto 24
	typeDef  goto 136
	arraytype  goto 25
	pairtype  goto 26

state 172
	field:  typeDef IDENTIFIER.    (7)

	.  reduce 7 (src line 124)


state 173
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 188
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 174
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 189
	.  error


state 175
	paramlist:  paramlist COMMA.param 

	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	.  error

	param  goto 190
	basetype  goto 24
	typeDef  goto 140
	arraytype  goto 25
	pairtype  goto 26

state 176
	param:  typeDef IDENTIFIER.    (14)

	.  reduce 14 (src line 145)


state 177
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	COMMA  shift 191
	.  error


state 178
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (80)

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  reduce 80 (src line 240)

	expr  goto 145
	exprlist  goto 192
	arrayelem  goto 59
	pairliter  goto 57

state 179
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (77)

	.  reduce 77 (src line 236)


state 180
	exprlist:  exprlist COMMA.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 193
	arrayelem  goto 59
	pairliter  goto 57

state 181
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (82)

	.  reduce 82 (src line 244)


state 182
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 194
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 183
	statement:  WHILE expr DO statements DONE.    (43)

	.  reduce 43 (src line 183)


state 184
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 195
	.  error


state 185
	class:  CLASS CLASSIDENT OPEN fieldlist functions CLOSE.    (4)

	.  reduce 4 (src line 119)


state 186
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 196
	.  error


state 187
	fieldlist:  fieldlist COMMA field.    (5)

	.  reduce 5 (src line 121)


state 188
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 197
	SEMICOLON  shift 38
	.  error


state 189
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 11
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	FST  shift 34
	SND  shift 35
	INT  shift 29
	BOOL  shift 30
	CHAR  shift 31
	STRING  shift 32
	PAIR  shift 33
	IDENTIFIER  shift 13
	.  error

	statement  goto 9
	statements  goto 198
	assignlhs  goto 12
	pairelem  goto 28
	arrayelem  goto 27
	basetype  goto 24
	typeDef  goto 75
	arraytype  goto 25
	pairtype  goto 26

state 190
	paramlist:  paramlist COMMA param.    (12)

	.  reduce 12 (src line 142)


state 191
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 199
	arrayelem  goto 59
	pairliter  goto 57

state 192
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 200
	COMMA  shift 180
	.  error


state 193
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (78)

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	.  reduce 78 (src line 238)


state 194
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 201
	SEMICOLON  shift 38
	.  error


state 195
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (87)

	.  reduce 87 (src line 254)


state 196
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 85
	.  error


state 197
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 129)


state 198
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 202
	SEMICOLON  shift 38
	.  error


state 199
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 107
	DIV  shift 109
	MOD  shift 108
	PLUS  shift 105
	SUB  shift 106
	AND  shift 116
	OR  shift 117
	GT  shift 111
	GTE  shift 113
	LT  shift 110
	LTE  shift 112
	EQ  shift 114
	NEQ  shift 115
	CLOSEROUND  shift 203
	.  error


state 200
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (22)

	.  reduce 22 (src line 155)


state 201
	statement:  IF expr THEN statements ELSE statements FI.    (42)

	.  reduce 42 (src line 182)


state 202
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (11)

	.  reduce 11 (src line 135)


state 203
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (21)

	.  reduce 21 (src line 154)


68 terminals, 26 nonterminals
99 grammar rules, 204/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
75 working sets used
memory: parser 323/30000
176 extra closures
1250 shift entries, 3 exceptions
103 goto entries
154 entries saved by goto default
Optimizer space used: output 451/30000
451 table entries, 47 zero
maximum spread: 68, maximum offset: 191
