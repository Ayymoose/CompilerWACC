
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.classes functions statements END 
	classes: .    (3)

	.  reduce 3 (src line 117)

	classes  goto 3

state 3
	program:  BEGIN classes.functions statements END 
	classes:  classes.class 
	functions: .    (9)

	CLASS  shift 6
	.  reduce 9 (src line 133)

	class  goto 5
	functions  goto 4

state 4
	program:  BEGIN classes functions.statements END 
	functions:  functions.function 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	function  goto 8
	statement  goto 9
	statements  goto 7
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 11
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 5
	classes:  classes class.    (2)

	.  reduce 2 (src line 116)


state 6
	class:  CLASS.ident OPEN fieldlist functions CLOSE 

	IDENTIFIER  shift 37
	.  error

	ident  goto 40

state 7
	program:  BEGIN classes functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 41
	SEMICOLON  shift 42
	.  error


state 8
	functions:  functions function.    (8)

	.  reduce 8 (src line 132)


state 9
	statements:  statement.    (23)

	.  reduce 23 (src line 163)


state 10
	statements:  FOR.typeDef ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	statement:  FOR.expr SEMICOLON assignment DO statements DONE 

	CALL  shift 60
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 44
	arrayelem  goto 52
	pairliter  goto 50
	basetype  goto 25
	typeDef  goto 43
	arraytype  goto 26
	pairtype  goto 27
	ident  goto 51

state 11
	function:  typeDef.ident OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.ident OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.ident ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	IDENTIFIER  shift 37
	.  error

	ident  goto 62

state 12
	statement:  SKIP.    (27)

	.  reduce 27 (src line 174)


state 13
	statement:  assignment.    (29)

	.  reduce 29 (src line 176)


state 14
	statement:  READ.assignlhs 

	FST  shift 38
	SND  shift 39
	IDENTIFIER  shift 37
	.  error

	assignlhs  goto 64
	pairelem  goto 36
	arrayelem  goto 35
	ident  goto 65

state 15
	statement:  FREE.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 66
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 16
	statement:  RETURN.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 67
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 17
	statement:  EXIT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 68
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 18
	statement:  PRINT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 69
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 19
	statement:  PRINTLN.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 70
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 20
	statement:  IF.expr THEN statements ELSE statements FI 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 71
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 21
	statement:  WHILE.expr DO statements DONE 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 72
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 22
	statement:  BEGIN.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 73
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 23
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 76
	FI  shift 77
	DONE  shift 78
	SEMICOLON  shift 75
	.  error


state 24
	statement:  CALL.ident OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 37
	.  error

	ident  goto 79

state 25
	typeDef:  basetype.    (97)

	.  reduce 97 (src line 274)


state 26
	typeDef:  arraytype.    (98)

	.  reduce 98 (src line 275)


state 27
	typeDef:  pairtype.    (99)

	.  reduce 99 (src line 276)


state 28
	assignment:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 80
	.  error


state 29
	assignlhs:  ident.    (15)
	assignment:  ident.PLUS ASSIGNMENT expr 
	assignment:  ident.SUB ASSIGNMENT expr 
	assignment:  ident.DIV ASSIGNMENT expr 
	assignment:  ident.MUL ASSIGNMENT expr 
	assignment:  ident.MOD ASSIGNMENT expr 
	assignment:  ident.PLUS PLUS 
	assignment:  ident.SUB SUB 
	assignment:  ident.MUL MUL 
	arrayelem:  ident.bracketed 

	MUL  shift 84
	DIV  shift 83
	MOD  shift 85
	PLUS  shift 81
	SUB  shift 82
	OPENSQUARE  shift 87
	.  reduce 15 (src line 153)

	bracketed  goto 86

state 30
	basetype:  INT.    (100)

	.  reduce 100 (src line 278)


state 31
	basetype:  BOOL.    (101)

	.  reduce 101 (src line 279)


state 32
	basetype:  CHAR.    (102)

	.  reduce 102 (src line 280)


state 33
	basetype:  STRING.    (103)

	.  reduce 103 (src line 281)


state 34
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 88
	.  error


state 35
	assignlhs:  arrayelem.    (16)

	.  reduce 16 (src line 154)


state 36
	assignlhs:  pairelem.    (17)

	.  reduce 17 (src line 155)


state 37
	ident:  IDENTIFIER.    (25)
	ident:  IDENTIFIER.DOT ident 

	DOT  shift 89
	.  reduce 25 (src line 171)


state 38
	pairelem:  FST.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 90
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 39
	pairelem:  SND.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 91
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 40
	class:  CLASS ident.OPEN fieldlist functions CLOSE 

	OPEN  shift 92
	.  error


state 41
	program:  BEGIN classes functions statements END.    (1)

	.  reduce 1 (src line 111)


state 42
	statements:  statements SEMICOLON.statement 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 94
	IDENTIFIER  shift 37
	.  error

	statement  goto 93
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 43
	statements:  FOR typeDef.ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	IDENTIFIER  shift 37
	.  error

	ident  goto 95

state 44
	statement:  FOR expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	SEMICOLON  shift 96
	.  error


state 45
	expr:  INTEGER.    (54)

	.  reduce 54 (src line 219)


state 46
	expr:  TRUE.    (55)

	.  reduce 55 (src line 220)


state 47
	expr:  FALSE.    (56)

	.  reduce 56 (src line 221)


state 48
	expr:  CHARACTER.    (57)

	.  reduce 57 (src line 222)


state 49
	expr:  STRINGCONST.    (58)

	.  reduce 58 (src line 223)


state 50
	expr:  pairliter.    (59)

	.  reduce 59 (src line 224)


state 51
	expr:  ident.    (60)
	arrayelem:  ident.bracketed 

	OPENSQUARE  shift 87
	.  reduce 60 (src line 225)

	bracketed  goto 86

state 52
	expr:  arrayelem.    (61)

	.  reduce 61 (src line 226)


state 53
	expr:  NOT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 110
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 54
	expr:  LEN.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 111
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 55
	expr:  ORD.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 112
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 56
	expr:  CHR.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 113
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 57
	expr:  SUB.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 114
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 58
	expr:  PLUS.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 115
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 59
	expr:  OPENROUND.expr CLOSEROUND 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 116
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 60
	expr:  CALL.ident OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 37
	.  error

	ident  goto 117

state 61
	pairliter:  NULL.    (90)

	.  reduce 90 (src line 262)


state 62
	function:  typeDef ident.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef ident.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef ident.ASSIGNMENT assignrhs 

	OPENROUND  shift 118
	ASSIGNMENT  shift 119
	.  error


state 63
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 120
	.  error


state 64
	statement:  READ assignlhs.    (30)

	.  reduce 30 (src line 177)


state 65
	assignlhs:  ident.    (15)
	arrayelem:  ident.bracketed 

	OPENSQUARE  shift 87
	.  reduce 15 (src line 153)

	bracketed  goto 86

state 66
	statement:  FREE expr.    (31)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 31 (src line 178)


state 67
	statement:  RETURN expr.    (32)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 32 (src line 179)


state 68
	statement:  EXIT expr.    (33)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 33 (src line 180)


state 69
	statement:  PRINT expr.    (34)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 34 (src line 181)


state 70
	statement:  PRINTLN expr.    (35)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 35 (src line 182)


state 71
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 121
	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  error


state 72
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 122
	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  error


state 73
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 123
	SEMICOLON  shift 42
	.  error


state 74
	statement:  typeDef.ident ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	IDENTIFIER  shift 37
	.  error

	ident  goto 124

state 75
	statement:  error SEMICOLON.    (40)

	.  reduce 40 (src line 190)


state 76
	statement:  error END.    (41)

	.  reduce 41 (src line 194)


state 77
	statement:  error FI.    (42)

	.  reduce 42 (src line 197)


state 78
	statement:  error DONE.    (43)

	.  reduce 43 (src line 201)


state 79
	statement:  CALL ident.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 125
	.  error


state 80
	assignment:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 130
	CALL  shift 60
	FST  shift 38
	SND  shift 39
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENSQUARE  shift 131
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	assignrhs  goto 126
	expr  goto 127
	pairelem  goto 129
	arrayliter  goto 128
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 81
	assignment:  ident PLUS.ASSIGNMENT expr 
	assignment:  ident PLUS.PLUS 

	PLUS  shift 133
	ASSIGNMENT  shift 132
	.  error


state 82
	assignment:  ident SUB.ASSIGNMENT expr 
	assignment:  ident SUB.SUB 

	SUB  shift 135
	ASSIGNMENT  shift 134
	.  error


state 83
	assignment:  ident DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 136
	.  error


state 84
	assignment:  ident MUL.ASSIGNMENT expr 
	assignment:  ident MUL.MUL 

	MUL  shift 138
	ASSIGNMENT  shift 137
	.  error


state 85
	assignment:  ident MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 139
	.  error


state 86
	arrayelem:  ident bracketed.    (87)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 140
	.  reduce 87 (src line 256)


state 87
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 141
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 88
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 145
	.  error

	basetype  goto 143
	typeDef  goto 146
	arraytype  goto 144
	pairtype  goto 27
	pairelemtype  goto 142

state 89
	ident:  IDENTIFIER DOT.ident 

	IDENTIFIER  shift 37
	.  error

	ident  goto 147

state 90
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (91)

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 91 (src line 265)


state 91
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (92)

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 92 (src line 266)


state 92
	class:  CLASS ident OPEN.fieldlist functions CLOSE 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	fieldlist  goto 148
	field  goto 149
	basetype  goto 25
	typeDef  goto 150
	arraytype  goto 26
	pairtype  goto 27

state 93
	statements:  statements SEMICOLON statement.    (22)

	.  reduce 22 (src line 162)


state 94
	statement:  FOR.expr SEMICOLON assignment DO statements DONE 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 44
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 95
	statements:  FOR typeDef ident.ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	ASSIGNMENT  shift 151
	.  error


state 96
	statement:  FOR expr SEMICOLON.assignment DO statements DONE 

	FST  shift 38
	SND  shift 39
	IDENTIFIER  shift 37
	.  error

	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	assignment  goto 152
	ident  goto 29

state 97
	expr:  expr PLUS.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 153
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 98
	expr:  expr SUB.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 154
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 99
	expr:  expr MUL.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 155
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 100
	expr:  expr MOD.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 156
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 101
	expr:  expr DIV.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 157
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 102
	expr:  expr LT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 158
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 103
	expr:  expr GT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 159
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 104
	expr:  expr LTE.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 160
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 105
	expr:  expr GTE.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 161
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 106
	expr:  expr EQ.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 162
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 107
	expr:  expr NEQ.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 163
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 108
	expr:  expr AND.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 164
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 109
	expr:  expr OR.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 165
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 110
	expr:  NOT expr.    (62)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 62 (src line 227)


state 111
	expr:  LEN expr.    (63)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 63 (src line 228)


state 112
	expr:  ORD expr.    (64)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 64 (src line 229)


state 113
	expr:  CHR expr.    (65)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 65 (src line 230)


state 114
	expr:  SUB expr.    (66)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 66 (src line 231)


state 115
	expr:  PLUS expr.    (67)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 67 (src line 232)


state 116
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	CLOSEROUND  shift 166
	.  error


state 117
	expr:  CALL ident.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 167
	.  error


state 118
	function:  typeDef ident OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef ident OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	CLOSEROUND  shift 168
	.  error

	paramlist  goto 169
	param  goto 170
	basetype  goto 25
	typeDef  goto 171
	arraytype  goto 26
	pairtype  goto 27

state 119
	statement:  typeDef ident ASSIGNMENT.assignrhs 

	NEWPAIR  shift 130
	CALL  shift 60
	FST  shift 38
	SND  shift 39
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENSQUARE  shift 131
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	assignrhs  goto 172
	expr  goto 127
	pairelem  goto 129
	arrayliter  goto 128
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 120
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (104)

	.  reduce 104 (src line 283)


state 121
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 173
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 122
	statement:  WHILE expr DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 174
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 123
	statement:  BEGIN statements END.    (39)

	.  reduce 39 (src line 189)


state 124
	statement:  typeDef ident.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 119
	.  error


state 125
	statement:  CALL ident OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (86)

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  reduce 86 (src line 254)

	expr  goto 176
	exprlist  goto 175
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 126
	assignment:  assignlhs ASSIGNMENT assignrhs.    (45)

	.  reduce 45 (src line 209)


state 127
	assignrhs:  expr.    (18)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 18 (src line 157)


state 128
	assignrhs:  arrayliter.    (19)

	.  reduce 19 (src line 158)


state 129
	assignrhs:  pairelem.    (20)

	.  reduce 20 (src line 159)


state 130
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 177
	.  error


state 131
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (86)

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  reduce 86 (src line 254)

	expr  goto 176
	exprlist  goto 178
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 132
	assignment:  ident PLUS ASSIGNMENT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 179
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 133
	assignment:  ident PLUS PLUS.    (51)

	.  reduce 51 (src line 215)


state 134
	assignment:  ident SUB ASSIGNMENT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 180
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 135
	assignment:  ident SUB SUB.    (52)

	.  reduce 52 (src line 216)


state 136
	assignment:  ident DIV ASSIGNMENT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 181
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 137
	assignment:  ident MUL ASSIGNMENT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 182
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 138
	assignment:  ident MUL MUL.    (53)

	.  reduce 53 (src line 217)


state 139
	assignment:  ident MOD ASSIGNMENT.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 183
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 140
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 184
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 141
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	CLOSESQUARE  shift 185
	.  error


state 142
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 186
	.  error


state 143
	pairelemtype:  basetype.    (94)
	typeDef:  basetype.    (97)

	OPENSQUARE  reduce 97 (src line 274)
	.  reduce 94 (src line 270)


state 144
	pairelemtype:  arraytype.    (95)
	typeDef:  arraytype.    (98)

	OPENSQUARE  reduce 98 (src line 275)
	.  reduce 95 (src line 271)


state 145
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (96)

	OPENROUND  shift 88
	.  reduce 96 (src line 272)


state 146
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	.  error


state 147
	ident:  IDENTIFIER DOT ident.    (26)

	.  reduce 26 (src line 172)


state 148
	class:  CLASS ident OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (9)

	COMMA  shift 188
	.  reduce 9 (src line 133)

	functions  goto 187

state 149
	fieldlist:  field.    (6)

	.  reduce 6 (src line 127)


state 150
	field:  typeDef.ident 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	IDENTIFIER  shift 37
	.  error

	ident  goto 189

state 151
	statements:  FOR typeDef ident ASSIGNMENT.assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE 

	NEWPAIR  shift 130
	CALL  shift 60
	FST  shift 38
	SND  shift 39
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENSQUARE  shift 131
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	assignrhs  goto 190
	expr  goto 127
	pairelem  goto 129
	arrayliter  goto 128
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 152
	statement:  FOR expr SEMICOLON assignment.DO statements DONE 

	DO  shift 191
	.  error


state 153
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (68)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 68 (src line 233)


state 154
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (69)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 69 (src line 234)


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (70)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 70 (src line 235)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (71)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 71 (src line 236)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (72)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 72 (src line 237)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (73)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 73 (src line 238)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (74)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 74 (src line 239)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (75)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 75 (src line 240)


state 161
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (76)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 76 (src line 241)


state 162
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (77)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 77 (src line 242)


state 163
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (78)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	.  reduce 78 (src line 243)


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (79)
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 79 (src line 244)


state 165
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (80)

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 80 (src line 245)


state 166
	expr:  OPENROUND expr CLOSEROUND.    (81)

	.  reduce 81 (src line 246)


state 167
	expr:  CALL ident OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (86)

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  reduce 86 (src line 254)

	expr  goto 176
	exprlist  goto 192
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 168
	function:  typeDef ident OPENROUND CLOSEROUND.IS statements END 

	IS  shift 193
	.  error


state 169
	function:  typeDef ident OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 194
	COMMA  shift 195
	.  error


state 170
	paramlist:  param.    (13)

	.  reduce 13 (src line 149)


state 171
	param:  typeDef.ident 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	IDENTIFIER  shift 37
	.  error

	ident  goto 196

state 172
	statement:  typeDef ident ASSIGNMENT assignrhs.    (28)

	.  reduce 28 (src line 175)


state 173
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 197
	SEMICOLON  shift 42
	.  error


state 174
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 198
	SEMICOLON  shift 42
	.  error


state 175
	statement:  CALL ident OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 199
	COMMA  shift 200
	.  error


state 176
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (85)

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 85 (src line 253)


state 177
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 201
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 178
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 202
	COMMA  shift 200
	.  error


state 179
	assignment:  ident PLUS ASSIGNMENT expr.    (46)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 46 (src line 210)


state 180
	assignment:  ident SUB ASSIGNMENT expr.    (47)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 47 (src line 211)


state 181
	assignment:  ident DIV ASSIGNMENT expr.    (48)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 48 (src line 212)


state 182
	assignment:  ident MUL ASSIGNMENT expr.    (49)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 49 (src line 213)


state 183
	assignment:  ident MOD ASSIGNMENT expr.    (50)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 50 (src line 214)


state 184
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	CLOSESQUARE  shift 203
	.  error


state 185
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (89)

	.  reduce 89 (src line 259)


state 186
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 145
	.  error

	basetype  goto 143
	typeDef  goto 146
	arraytype  goto 144
	pairtype  goto 27
	pairelemtype  goto 204

state 187
	class:  CLASS ident OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 205
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	function  goto 8
	basetype  goto 25
	typeDef  goto 206
	arraytype  goto 26
	pairtype  goto 27

state 188
	fieldlist:  fieldlist COMMA.field 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	field  goto 207
	basetype  goto 25
	typeDef  goto 150
	arraytype  goto 26
	pairtype  goto 27

state 189
	field:  typeDef ident.    (7)

	.  reduce 7 (src line 130)


state 190
	statements:  FOR typeDef ident ASSIGNMENT assignrhs.SEMICOLON expr SEMICOLON assignment DO statements DONE 

	SEMICOLON  shift 208
	.  error


state 191
	statement:  FOR expr SEMICOLON assignment DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 209
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 192
	expr:  CALL ident OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 210
	COMMA  shift 200
	.  error


state 193
	function:  typeDef ident OPENROUND CLOSEROUND IS.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 211
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 194
	function:  typeDef ident OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 212
	.  error


state 195
	paramlist:  paramlist COMMA.param 

	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	.  error

	param  goto 213
	basetype  goto 25
	typeDef  goto 171
	arraytype  goto 26
	pairtype  goto 27

state 196
	param:  typeDef ident.    (14)

	.  reduce 14 (src line 151)


state 197
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 214
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 198
	statement:  WHILE expr DO statements DONE.    (38)

	.  reduce 38 (src line 188)


state 199
	statement:  CALL ident OPENROUND exprlist CLOSEROUND.    (44)

	.  reduce 44 (src line 205)


state 200
	exprlist:  exprlist COMMA.expr 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 215
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 201
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	COMMA  shift 216
	.  error


state 202
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (83)

	.  reduce 83 (src line 250)


state 203
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (88)

	.  reduce 88 (src line 258)


state 204
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 217
	.  error


state 205
	class:  CLASS ident OPEN fieldlist functions CLOSE.    (4)

	.  reduce 4 (src line 120)


state 206
	function:  typeDef.ident OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.ident OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 63
	IDENTIFIER  shift 37
	.  error

	ident  goto 218

state 207
	fieldlist:  fieldlist COMMA field.    (5)

	.  reduce 5 (src line 126)


state 208
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON.expr SEMICOLON assignment DO statements DONE 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 219
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 209
	statements:  statements.SEMICOLON statement 
	statement:  FOR expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 220
	SEMICOLON  shift 42
	.  error


state 210
	expr:  CALL ident OPENROUND exprlist CLOSEROUND.    (82)

	.  reduce 82 (src line 247)


state 211
	function:  typeDef ident OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 221
	SEMICOLON  shift 42
	.  error


state 212
	function:  typeDef ident OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 222
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 213
	paramlist:  paramlist COMMA param.    (12)

	.  reduce 12 (src line 148)


state 214
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 223
	SEMICOLON  shift 42
	.  error


state 215
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (84)

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	.  reduce 84 (src line 252)


state 216
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	CALL  shift 60
	NOT  shift 53
	LEN  shift 54
	ORD  shift 55
	CHR  shift 56
	PLUS  shift 58
	SUB  shift 57
	TRUE  shift 46
	FALSE  shift 47
	NULL  shift 61
	OPENROUND  shift 59
	STRINGCONST  shift 49
	IDENTIFIER  shift 37
	INTEGER  shift 45
	CHARACTER  shift 48
	.  error

	expr  goto 224
	arrayelem  goto 52
	pairliter  goto 50
	ident  goto 51

state 217
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (93)

	.  reduce 93 (src line 268)


state 218
	function:  typeDef ident.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef ident.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 118
	.  error


state 219
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON expr.SEMICOLON assignment DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	SEMICOLON  shift 225
	.  error


state 220
	statement:  FOR expr SEMICOLON assignment DO statements DONE.    (37)

	.  reduce 37 (src line 184)


state 221
	function:  typeDef ident OPENROUND CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 135)


state 222
	function:  typeDef ident OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 226
	SEMICOLON  shift 42
	.  error


state 223
	statement:  IF expr THEN statements ELSE statements FI.    (36)

	.  reduce 36 (src line 183)


state 224
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 99
	DIV  shift 101
	MOD  shift 100
	PLUS  shift 97
	SUB  shift 98
	AND  shift 108
	OR  shift 109
	GT  shift 103
	GTE  shift 105
	LT  shift 102
	LTE  shift 104
	EQ  shift 106
	NEQ  shift 107
	CLOSEROUND  shift 227
	.  error


state 225
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON.assignment DO statements DONE 

	FST  shift 38
	SND  shift 39
	IDENTIFIER  shift 37
	.  error

	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	assignment  goto 228
	ident  goto 29

state 226
	function:  typeDef ident OPENROUND paramlist CLOSEROUND IS statements END.    (11)

	.  reduce 11 (src line 141)


state 227
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (21)

	.  reduce 21 (src line 160)


state 228
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment.DO statements DONE 

	DO  shift 229
	.  error


state 229
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO.statements DONE 

	error  shift 23
	BEGIN  shift 22
	SKIP  shift 12
	READ  shift 14
	FREE  shift 15
	RETURN  shift 16
	EXIT  shift 17
	PRINT  shift 18
	PRINTLN  shift 19
	IF  shift 20
	WHILE  shift 21
	CALL  shift 24
	FST  shift 38
	SND  shift 39
	INT  shift 30
	BOOL  shift 31
	CHAR  shift 32
	STRING  shift 33
	PAIR  shift 34
	FOR  shift 10
	IDENTIFIER  shift 37
	.  error

	statement  goto 9
	statements  goto 230
	assignlhs  goto 28
	pairelem  goto 36
	arrayelem  goto 35
	basetype  goto 25
	typeDef  goto 74
	arraytype  goto 26
	pairtype  goto 27
	assignment  goto 13
	ident  goto 29

state 230
	statements:  statements.SEMICOLON statement 
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements.DONE 

	DONE  shift 231
	SEMICOLON  shift 42
	.  error


state 231
	statements:  FOR typeDef ident ASSIGNMENT assignrhs SEMICOLON expr SEMICOLON assignment DO statements DONE.    (24)

	.  reduce 24 (src line 164)


71 terminals, 28 nonterminals
105 grammar rules, 232/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
77 working sets used
memory: parser 519/30000
198 extra closures
1483 shift entries, 3 exceptions
144 goto entries
243 entries saved by goto default
Optimizer space used: output 648/30000
648 table entries, 128 zero
maximum spread: 71, maximum offset: 229
