
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.functions statements END 
	functions: .    (3)

	.  reduce 3 (src line 103)

	functions  goto 3

state 3
	program:  BEGIN functions.statements END 
	functions:  functions.function 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	function  goto 5
	statement  goto 6
	statements  goto 4
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 7
	arraytype  goto 22
	pairtype  goto 23

state 4
	program:  BEGIN functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 33
	SEMICOLON  shift 34
	.  error


state 5
	functions:  functions function.    (2)

	.  reduce 2 (src line 102)


state 6
	statements:  statement.    (18)

	.  reduce 18 (src line 134)


state 7
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 35
	.  error


state 8
	statement:  SKIP.    (19)

	.  reduce 19 (src line 137)


state 9
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 37
	.  error


state 10
	assignlhs:  IDENTIFIER.    (9)
	statement:  IDENTIFIER.PLUS ASSIGNMENT expr 
	statement:  IDENTIFIER.SUB ASSIGNMENT expr 
	statement:  IDENTIFIER.DIV ASSIGNMENT expr 
	statement:  IDENTIFIER.MUL ASSIGNMENT expr 
	statement:  IDENTIFIER.MOD ASSIGNMENT expr 
	statement:  IDENTIFIER.PLUS PLUS 
	statement:  IDENTIFIER.SUB SUB 
	statement:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	MUL  shift 41
	DIV  shift 40
	MOD  shift 42
	PLUS  shift 38
	SUB  shift 39
	OPENSQUARE  shift 44
	.  reduce 9 (src line 123)

	bracketed  goto 43

state 11
	statement:  READ.assignlhs 

	FST  shift 31
	SND  shift 32
	IDENTIFIER  shift 46
	.  error

	assignlhs  goto 45
	pairelem  goto 25
	arrayelem  goto 24

state 12
	statement:  FREE.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 47
	arrayelem  goto 55
	pairliter  goto 53

state 13
	statement:  RETURN.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 64
	arrayelem  goto 55
	pairliter  goto 53

state 14
	statement:  EXIT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 65
	arrayelem  goto 55
	pairliter  goto 53

state 15
	statement:  PRINT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 66
	arrayelem  goto 55
	pairliter  goto 53

state 16
	statement:  PRINTLN.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 67
	arrayelem  goto 55
	pairliter  goto 53

state 17
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 68
	arrayelem  goto 55
	pairliter  goto 53

state 18
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 69
	arrayelem  goto 55
	pairliter  goto 53

state 19
	statement:  BEGIN.statements END 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 70
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 20
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 73
	FI  shift 74
	DONE  shift 75
	SEMICOLON  shift 72
	.  error


state 21
	typeDef:  basetype.    (85)

	.  reduce 85 (src line 236)


state 22
	typeDef:  arraytype.    (86)

	.  reduce 86 (src line 237)


state 23
	typeDef:  pairtype.    (87)

	.  reduce 87 (src line 238)


state 24
	assignlhs:  arrayelem.    (10)

	.  reduce 10 (src line 124)


state 25
	assignlhs:  pairelem.    (11)

	.  reduce 11 (src line 125)


state 26
	basetype:  INT.    (88)

	.  reduce 88 (src line 240)


state 27
	basetype:  BOOL.    (89)

	.  reduce 89 (src line 241)


state 28
	basetype:  CHAR.    (90)

	.  reduce 90 (src line 242)


state 29
	basetype:  STRING.    (91)

	.  reduce 91 (src line 243)


state 30
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 76
	.  error


state 31
	pairelem:  FST.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 77
	arrayelem  goto 55
	pairliter  goto 53

state 32
	pairelem:  SND.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 78
	arrayelem  goto 55
	pairliter  goto 53

state 33
	program:  BEGIN functions statements END.    (1)

	.  reduce 1 (src line 98)


state 34
	statements:  statements SEMICOLON.statement 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 79
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 35
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 80
	ASSIGNMENT  shift 81
	.  error


state 36
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 82
	.  error


state 37
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 87
	CALL  shift 88
	FST  shift 31
	SND  shift 32
	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENSQUARE  shift 89
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	assignrhs  goto 83
	expr  goto 84
	pairelem  goto 86
	arrayliter  goto 85
	arrayelem  goto 55
	pairliter  goto 53

state 38
	statement:  IDENTIFIER PLUS.ASSIGNMENT expr 
	statement:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 91
	ASSIGNMENT  shift 90
	.  error


state 39
	statement:  IDENTIFIER SUB.ASSIGNMENT expr 
	statement:  IDENTIFIER SUB.SUB 

	SUB  shift 93
	ASSIGNMENT  shift 92
	.  error


state 40
	statement:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 94
	.  error


state 41
	statement:  IDENTIFIER MUL.ASSIGNMENT expr 
	statement:  IDENTIFIER MUL.MUL 

	MUL  shift 96
	ASSIGNMENT  shift 95
	.  error


state 42
	statement:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 97
	.  error


state 43
	arrayelem:  IDENTIFIER bracketed.    (75)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 98
	.  reduce 75 (src line 218)


state 44
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 99
	arrayelem  goto 55
	pairliter  goto 53

state 45
	statement:  READ assignlhs.    (30)

	.  reduce 30 (src line 152)


state 46
	assignlhs:  IDENTIFIER.    (9)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 44
	.  reduce 9 (src line 123)

	bracketed  goto 43

state 47
	statement:  FREE expr.    (31)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 31 (src line 153)


state 48
	expr:  INTEGER.    (43)

	.  reduce 43 (src line 177)


state 49
	expr:  TRUE.    (44)

	.  reduce 44 (src line 179)


state 50
	expr:  FALSE.    (45)

	.  reduce 45 (src line 180)


state 51
	expr:  CHARACTER.    (46)

	.  reduce 46 (src line 182)


state 52
	expr:  STRINGCONST.    (47)

	.  reduce 47 (src line 183)


state 53
	expr:  pairliter.    (48)

	.  reduce 48 (src line 184)


state 54
	expr:  IDENTIFIER.    (49)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 44
	.  reduce 49 (src line 185)

	bracketed  goto 43

state 55
	expr:  arrayelem.    (50)

	.  reduce 50 (src line 186)


state 56
	expr:  NOT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 113
	arrayelem  goto 55
	pairliter  goto 53

state 57
	expr:  LEN.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 114
	arrayelem  goto 55
	pairliter  goto 53

state 58
	expr:  ORD.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 115
	arrayelem  goto 55
	pairliter  goto 53

state 59
	expr:  CHR.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 116
	arrayelem  goto 55
	pairliter  goto 53

state 60
	expr:  SUB.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 117
	arrayelem  goto 55
	pairliter  goto 53

state 61
	expr:  PLUS.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 118
	arrayelem  goto 55
	pairliter  goto 53

state 62
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 119
	arrayelem  goto 55
	pairliter  goto 53

state 63
	pairliter:  NULL.    (78)

	.  reduce 78 (src line 224)


state 64
	statement:  RETURN expr.    (32)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 32 (src line 154)


state 65
	statement:  EXIT expr.    (33)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 33 (src line 155)


state 66
	statement:  PRINT expr.    (34)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 34 (src line 156)


state 67
	statement:  PRINTLN expr.    (35)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 35 (src line 157)


state 68
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 120
	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  error


state 69
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 121
	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  error


state 70
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 122
	SEMICOLON  shift 34
	.  error


state 71
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 123
	.  error


state 72
	statement:  error SEMICOLON.    (39)

	.  reduce 39 (src line 161)


state 73
	statement:  error END.    (40)

	.  reduce 40 (src line 165)


state 74
	statement:  error FI.    (41)

	.  reduce 41 (src line 168)


state 75
	statement:  error DONE.    (42)

	.  reduce 42 (src line 172)


state 76
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 127
	.  error

	basetype  goto 125
	typeDef  goto 128
	arraytype  goto 126
	pairtype  goto 23
	pairelemtype  goto 124

state 77
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (79)

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 79 (src line 227)


state 78
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (80)

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 80 (src line 228)


state 79
	statements:  statements SEMICOLON statement.    (17)

	.  reduce 17 (src line 133)


state 80
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	CLOSEROUND  shift 129
	.  error

	paramlist  goto 130
	param  goto 131
	basetype  goto 21
	typeDef  goto 132
	arraytype  goto 22
	pairtype  goto 23

state 81
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 87
	CALL  shift 88
	FST  shift 31
	SND  shift 32
	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENSQUARE  shift 89
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	assignrhs  goto 133
	expr  goto 84
	pairelem  goto 86
	arrayliter  goto 85
	arrayelem  goto 55
	pairliter  goto 53

state 82
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (92)

	.  reduce 92 (src line 245)


state 83
	statement:  assignlhs ASSIGNMENT assignrhs.    (21)

	.  reduce 21 (src line 139)


state 84
	assignrhs:  expr.    (12)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 12 (src line 127)


state 85
	assignrhs:  arrayliter.    (13)

	.  reduce 13 (src line 128)


state 86
	assignrhs:  pairelem.    (14)

	.  reduce 14 (src line 129)


state 87
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 134
	.  error


state 88
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 135
	.  error


state 89
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (74)

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  reduce 74 (src line 216)

	expr  goto 137
	exprlist  goto 136
	arrayelem  goto 55
	pairliter  goto 53

state 90
	statement:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 138
	arrayelem  goto 55
	pairliter  goto 53

state 91
	statement:  IDENTIFIER PLUS PLUS.    (27)

	.  reduce 27 (src line 147)


state 92
	statement:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 139
	arrayelem  goto 55
	pairliter  goto 53

state 93
	statement:  IDENTIFIER SUB SUB.    (28)

	.  reduce 28 (src line 148)


state 94
	statement:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 140
	arrayelem  goto 55
	pairliter  goto 53

state 95
	statement:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 141
	arrayelem  goto 55
	pairliter  goto 53

state 96
	statement:  IDENTIFIER MUL MUL.    (29)

	.  reduce 29 (src line 149)


state 97
	statement:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 142
	arrayelem  goto 55
	pairliter  goto 53

state 98
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 143
	arrayelem  goto 55
	pairliter  goto 53

state 99
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	CLOSESQUARE  shift 144
	.  error


state 100
	expr:  expr PLUS.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 145
	arrayelem  goto 55
	pairliter  goto 53

state 101
	expr:  expr SUB.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 146
	arrayelem  goto 55
	pairliter  goto 53

state 102
	expr:  expr MUL.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 147
	arrayelem  goto 55
	pairliter  goto 53

state 103
	expr:  expr MOD.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 148
	arrayelem  goto 55
	pairliter  goto 53

state 104
	expr:  expr DIV.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 149
	arrayelem  goto 55
	pairliter  goto 53

state 105
	expr:  expr LT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 150
	arrayelem  goto 55
	pairliter  goto 53

state 106
	expr:  expr GT.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 151
	arrayelem  goto 55
	pairliter  goto 53

state 107
	expr:  expr LTE.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 152
	arrayelem  goto 55
	pairliter  goto 53

state 108
	expr:  expr GTE.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 153
	arrayelem  goto 55
	pairliter  goto 53

state 109
	expr:  expr EQ.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 154
	arrayelem  goto 55
	pairliter  goto 53

state 110
	expr:  expr NEQ.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 155
	arrayelem  goto 55
	pairliter  goto 53

state 111
	expr:  expr AND.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 156
	arrayelem  goto 55
	pairliter  goto 53

state 112
	expr:  expr OR.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 157
	arrayelem  goto 55
	pairliter  goto 53

state 113
	expr:  NOT expr.    (51)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 51 (src line 188)


state 114
	expr:  LEN expr.    (52)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 52 (src line 189)


state 115
	expr:  ORD expr.    (53)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 53 (src line 190)


state 116
	expr:  CHR expr.    (54)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 54 (src line 191)


state 117
	expr:  SUB expr.    (55)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 55 (src line 192)


state 118
	expr:  PLUS expr.    (56)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 56 (src line 193)


state 119
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	CLOSEROUND  shift 158
	.  error


state 120
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 159
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 121
	statement:  WHILE expr DO.statements DONE 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 160
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 122
	statement:  BEGIN statements END.    (38)

	.  reduce 38 (src line 160)


state 123
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 81
	.  error


state 124
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 161
	.  error


state 125
	pairelemtype:  basetype.    (82)
	typeDef:  basetype.    (85)

	OPENSQUARE  reduce 85 (src line 236)
	.  reduce 82 (src line 232)


state 126
	pairelemtype:  arraytype.    (83)
	typeDef:  arraytype.    (86)

	OPENSQUARE  reduce 86 (src line 237)
	.  reduce 83 (src line 233)


state 127
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (84)

	OPENROUND  shift 76
	.  reduce 84 (src line 234)


state 128
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	.  error


state 129
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 162
	.  error


state 130
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 163
	COMMA  shift 164
	.  error


state 131
	paramlist:  param.    (7)

	.  reduce 7 (src line 119)


state 132
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 165
	.  error


state 133
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (20)

	.  reduce 20 (src line 138)


state 134
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 166
	arrayelem  goto 55
	pairliter  goto 53

state 135
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 167
	.  error


state 136
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 168
	COMMA  shift 169
	.  error


state 137
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (73)

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 73 (src line 215)


state 138
	statement:  IDENTIFIER PLUS ASSIGNMENT expr.    (22)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 22 (src line 141)


state 139
	statement:  IDENTIFIER SUB ASSIGNMENT expr.    (23)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 23 (src line 142)


state 140
	statement:  IDENTIFIER DIV ASSIGNMENT expr.    (24)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 24 (src line 143)


state 141
	statement:  IDENTIFIER MUL ASSIGNMENT expr.    (25)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 25 (src line 144)


state 142
	statement:  IDENTIFIER MOD ASSIGNMENT expr.    (26)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 26 (src line 145)


state 143
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	CLOSESQUARE  shift 170
	.  error


state 144
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (77)

	.  reduce 77 (src line 221)


state 145
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (57)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 57 (src line 196)


state 146
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (58)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 58 (src line 197)


state 147
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (59)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 59 (src line 198)


state 148
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (60)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 60 (src line 199)


state 149
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (61)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 61 (src line 200)


state 150
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (62)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 62 (src line 201)


state 151
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (63)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 63 (src line 202)


state 152
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (64)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 64 (src line 203)


state 153
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (65)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 65 (src line 204)


state 154
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (66)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 66 (src line 205)


state 155
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (67)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	.  reduce 67 (src line 206)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (68)
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 68 (src line 207)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (69)

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 69 (src line 208)


state 158
	expr:  OPENROUND expr CLOSEROUND.    (70)

	.  reduce 70 (src line 209)


state 159
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 171
	SEMICOLON  shift 34
	.  error


state 160
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 172
	SEMICOLON  shift 34
	.  error


state 161
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 127
	.  error

	basetype  goto 125
	typeDef  goto 128
	arraytype  goto 126
	pairtype  goto 23
	pairelemtype  goto 173

state 162
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 174
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 163
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 175
	.  error


state 164
	paramlist:  paramlist COMMA.param 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	.  error

	param  goto 176
	basetype  goto 21
	typeDef  goto 132
	arraytype  goto 22
	pairtype  goto 23

state 165
	param:  typeDef IDENTIFIER.    (8)

	.  reduce 8 (src line 121)


state 166
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	COMMA  shift 177
	.  error


state 167
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (74)

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  reduce 74 (src line 216)

	expr  goto 137
	exprlist  goto 178
	arrayelem  goto 55
	pairliter  goto 53

state 168
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (71)

	.  reduce 71 (src line 212)


state 169
	exprlist:  exprlist COMMA.expr 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 179
	arrayelem  goto 55
	pairliter  goto 53

state 170
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (76)

	.  reduce 76 (src line 220)


state 171
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 180
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 172
	statement:  WHILE expr DO statements DONE.    (37)

	.  reduce 37 (src line 159)


state 173
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 181
	.  error


state 174
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 182
	SEMICOLON  shift 34
	.  error


state 175
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 20
	BEGIN  shift 19
	SKIP  shift 8
	READ  shift 11
	FREE  shift 12
	RETURN  shift 13
	EXIT  shift 14
	PRINT  shift 15
	PRINTLN  shift 16
	IF  shift 17
	WHILE  shift 18
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 10
	.  error

	statement  goto 6
	statements  goto 183
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 21
	typeDef  goto 71
	arraytype  goto 22
	pairtype  goto 23

state 176
	paramlist:  paramlist COMMA param.    (6)

	.  reduce 6 (src line 118)


state 177
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 56
	LEN  shift 57
	ORD  shift 58
	CHR  shift 59
	PLUS  shift 61
	SUB  shift 60
	TRUE  shift 49
	FALSE  shift 50
	NULL  shift 63
	OPENROUND  shift 62
	STRINGCONST  shift 52
	IDENTIFIER  shift 54
	INTEGER  shift 48
	CHARACTER  shift 51
	.  error

	expr  goto 184
	arrayelem  goto 55
	pairliter  goto 53

state 178
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 185
	COMMA  shift 169
	.  error


state 179
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (72)

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	.  reduce 72 (src line 214)


state 180
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 186
	SEMICOLON  shift 34
	.  error


state 181
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (81)

	.  reduce 81 (src line 230)


state 182
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (4)

	.  reduce 4 (src line 105)


state 183
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 187
	SEMICOLON  shift 34
	.  error


state 184
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 102
	DIV  shift 104
	MOD  shift 103
	PLUS  shift 100
	SUB  shift 101
	AND  shift 111
	OR  shift 112
	GT  shift 106
	GTE  shift 108
	LT  shift 105
	LTE  shift 107
	EQ  shift 109
	NEQ  shift 110
	CLOSEROUND  shift 188
	.  error


state 185
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (16)

	.  reduce 16 (src line 131)


state 186
	statement:  IF expr THEN statements ELSE statements FI.    (36)

	.  reduce 36 (src line 158)


state 187
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (5)

	.  reduce 5 (src line 111)


state 188
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (15)

	.  reduce 15 (src line 130)


64 terminals, 22 nonterminals
93 grammar rules, 189/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 309/30000
165 extra closures
1225 shift entries, 3 exceptions
94 goto entries
144 entries saved by goto default
Optimizer space used: output 416/30000
416 table entries, 36 zero
maximum spread: 64, maximum offset: 177
