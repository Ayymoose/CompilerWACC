
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.functions statements END 
	functions: .    (3)

	.  reduce 3 (src line 102)

	functions  goto 3

state 3
	program:  BEGIN functions.statements END 
	functions:  functions.function 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	function  goto 5
	statement  goto 6
	statements  goto 4
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 7
	arraytype  goto 21
	pairtype  goto 22

state 4
	program:  BEGIN functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 33
	SEMICOLON  shift 34
	.  error


state 5
	functions:  functions function.    (2)

	.  reduce 2 (src line 101)


state 6
	statements:  statement.    (18)

	.  reduce 18 (src line 133)


state 7
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 35
	.  error


state 8
	statement:  SKIP.    (19)

	.  reduce 19 (src line 136)


state 9
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 37
	.  error


state 10
	statement:  READ.assignlhs 

	FST  shift 31
	SND  shift 32
	IDENTIFIER  shift 23
	.  error

	assignlhs  goto 38
	pairelem  goto 25
	arrayelem  goto 24

state 11
	statement:  FREE.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 39
	arrayelem  goto 47
	pairliter  goto 45

state 12
	statement:  RETURN.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 56
	arrayelem  goto 47
	pairliter  goto 45

state 13
	statement:  EXIT.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 57
	arrayelem  goto 47
	pairliter  goto 45

state 14
	statement:  PRINT.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 58
	arrayelem  goto 47
	pairliter  goto 45

state 15
	statement:  PRINTLN.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 59
	arrayelem  goto 47
	pairliter  goto 45

state 16
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 60
	arrayelem  goto 47
	pairliter  goto 45

state 17
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 61
	arrayelem  goto 47
	pairliter  goto 45

state 18
	statement:  BEGIN.statements END 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 6
	statements  goto 62
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 19
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 65
	FI  shift 66
	DONE  shift 67
	SEMICOLON  shift 64
	.  error


state 20
	typeDef:  basetype.    (77)

	.  reduce 77 (src line 212)


state 21
	typeDef:  arraytype.    (78)

	.  reduce 78 (src line 213)


state 22
	typeDef:  pairtype.    (79)

	.  reduce 79 (src line 214)


state 23
	assignlhs:  IDENTIFIER.    (9)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 69
	.  reduce 9 (src line 122)

	bracketed  goto 68

state 24
	assignlhs:  arrayelem.    (10)

	.  reduce 10 (src line 123)


state 25
	assignlhs:  pairelem.    (11)

	.  reduce 11 (src line 124)


state 26
	basetype:  INT.    (80)

	.  reduce 80 (src line 216)


state 27
	basetype:  BOOL.    (81)

	.  reduce 81 (src line 217)


state 28
	basetype:  CHAR.    (82)

	.  reduce 82 (src line 218)


state 29
	basetype:  STRING.    (83)

	.  reduce 83 (src line 219)


state 30
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 70
	.  error


state 31
	pairelem:  FST.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 71
	arrayelem  goto 47
	pairliter  goto 45

state 32
	pairelem:  SND.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 72
	arrayelem  goto 47
	pairliter  goto 45

state 33
	program:  BEGIN functions statements END.    (1)

	.  reduce 1 (src line 97)


state 34
	statements:  statements SEMICOLON.statement 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 73
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 35
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 74
	ASSIGNMENT  shift 75
	.  error


state 36
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 76
	.  error


state 37
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 81
	CALL  shift 82
	FST  shift 31
	SND  shift 32
	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENSQUARE  shift 83
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	assignrhs  goto 77
	expr  goto 78
	pairelem  goto 80
	arrayliter  goto 79
	arrayelem  goto 47
	pairliter  goto 45

state 38
	statement:  READ assignlhs.    (22)

	.  reduce 22 (src line 139)


state 39
	statement:  FREE expr.    (23)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 23 (src line 140)


state 40
	expr:  INTEGER.    (35)

	.  reduce 35 (src line 153)


state 41
	expr:  TRUE.    (36)

	.  reduce 36 (src line 155)


state 42
	expr:  FALSE.    (37)

	.  reduce 37 (src line 156)


state 43
	expr:  CHARACTER.    (38)

	.  reduce 38 (src line 158)


state 44
	expr:  STRINGCONST.    (39)

	.  reduce 39 (src line 159)


state 45
	expr:  pairliter.    (40)

	.  reduce 40 (src line 160)


state 46
	expr:  IDENTIFIER.    (41)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 69
	.  reduce 41 (src line 161)

	bracketed  goto 68

state 47
	expr:  arrayelem.    (42)

	.  reduce 42 (src line 162)


state 48
	expr:  NOT.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 97
	arrayelem  goto 47
	pairliter  goto 45

state 49
	expr:  LEN.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 98
	arrayelem  goto 47
	pairliter  goto 45

state 50
	expr:  ORD.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 99
	arrayelem  goto 47
	pairliter  goto 45

state 51
	expr:  CHR.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 100
	arrayelem  goto 47
	pairliter  goto 45

state 52
	expr:  SUB.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 101
	arrayelem  goto 47
	pairliter  goto 45

state 53
	expr:  PLUS.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 102
	arrayelem  goto 47
	pairliter  goto 45

state 54
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 103
	arrayelem  goto 47
	pairliter  goto 45

state 55
	pairliter:  NULL.    (70)

	.  reduce 70 (src line 200)


state 56
	statement:  RETURN expr.    (24)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 24 (src line 141)


state 57
	statement:  EXIT expr.    (25)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 25 (src line 142)


state 58
	statement:  PRINT expr.    (26)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 26 (src line 143)


state 59
	statement:  PRINTLN expr.    (27)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 27 (src line 144)


state 60
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 104
	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  error


state 61
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 105
	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  error


state 62
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 106
	SEMICOLON  shift 34
	.  error


state 63
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 107
	.  error


state 64
	statement:  error SEMICOLON.    (31)

	.  reduce 31 (src line 148)


state 65
	statement:  error END.    (32)

	.  reduce 32 (src line 149)


state 66
	statement:  error FI.    (33)

	.  reduce 33 (src line 150)


state 67
	statement:  error DONE.    (34)

	.  reduce 34 (src line 151)


state 68
	arrayelem:  IDENTIFIER bracketed.    (67)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 108
	.  reduce 67 (src line 194)


state 69
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 109
	arrayelem  goto 47
	pairliter  goto 45

state 70
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 113
	.  error

	basetype  goto 111
	typeDef  goto 114
	arraytype  goto 112
	pairtype  goto 22
	pairelemtype  goto 110

state 71
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (71)

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 71 (src line 203)


state 72
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (72)

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 72 (src line 204)


state 73
	statements:  statements SEMICOLON statement.    (17)

	.  reduce 17 (src line 132)


state 74
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	CLOSEROUND  shift 115
	.  error

	paramlist  goto 116
	param  goto 117
	basetype  goto 20
	typeDef  goto 118
	arraytype  goto 21
	pairtype  goto 22

state 75
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 81
	CALL  shift 82
	FST  shift 31
	SND  shift 32
	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENSQUARE  shift 83
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	assignrhs  goto 119
	expr  goto 78
	pairelem  goto 80
	arrayliter  goto 79
	arrayelem  goto 47
	pairliter  goto 45

state 76
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (84)

	.  reduce 84 (src line 221)


state 77
	statement:  assignlhs ASSIGNMENT assignrhs.    (21)

	.  reduce 21 (src line 138)


state 78
	assignrhs:  expr.    (12)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 12 (src line 126)


state 79
	assignrhs:  arrayliter.    (13)

	.  reduce 13 (src line 127)


state 80
	assignrhs:  pairelem.    (14)

	.  reduce 14 (src line 128)


state 81
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 120
	.  error


state 82
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 121
	.  error


state 83
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (66)

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  reduce 66 (src line 192)

	expr  goto 123
	exprlist  goto 122
	arrayelem  goto 47
	pairliter  goto 45

state 84
	expr:  expr PLUS.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 124
	arrayelem  goto 47
	pairliter  goto 45

state 85
	expr:  expr SUB.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 125
	arrayelem  goto 47
	pairliter  goto 45

state 86
	expr:  expr MUL.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 126
	arrayelem  goto 47
	pairliter  goto 45

state 87
	expr:  expr MOD.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 127
	arrayelem  goto 47
	pairliter  goto 45

state 88
	expr:  expr DIV.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 128
	arrayelem  goto 47
	pairliter  goto 45

state 89
	expr:  expr LT.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 129
	arrayelem  goto 47
	pairliter  goto 45

state 90
	expr:  expr GT.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 130
	arrayelem  goto 47
	pairliter  goto 45

state 91
	expr:  expr LTE.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 131
	arrayelem  goto 47
	pairliter  goto 45

state 92
	expr:  expr GTE.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 132
	arrayelem  goto 47
	pairliter  goto 45

state 93
	expr:  expr EQ.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 133
	arrayelem  goto 47
	pairliter  goto 45

state 94
	expr:  expr NEQ.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 134
	arrayelem  goto 47
	pairliter  goto 45

state 95
	expr:  expr AND.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 135
	arrayelem  goto 47
	pairliter  goto 45

state 96
	expr:  expr OR.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 136
	arrayelem  goto 47
	pairliter  goto 45

state 97
	expr:  NOT expr.    (43)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 43 (src line 164)


state 98
	expr:  LEN expr.    (44)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 44 (src line 165)


state 99
	expr:  ORD expr.    (45)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 45 (src line 166)


state 100
	expr:  CHR expr.    (46)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 46 (src line 167)


state 101
	expr:  SUB expr.    (47)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 47 (src line 168)


state 102
	expr:  PLUS expr.    (48)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 48 (src line 169)


state 103
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	CLOSEROUND  shift 137
	.  error


state 104
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 6
	statements  goto 138
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 105
	statement:  WHILE expr DO.statements DONE 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 6
	statements  goto 139
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 106
	statement:  BEGIN statements END.    (30)

	.  reduce 30 (src line 147)


state 107
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 75
	.  error


state 108
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 140
	arrayelem  goto 47
	pairliter  goto 45

state 109
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	CLOSESQUARE  shift 141
	.  error


state 110
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 142
	.  error


state 111
	pairelemtype:  basetype.    (74)
	typeDef:  basetype.    (77)

	OPENSQUARE  reduce 77 (src line 212)
	.  reduce 74 (src line 208)


state 112
	pairelemtype:  arraytype.    (75)
	typeDef:  arraytype.    (78)

	OPENSQUARE  reduce 78 (src line 213)
	.  reduce 75 (src line 209)


state 113
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (76)

	OPENROUND  shift 70
	.  reduce 76 (src line 210)


state 114
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	.  error


state 115
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 143
	.  error


state 116
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 144
	COMMA  shift 145
	.  error


state 117
	paramlist:  param.    (7)

	.  reduce 7 (src line 118)


state 118
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 36
	IDENTIFIER  shift 146
	.  error


state 119
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (20)

	.  reduce 20 (src line 137)


state 120
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 147
	arrayelem  goto 47
	pairliter  goto 45

state 121
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 148
	.  error


state 122
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 149
	COMMA  shift 150
	.  error


state 123
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (65)

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 65 (src line 191)


state 124
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (49)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 49 (src line 172)


state 125
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (50)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 50 (src line 173)


state 126
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (51)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 51 (src line 174)


state 127
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (52)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 52 (src line 175)


state 128
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (53)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 53 (src line 176)


state 129
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (54)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 54 (src line 177)


state 130
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (55)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 55 (src line 178)


state 131
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (56)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 56 (src line 179)


state 132
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (57)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 57 (src line 180)


state 133
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (58)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 58 (src line 181)


state 134
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (59)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	.  reduce 59 (src line 182)


state 135
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (60)
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 60 (src line 183)


state 136
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (61)

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 61 (src line 184)


state 137
	expr:  OPENROUND expr CLOSEROUND.    (62)

	.  reduce 62 (src line 185)


state 138
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 151
	SEMICOLON  shift 34
	.  error


state 139
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 152
	SEMICOLON  shift 34
	.  error


state 140
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	CLOSESQUARE  shift 153
	.  error


state 141
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (69)

	.  reduce 69 (src line 197)


state 142
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 113
	.  error

	basetype  goto 111
	typeDef  goto 114
	arraytype  goto 112
	pairtype  goto 22
	pairelemtype  goto 154

state 143
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 6
	statements  goto 155
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 144
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 156
	.  error


state 145
	paramlist:  paramlist COMMA.param 

	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	.  error

	param  goto 157
	basetype  goto 20
	typeDef  goto 118
	arraytype  goto 21
	pairtype  goto 22

state 146
	param:  typeDef IDENTIFIER.    (8)

	.  reduce 8 (src line 120)


state 147
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	COMMA  shift 158
	.  error


state 148
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (66)

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  reduce 66 (src line 192)

	expr  goto 123
	exprlist  goto 159
	arrayelem  goto 47
	pairliter  goto 45

state 149
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (63)

	.  reduce 63 (src line 188)


state 150
	exprlist:  exprlist COMMA.expr 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 160
	arrayelem  goto 47
	pairliter  goto 45

state 151
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 6
	statements  goto 161
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 152
	statement:  WHILE expr DO statements DONE.    (29)

	.  reduce 29 (src line 146)


state 153
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (68)

	.  reduce 68 (src line 196)


state 154
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 162
	.  error


state 155
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 163
	SEMICOLON  shift 34
	.  error


state 156
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 19
	BEGIN  shift 18
	SKIP  shift 8
	READ  shift 10
	FREE  shift 11
	RETURN  shift 12
	EXIT  shift 13
	PRINT  shift 14
	PRINTLN  shift 15
	IF  shift 16
	WHILE  shift 17
	FST  shift 31
	SND  shift 32
	INT  shift 26
	BOOL  shift 27
	CHAR  shift 28
	STRING  shift 29
	PAIR  shift 30
	IDENTIFIER  shift 23
	.  error

	statement  goto 6
	statements  goto 164
	assignlhs  goto 9
	pairelem  goto 25
	arrayelem  goto 24
	basetype  goto 20
	typeDef  goto 63
	arraytype  goto 21
	pairtype  goto 22

state 157
	paramlist:  paramlist COMMA param.    (6)

	.  reduce 6 (src line 117)


state 158
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 48
	LEN  shift 49
	ORD  shift 50
	CHR  shift 51
	PLUS  shift 53
	SUB  shift 52
	TRUE  shift 41
	FALSE  shift 42
	NULL  shift 55
	OPENROUND  shift 54
	STRINGCONST  shift 44
	IDENTIFIER  shift 46
	INTEGER  shift 40
	CHARACTER  shift 43
	.  error

	expr  goto 165
	arrayelem  goto 47
	pairliter  goto 45

state 159
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 166
	COMMA  shift 150
	.  error


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (64)

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	.  reduce 64 (src line 190)


state 161
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 167
	SEMICOLON  shift 34
	.  error


state 162
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (73)

	.  reduce 73 (src line 206)


state 163
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (4)

	.  reduce 4 (src line 104)


state 164
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 168
	SEMICOLON  shift 34
	.  error


state 165
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 86
	DIV  shift 88
	MOD  shift 87
	PLUS  shift 84
	SUB  shift 85
	AND  shift 95
	OR  shift 96
	GT  shift 90
	GTE  shift 92
	LT  shift 89
	LTE  shift 91
	EQ  shift 93
	NEQ  shift 94
	CLOSEROUND  shift 169
	.  error


state 166
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (16)

	.  reduce 16 (src line 130)


state 167
	statement:  IF expr THEN statements ELSE statements FI.    (28)

	.  reduce 28 (src line 145)


state 168
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (5)

	.  reduce 5 (src line 110)


state 169
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (15)

	.  reduce 15 (src line 129)


64 terminals, 22 nonterminals
85 grammar rules, 170/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 279/30000
139 extra closures
1076 shift entries, 3 exceptions
89 goto entries
133 entries saved by goto default
Optimizer space used: output 435/30000
435 table entries, 74 zero
maximum spread: 64, maximum offset: 158
