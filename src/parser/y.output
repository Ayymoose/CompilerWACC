
state 0
	$accept: .program $end 

	BEGIN  shift 2
	.  error

	program  goto 1

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  BEGIN.functions statements END 
	program:  BEGIN.class functions statements END 
	functions: .    (8)

	CLASS  shift 5
	.  reduce 8 (src line 120)

	class  goto 4
	functions  goto 3

state 3
	program:  BEGIN functions.statements END 
	functions:  functions.function 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	function  goto 7
	statement  goto 8
	statements  goto 6
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 9
	arraytype  goto 24
	pairtype  goto 25

state 4
	program:  BEGIN class.functions statements END 
	functions: .    (8)

	.  reduce 8 (src line 120)

	functions  goto 35

state 5
	class:  CLASS.CLASSIDENT OPEN fieldlist functions CLOSE 

	CLASSIDENT  shift 36
	.  error


state 6
	program:  BEGIN functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 37
	SEMICOLON  shift 38
	.  error


state 7
	functions:  functions function.    (7)

	.  reduce 7 (src line 119)


state 8
	statements:  statement.    (23)

	.  reduce 23 (src line 151)


state 9
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 39
	.  error


state 10
	statement:  SKIP.    (24)

	.  reduce 24 (src line 154)


state 11
	statement:  assignlhs.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 41
	.  error


state 12
	assignlhs:  IDENTIFIER.    (14)
	statement:  IDENTIFIER.PLUS ASSIGNMENT expr 
	statement:  IDENTIFIER.SUB ASSIGNMENT expr 
	statement:  IDENTIFIER.DIV ASSIGNMENT expr 
	statement:  IDENTIFIER.MUL ASSIGNMENT expr 
	statement:  IDENTIFIER.MOD ASSIGNMENT expr 
	statement:  IDENTIFIER.PLUS PLUS 
	statement:  IDENTIFIER.SUB SUB 
	statement:  IDENTIFIER.MUL MUL 
	arrayelem:  IDENTIFIER.bracketed 

	MUL  shift 45
	DIV  shift 44
	MOD  shift 46
	PLUS  shift 42
	SUB  shift 43
	OPENSQUARE  shift 48
	.  reduce 14 (src line 140)

	bracketed  goto 47

state 13
	statement:  READ.assignlhs 

	FST  shift 33
	SND  shift 34
	IDENTIFIER  shift 50
	.  error

	assignlhs  goto 49
	pairelem  goto 27
	arrayelem  goto 26

state 14
	statement:  FREE.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 51
	arrayelem  goto 59
	pairliter  goto 57

state 15
	statement:  RETURN.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 68
	arrayelem  goto 59
	pairliter  goto 57

state 16
	statement:  EXIT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 69
	arrayelem  goto 59
	pairliter  goto 57

state 17
	statement:  PRINT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 70
	arrayelem  goto 59
	pairliter  goto 57

state 18
	statement:  PRINTLN.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 71
	arrayelem  goto 59
	pairliter  goto 57

state 19
	statement:  IF.expr THEN statements ELSE statements FI 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 72
	arrayelem  goto 59
	pairliter  goto 57

state 20
	statement:  WHILE.expr DO statements DONE 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 73
	arrayelem  goto 59
	pairliter  goto 57

state 21
	statement:  BEGIN.statements END 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 8
	statements  goto 74
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 22
	statement:  error.SEMICOLON 
	statement:  error.END 
	statement:  error.FI 
	statement:  error.DONE 

	END  shift 77
	FI  shift 78
	DONE  shift 79
	SEMICOLON  shift 76
	.  error


state 23
	typeDef:  basetype.    (90)

	.  reduce 90 (src line 253)


state 24
	typeDef:  arraytype.    (91)

	.  reduce 91 (src line 254)


state 25
	typeDef:  pairtype.    (92)

	.  reduce 92 (src line 255)


state 26
	assignlhs:  arrayelem.    (15)

	.  reduce 15 (src line 141)


state 27
	assignlhs:  pairelem.    (16)

	.  reduce 16 (src line 142)


state 28
	basetype:  INT.    (93)

	.  reduce 93 (src line 257)


state 29
	basetype:  BOOL.    (94)

	.  reduce 94 (src line 258)


state 30
	basetype:  CHAR.    (95)

	.  reduce 95 (src line 259)


state 31
	basetype:  STRING.    (96)

	.  reduce 96 (src line 260)


state 32
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 

	OPENROUND  shift 80
	.  error


state 33
	pairelem:  FST.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 81
	arrayelem  goto 59
	pairliter  goto 57

state 34
	pairelem:  SND.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 82
	arrayelem  goto 59
	pairliter  goto 57

state 35
	program:  BEGIN class functions.statements END 
	functions:  functions.function 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	function  goto 7
	statement  goto 8
	statements  goto 83
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 9
	arraytype  goto 24
	pairtype  goto 25

state 36
	class:  CLASS CLASSIDENT.OPEN fieldlist functions CLOSE 

	OPEN  shift 84
	.  error


state 37
	program:  BEGIN functions statements END.    (1)

	.  reduce 1 (src line 105)


state 38
	statements:  statements SEMICOLON.statement 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 85
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 39
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	OPENROUND  shift 86
	ASSIGNMENT  shift 87
	.  error


state 40
	arraytype:  typeDef OPENSQUARE.CLOSESQUARE 

	CLOSESQUARE  shift 88
	.  error


state 41
	statement:  assignlhs ASSIGNMENT.assignrhs 

	NEWPAIR  shift 93
	CALL  shift 94
	FST  shift 33
	SND  shift 34
	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENSQUARE  shift 95
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	assignrhs  goto 89
	expr  goto 90
	pairelem  goto 92
	arrayliter  goto 91
	arrayelem  goto 59
	pairliter  goto 57

state 42
	statement:  IDENTIFIER PLUS.ASSIGNMENT expr 
	statement:  IDENTIFIER PLUS.PLUS 

	PLUS  shift 97
	ASSIGNMENT  shift 96
	.  error


state 43
	statement:  IDENTIFIER SUB.ASSIGNMENT expr 
	statement:  IDENTIFIER SUB.SUB 

	SUB  shift 99
	ASSIGNMENT  shift 98
	.  error


state 44
	statement:  IDENTIFIER DIV.ASSIGNMENT expr 

	ASSIGNMENT  shift 100
	.  error


state 45
	statement:  IDENTIFIER MUL.ASSIGNMENT expr 
	statement:  IDENTIFIER MUL.MUL 

	MUL  shift 102
	ASSIGNMENT  shift 101
	.  error


state 46
	statement:  IDENTIFIER MOD.ASSIGNMENT expr 

	ASSIGNMENT  shift 103
	.  error


state 47
	arrayelem:  IDENTIFIER bracketed.    (80)
	bracketed:  bracketed.OPENSQUARE expr CLOSESQUARE 

	OPENSQUARE  shift 104
	.  reduce 80 (src line 235)


state 48
	bracketed:  OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 105
	arrayelem  goto 59
	pairliter  goto 57

state 49
	statement:  READ assignlhs.    (35)

	.  reduce 35 (src line 169)


state 50
	assignlhs:  IDENTIFIER.    (14)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 48
	.  reduce 14 (src line 140)

	bracketed  goto 47

state 51
	statement:  FREE expr.    (36)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 36 (src line 170)


state 52
	expr:  INTEGER.    (48)

	.  reduce 48 (src line 194)


state 53
	expr:  TRUE.    (49)

	.  reduce 49 (src line 196)


state 54
	expr:  FALSE.    (50)

	.  reduce 50 (src line 197)


state 55
	expr:  CHARACTER.    (51)

	.  reduce 51 (src line 199)


state 56
	expr:  STRINGCONST.    (52)

	.  reduce 52 (src line 200)


state 57
	expr:  pairliter.    (53)

	.  reduce 53 (src line 201)


state 58
	expr:  IDENTIFIER.    (54)
	arrayelem:  IDENTIFIER.bracketed 

	OPENSQUARE  shift 48
	.  reduce 54 (src line 202)

	bracketed  goto 47

state 59
	expr:  arrayelem.    (55)

	.  reduce 55 (src line 203)


state 60
	expr:  NOT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 119
	arrayelem  goto 59
	pairliter  goto 57

state 61
	expr:  LEN.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 120
	arrayelem  goto 59
	pairliter  goto 57

state 62
	expr:  ORD.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 121
	arrayelem  goto 59
	pairliter  goto 57

state 63
	expr:  CHR.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 122
	arrayelem  goto 59
	pairliter  goto 57

state 64
	expr:  SUB.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 123
	arrayelem  goto 59
	pairliter  goto 57

state 65
	expr:  PLUS.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 124
	arrayelem  goto 59
	pairliter  goto 57

state 66
	expr:  OPENROUND.expr CLOSEROUND 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 125
	arrayelem  goto 59
	pairliter  goto 57

state 67
	pairliter:  NULL.    (83)

	.  reduce 83 (src line 241)


state 68
	statement:  RETURN expr.    (37)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 37 (src line 171)


state 69
	statement:  EXIT expr.    (38)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 38 (src line 172)


state 70
	statement:  PRINT expr.    (39)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 39 (src line 173)


state 71
	statement:  PRINTLN expr.    (40)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 40 (src line 174)


state 72
	statement:  IF expr.THEN statements ELSE statements FI 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	THEN  shift 126
	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  error


state 73
	statement:  WHILE expr.DO statements DONE 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	DO  shift 127
	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  error


state 74
	statements:  statements.SEMICOLON statement 
	statement:  BEGIN statements.END 

	END  shift 128
	SEMICOLON  shift 38
	.  error


state 75
	statement:  typeDef.IDENTIFIER ASSIGNMENT assignrhs 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 129
	.  error


state 76
	statement:  error SEMICOLON.    (44)

	.  reduce 44 (src line 178)


state 77
	statement:  error END.    (45)

	.  reduce 45 (src line 182)


state 78
	statement:  error FI.    (46)

	.  reduce 46 (src line 185)


state 79
	statement:  error DONE.    (47)

	.  reduce 47 (src line 189)


state 80
	pairtype:  PAIR OPENROUND.pairelemtype COMMA pairelemtype CLOSEROUND 

	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 133
	.  error

	basetype  goto 131
	typeDef  goto 134
	arraytype  goto 132
	pairtype  goto 25
	pairelemtype  goto 130

state 81
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  FST expr.    (84)

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 84 (src line 244)


state 82
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	pairelem:  SND expr.    (85)

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 85 (src line 245)


state 83
	program:  BEGIN class functions statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 135
	SEMICOLON  shift 38
	.  error


state 84
	class:  CLASS CLASSIDENT OPEN.fieldlist functions CLOSE 

	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	.  error

	fieldlist  goto 136
	field  goto 137
	basetype  goto 23
	typeDef  goto 138
	arraytype  goto 24
	pairtype  goto 25

state 85
	statements:  statements SEMICOLON statement.    (22)

	.  reduce 22 (src line 150)


state 86
	function:  typeDef IDENTIFIER OPENROUND.CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER OPENROUND.paramlist CLOSEROUND IS statements END 

	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	CLOSEROUND  shift 139
	.  error

	paramlist  goto 140
	param  goto 141
	basetype  goto 23
	typeDef  goto 142
	arraytype  goto 24
	pairtype  goto 25

state 87
	statement:  typeDef IDENTIFIER ASSIGNMENT.assignrhs 

	NEWPAIR  shift 93
	CALL  shift 94
	FST  shift 33
	SND  shift 34
	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENSQUARE  shift 95
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	assignrhs  goto 143
	expr  goto 90
	pairelem  goto 92
	arrayliter  goto 91
	arrayelem  goto 59
	pairliter  goto 57

state 88
	arraytype:  typeDef OPENSQUARE CLOSESQUARE.    (97)

	.  reduce 97 (src line 262)


state 89
	statement:  assignlhs ASSIGNMENT assignrhs.    (26)

	.  reduce 26 (src line 156)


state 90
	assignrhs:  expr.    (17)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 17 (src line 144)


state 91
	assignrhs:  arrayliter.    (18)

	.  reduce 18 (src line 145)


state 92
	assignrhs:  pairelem.    (19)

	.  reduce 19 (src line 146)


state 93
	assignrhs:  NEWPAIR.OPENROUND expr COMMA expr CLOSEROUND 

	OPENROUND  shift 144
	.  error


state 94
	assignrhs:  CALL.IDENTIFIER OPENROUND exprlist CLOSEROUND 

	IDENTIFIER  shift 145
	.  error


state 95
	arrayliter:  OPENSQUARE.exprlist CLOSESQUARE 
	exprlist: .    (79)

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  reduce 79 (src line 233)

	expr  goto 147
	exprlist  goto 146
	arrayelem  goto 59
	pairliter  goto 57

state 96
	statement:  IDENTIFIER PLUS ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 148
	arrayelem  goto 59
	pairliter  goto 57

state 97
	statement:  IDENTIFIER PLUS PLUS.    (32)

	.  reduce 32 (src line 164)


state 98
	statement:  IDENTIFIER SUB ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 149
	arrayelem  goto 59
	pairliter  goto 57

state 99
	statement:  IDENTIFIER SUB SUB.    (33)

	.  reduce 33 (src line 165)


state 100
	statement:  IDENTIFIER DIV ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 150
	arrayelem  goto 59
	pairliter  goto 57

state 101
	statement:  IDENTIFIER MUL ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 151
	arrayelem  goto 59
	pairliter  goto 57

state 102
	statement:  IDENTIFIER MUL MUL.    (34)

	.  reduce 34 (src line 166)


state 103
	statement:  IDENTIFIER MOD ASSIGNMENT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 152
	arrayelem  goto 59
	pairliter  goto 57

state 104
	bracketed:  bracketed OPENSQUARE.expr CLOSESQUARE 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 153
	arrayelem  goto 59
	pairliter  goto 57

state 105
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	CLOSESQUARE  shift 154
	.  error


state 106
	expr:  expr PLUS.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 155
	arrayelem  goto 59
	pairliter  goto 57

state 107
	expr:  expr SUB.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 156
	arrayelem  goto 59
	pairliter  goto 57

state 108
	expr:  expr MUL.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 157
	arrayelem  goto 59
	pairliter  goto 57

state 109
	expr:  expr MOD.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 158
	arrayelem  goto 59
	pairliter  goto 57

state 110
	expr:  expr DIV.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 159
	arrayelem  goto 59
	pairliter  goto 57

state 111
	expr:  expr LT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 160
	arrayelem  goto 59
	pairliter  goto 57

state 112
	expr:  expr GT.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 161
	arrayelem  goto 59
	pairliter  goto 57

state 113
	expr:  expr LTE.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 162
	arrayelem  goto 59
	pairliter  goto 57

state 114
	expr:  expr GTE.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 163
	arrayelem  goto 59
	pairliter  goto 57

state 115
	expr:  expr EQ.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 164
	arrayelem  goto 59
	pairliter  goto 57

state 116
	expr:  expr NEQ.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 165
	arrayelem  goto 59
	pairliter  goto 57

state 117
	expr:  expr AND.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 166
	arrayelem  goto 59
	pairliter  goto 57

state 118
	expr:  expr OR.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 167
	arrayelem  goto 59
	pairliter  goto 57

state 119
	expr:  NOT expr.    (56)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 56 (src line 205)


state 120
	expr:  LEN expr.    (57)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 57 (src line 206)


state 121
	expr:  ORD expr.    (58)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 58 (src line 207)


state 122
	expr:  CHR expr.    (59)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 59 (src line 208)


state 123
	expr:  SUB expr.    (60)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 60 (src line 209)


state 124
	expr:  PLUS expr.    (61)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 61 (src line 210)


state 125
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  OPENROUND expr.CLOSEROUND 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	CLOSEROUND  shift 168
	.  error


state 126
	statement:  IF expr THEN.statements ELSE statements FI 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 8
	statements  goto 169
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 127
	statement:  WHILE expr DO.statements DONE 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 8
	statements  goto 170
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 128
	statement:  BEGIN statements END.    (43)

	.  reduce 43 (src line 177)


state 129
	statement:  typeDef IDENTIFIER.ASSIGNMENT assignrhs 

	ASSIGNMENT  shift 87
	.  error


state 130
	pairtype:  PAIR OPENROUND pairelemtype.COMMA pairelemtype CLOSEROUND 

	COMMA  shift 171
	.  error


state 131
	pairelemtype:  basetype.    (87)
	typeDef:  basetype.    (90)

	OPENSQUARE  reduce 90 (src line 253)
	.  reduce 87 (src line 249)


state 132
	pairelemtype:  arraytype.    (88)
	typeDef:  arraytype.    (91)

	OPENSQUARE  reduce 91 (src line 254)
	.  reduce 88 (src line 250)


state 133
	pairtype:  PAIR.OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND 
	pairelemtype:  PAIR.    (89)

	OPENROUND  shift 80
	.  reduce 89 (src line 251)


state 134
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	.  error


state 135
	program:  BEGIN class functions statements END.    (2)

	.  reduce 2 (src line 108)


state 136
	class:  CLASS CLASSIDENT OPEN fieldlist.functions CLOSE 
	fieldlist:  fieldlist.COMMA field 
	functions: .    (8)

	COMMA  shift 173
	.  reduce 8 (src line 120)

	functions  goto 172

state 137
	fieldlist:  field.    (5)

	.  reduce 5 (src line 115)


state 138
	field:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 174
	.  error


state 139
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND.IS statements END 

	IS  shift 175
	.  error


state 140
	function:  typeDef IDENTIFIER OPENROUND paramlist.CLOSEROUND IS statements END 
	paramlist:  paramlist.COMMA param 

	CLOSEROUND  shift 176
	COMMA  shift 177
	.  error


state 141
	paramlist:  param.    (12)

	.  reduce 12 (src line 136)


state 142
	param:  typeDef.IDENTIFIER 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 178
	.  error


state 143
	statement:  typeDef IDENTIFIER ASSIGNMENT assignrhs.    (25)

	.  reduce 25 (src line 155)


state 144
	assignrhs:  NEWPAIR OPENROUND.expr COMMA expr CLOSEROUND 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 179
	arrayelem  goto 59
	pairliter  goto 57

state 145
	assignrhs:  CALL IDENTIFIER.OPENROUND exprlist CLOSEROUND 

	OPENROUND  shift 180
	.  error


state 146
	arrayliter:  OPENSQUARE exprlist.CLOSESQUARE 
	exprlist:  exprlist.COMMA expr 

	CLOSESQUARE  shift 181
	COMMA  shift 182
	.  error


state 147
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  expr.    (78)

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 78 (src line 232)


state 148
	statement:  IDENTIFIER PLUS ASSIGNMENT expr.    (27)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 27 (src line 158)


state 149
	statement:  IDENTIFIER SUB ASSIGNMENT expr.    (28)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 28 (src line 159)


state 150
	statement:  IDENTIFIER DIV ASSIGNMENT expr.    (29)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 29 (src line 160)


state 151
	statement:  IDENTIFIER MUL ASSIGNMENT expr.    (30)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 30 (src line 161)


state 152
	statement:  IDENTIFIER MOD ASSIGNMENT expr.    (31)
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 31 (src line 162)


state 153
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	bracketed:  bracketed OPENSQUARE expr.CLOSESQUARE 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	CLOSESQUARE  shift 183
	.  error


state 154
	bracketed:  OPENSQUARE expr CLOSESQUARE.    (82)

	.  reduce 82 (src line 238)


state 155
	expr:  expr.PLUS expr 
	expr:  expr PLUS expr.    (62)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 62 (src line 213)


state 156
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (63)
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 63 (src line 214)


state 157
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (64)
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 64 (src line 215)


state 158
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (65)
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 65 (src line 216)


state 159
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (66)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 66 (src line 217)


state 160
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (67)
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 67 (src line 218)


state 161
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (68)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 68 (src line 219)


state 162
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (69)
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 69 (src line 220)


state 163
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (70)
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	.  reduce 70 (src line 221)


state 164
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (71)
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 71 (src line 222)


state 165
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (72)
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	.  reduce 72 (src line 223)


state 166
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (73)
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 73 (src line 224)


state 167
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (74)

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 74 (src line 225)


state 168
	expr:  OPENROUND expr CLOSEROUND.    (75)

	.  reduce 75 (src line 226)


state 169
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements.ELSE statements FI 

	ELSE  shift 184
	SEMICOLON  shift 38
	.  error


state 170
	statements:  statements.SEMICOLON statement 
	statement:  WHILE expr DO statements.DONE 

	DONE  shift 185
	SEMICOLON  shift 38
	.  error


state 171
	pairtype:  PAIR OPENROUND pairelemtype COMMA.pairelemtype CLOSEROUND 

	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 133
	.  error

	basetype  goto 131
	typeDef  goto 134
	arraytype  goto 132
	pairtype  goto 25
	pairelemtype  goto 186

state 172
	class:  CLASS CLASSIDENT OPEN fieldlist functions.CLOSE 
	functions:  functions.function 

	CLOSE  shift 187
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	.  error

	function  goto 7
	basetype  goto 23
	typeDef  goto 188
	arraytype  goto 24
	pairtype  goto 25

state 173
	fieldlist:  fieldlist COMMA.field 

	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	.  error

	field  goto 189
	basetype  goto 23
	typeDef  goto 138
	arraytype  goto 24
	pairtype  goto 25

state 174
	field:  typeDef IDENTIFIER.    (6)

	.  reduce 6 (src line 117)


state 175
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS.statements END 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 8
	statements  goto 190
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 176
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND.IS statements END 

	IS  shift 191
	.  error


state 177
	paramlist:  paramlist COMMA.param 

	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	.  error

	param  goto 192
	basetype  goto 23
	typeDef  goto 142
	arraytype  goto 24
	pairtype  goto 25

state 178
	param:  typeDef IDENTIFIER.    (13)

	.  reduce 13 (src line 138)


state 179
	assignrhs:  NEWPAIR OPENROUND expr.COMMA expr CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	COMMA  shift 193
	.  error


state 180
	assignrhs:  CALL IDENTIFIER OPENROUND.exprlist CLOSEROUND 
	exprlist: .    (79)

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  reduce 79 (src line 233)

	expr  goto 147
	exprlist  goto 194
	arrayelem  goto 59
	pairliter  goto 57

state 181
	arrayliter:  OPENSQUARE exprlist CLOSESQUARE.    (76)

	.  reduce 76 (src line 229)


state 182
	exprlist:  exprlist COMMA.expr 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 195
	arrayelem  goto 59
	pairliter  goto 57

state 183
	bracketed:  bracketed OPENSQUARE expr CLOSESQUARE.    (81)

	.  reduce 81 (src line 237)


state 184
	statement:  IF expr THEN statements ELSE.statements FI 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 8
	statements  goto 196
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 185
	statement:  WHILE expr DO statements DONE.    (42)

	.  reduce 42 (src line 176)


state 186
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype.CLOSEROUND 

	CLOSEROUND  shift 197
	.  error


state 187
	class:  CLASS CLASSIDENT OPEN fieldlist functions CLOSE.    (3)

	.  reduce 3 (src line 112)


state 188
	function:  typeDef.IDENTIFIER OPENROUND CLOSEROUND IS statements END 
	function:  typeDef.IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END 
	arraytype:  typeDef.OPENSQUARE CLOSESQUARE 

	OPENSQUARE  shift 40
	IDENTIFIER  shift 198
	.  error


state 189
	fieldlist:  fieldlist COMMA field.    (4)

	.  reduce 4 (src line 114)


state 190
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 199
	SEMICOLON  shift 38
	.  error


state 191
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS.statements END 

	error  shift 22
	BEGIN  shift 21
	SKIP  shift 10
	READ  shift 13
	FREE  shift 14
	RETURN  shift 15
	EXIT  shift 16
	PRINT  shift 17
	PRINTLN  shift 18
	IF  shift 19
	WHILE  shift 20
	FST  shift 33
	SND  shift 34
	INT  shift 28
	BOOL  shift 29
	CHAR  shift 30
	STRING  shift 31
	PAIR  shift 32
	IDENTIFIER  shift 12
	.  error

	statement  goto 8
	statements  goto 200
	assignlhs  goto 11
	pairelem  goto 27
	arrayelem  goto 26
	basetype  goto 23
	typeDef  goto 75
	arraytype  goto 24
	pairtype  goto 25

state 192
	paramlist:  paramlist COMMA param.    (11)

	.  reduce 11 (src line 135)


state 193
	assignrhs:  NEWPAIR OPENROUND expr COMMA.expr CLOSEROUND 

	NOT  shift 60
	LEN  shift 61
	ORD  shift 62
	CHR  shift 63
	PLUS  shift 65
	SUB  shift 64
	TRUE  shift 53
	FALSE  shift 54
	NULL  shift 67
	OPENROUND  shift 66
	STRINGCONST  shift 56
	IDENTIFIER  shift 58
	INTEGER  shift 52
	CHARACTER  shift 55
	.  error

	expr  goto 201
	arrayelem  goto 59
	pairliter  goto 57

state 194
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist.CLOSEROUND 
	exprlist:  exprlist.COMMA expr 

	CLOSEROUND  shift 202
	COMMA  shift 182
	.  error


state 195
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	exprlist:  exprlist COMMA expr.    (77)

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	.  reduce 77 (src line 231)


state 196
	statements:  statements.SEMICOLON statement 
	statement:  IF expr THEN statements ELSE statements.FI 

	FI  shift 203
	SEMICOLON  shift 38
	.  error


state 197
	pairtype:  PAIR OPENROUND pairelemtype COMMA pairelemtype CLOSEROUND.    (86)

	.  reduce 86 (src line 247)


state 198
	function:  typeDef IDENTIFIER.OPENROUND CLOSEROUND IS statements END 
	function:  typeDef IDENTIFIER.OPENROUND paramlist CLOSEROUND IS statements END 

	OPENROUND  shift 86
	.  error


state 199
	function:  typeDef IDENTIFIER OPENROUND CLOSEROUND IS statements END.    (9)

	.  reduce 9 (src line 122)


state 200
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements.END 
	statements:  statements.SEMICOLON statement 

	END  shift 204
	SEMICOLON  shift 38
	.  error


state 201
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr.CLOSEROUND 
	expr:  expr.PLUS expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.MOD expr 
	expr:  expr.DIV expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.EQ expr 
	expr:  expr.NEQ expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 

	MUL  shift 108
	DIV  shift 110
	MOD  shift 109
	PLUS  shift 106
	SUB  shift 107
	AND  shift 117
	OR  shift 118
	GT  shift 112
	GTE  shift 114
	LT  shift 111
	LTE  shift 113
	EQ  shift 115
	NEQ  shift 116
	CLOSEROUND  shift 205
	.  error


state 202
	assignrhs:  CALL IDENTIFIER OPENROUND exprlist CLOSEROUND.    (21)

	.  reduce 21 (src line 148)


state 203
	statement:  IF expr THEN statements ELSE statements FI.    (41)

	.  reduce 41 (src line 175)


state 204
	function:  typeDef IDENTIFIER OPENROUND paramlist CLOSEROUND IS statements END.    (10)

	.  reduce 10 (src line 128)


state 205
	assignrhs:  NEWPAIR OPENROUND expr COMMA expr CLOSEROUND.    (20)

	.  reduce 20 (src line 147)


68 terminals, 25 nonterminals
98 grammar rules, 206/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
74 working sets used
memory: parser 331/30000
176 extra closures
1271 shift entries, 3 exceptions
106 goto entries
161 entries saved by goto default
Optimizer space used: output 452/30000
452 table entries, 43 zero
maximum spread: 68, maximum offset: 193
